AS65 Assembler for R6502 [1.42].                                     Page    1
-------------------------- 6502_functional_test.a65 --------------------------

5597 lines read, no errors in pass 1.
                        ;
                        ; 6 5 0 2   F U N C T I O N A L   T E S T
                        ;
                        ; Copyright (C) 2012-2013  Klaus Dormann
                        ;
                        ; This program is free software: you can redistribute 
                        ; it under the terms of the GNU General Public License
                        ; the Free Software Foundation, either version 3 of th
                        ; (at your option) any later version.
                        ;
                        ; This program is distributed in the hope that it will
                        ; but WITHOUT ANY WARRANTY; without even the implied w
                        ; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
                        ; GNU General Public License for more details.
                        ;
                        ; You should have received a copy of the GNU General P
                        ; along with this program.  If not, see <http://www.gn
                        
                        
                        ; This program is designed to test all opcodes of a 65
                        ; addressing modes with focus on propper setting of th
                        ; register bits.
                        ; 
                        ; version 23-jul-2013
                        ; contact info at http://2m5.de or email K@2m5.de
                        ;
                        ; assembled with AS65 from http://www.kingswood-consul
                        ; command line switches: -l -m -s2 -w -h0
                        ;                         |  |  |   |  no page headers
                        ;                         |  |  |   wide listing (133 
                        ;                         |  |  write intel hex file i
                        ;                         |  expand macros in listing
                        ;                         generate pass2 listing
                        ;
                        ; No IO - should be run from a monitor with access to 
                        ; To run load intel hex image with a load command, tha
                        ; (code_segment) and enter a go command.
                        ; Loop on program counter determines error or successf
                        ; Check listing for relevant traps (jump/branch *).
                        ; Please note that in early tests some instructions wi
                        ; they are actually tested!
                        ;
                        ; RESET, NMI or IRQ should not occur and will be trapp
                        ; Tests documented behavior of the original NMOS 6502 
                        ; opcodes. Additional opcodes of newer versions of the
                        ; not be tested. Decimal ops will only be tested with 
                        ; N V Z flags will be ignored.
                        ;
                        ; Debugging hints:
                        ;     Most of the code is written sequentially. if you
                        ;   immediately preceeding code for the instruction to
                        ;   tested first, flags are checked second by pushing 
                        ;   pulling them to the accumulator after the result w
                        ;   flags are no longer valid for the tested instructi
                        ;     If the tested instruction was indexed, the relev
                        ;   also be checked. Opposed to the flags, X and Y reg
                        ;
                        ; versions:
                        ;   28-jul-2012  1st version distributed for testing
                        ;   29-jul-2012  fixed references to location 0, now #
                        ;                added license - GPLv3
                        ;   30-jul-2012  added configuration options
                        ;   01-aug-2012  added trap macro to allow user to cha
                        ;   01-dec-2012  fixed trap in branch field must be a 
                        ;   02-mar-2013  fixed PLA flags not tested
                        ;   19-jul-2013  allowed ROM vectors to be loaded when
                        ;                added test sequence check to detect i
                        ;   23-jul-2013  added RAM integrity check
                        
                        ; C O N F I G U R A T I O N
                        ;
                        ;ROM_vectors writable (0=no, 1=yes)
                        ;if ROM vectors can not be used interrupts will not be
                        ;as a consequence BRK can not be tested but will be em
0001 =                  ROM_vectors = 1
                        ;load_data_direct (0=move from code segment, 1=load di
                        ;loading directly is preferred but may not be supporte
                        ;0 produces only consecutive object code, 1 is not sui
0000 =                  load_data_direct = 0
                        ;I_flag behavior (0=force enabled, 1=force disabled, 2
                        ;change) 2 requires extra code and is not recommended.
                        ;tested if you allow changing the interrupt status (I_
0003 =                  I_flag = 3
                        ;configure memory - try to stay away from memory used 
                        ;zero_page memory start address, $50 (80) consecutive 
                        ;                                add 2 if I_flag = 2
000a =                  zero_page = $a  
                        ;data_segment memory start address, $5B (91) consecuti
0200 =                  data_segment = $200  
                            if (data_segment & $ff) != 0
                                ERROR ERROR ERROR low byte of data_segment MUS
                            endif  
                        ;code_segment memory start address, 13kB of consecutiv
                        ;                                   add 2.5 kB if I_fl
                        ;parts of the code are self modifying and must reside 
0400 =                  code_segment = $400  
                        ;RAM integrity test option. Checks for undesired RAM w
                        ;set lowest non RAM or RAM mirror address page (-1=dis
                        ;leave disabled if a monitor, OS or background interru
ffff =                  ram_top = -1
                        
                                noopt       ;do not take shortcuts
                        
                        ;macros for error & success traps to allow user modifi
                        ;example:
                        ;trap    macro
                        ;        jsr my_error_handler
                        ;        endm
                        ;trap_eq macro
                        ;        bne skip\?
                        ;        trap           ;failed equal (zero)
                        ;skip\?
                        ;        endm
                        ;
                        ; my_error_handler should pop the calling address from
                        ; putting larger portions of code (more than 3 bytes) 
                        ; may lead to branch range problems for some tests.
                        trap    macro
                                jmp *           ;failed anyway
                                endm
                        trap_eq macro
                                beq *           ;failed equal (zero)
                                endm
                        trap_ne macro
                                bne *           ;failed not equal (non zero)
                                endm
                        trap_cs macro
                                bcs *           ;failed carry set
                                endm
                        trap_cc macro
                                bcc *           ;failed carry clear
                                endm
                        trap_mi macro
                                bmi *           ;failed minus (bit 7 set)
                                endm
                        trap_pl macro
                                bpl *           ;failed plus (bit 7 clear)
                                endm
                        trap_vs macro
                                bvs *           ;failed overflow set
                                endm
                        trap_vc macro
                                bvc *           ;failed overflow clear
                                endm
                        success macro
                                jmp *           ;test passed, no errors
                                endm
                        
                        
0001 =                  carry   equ %00000001   ;flag bits in status
0002 =                  zero    equ %00000010
0004 =                  intdis  equ %00000100
0008 =                  decmode equ %00001000
0010 =                  break   equ %00010000
0020 =                  reserv  equ %00100000
0040 =                  overfl  equ %01000000
0080 =                  minus   equ %10000000
                        
0001 =                  fc      equ carry
0002 =                  fz      equ zero
0003 =                  fzc     equ carry+zero
0040 =                  fv      equ overfl
0042 =                  fvz     equ overfl+zero
0080 =                  fn      equ minus
0081 =                  fnc     equ minus+carry
0082 =                  fnz     equ minus+zero
0083 =                  fnzc    equ minus+zero+carry
00c0 =                  fnv     equ minus+overfl
                        
0030 =                  fao     equ break+reserv    ;bits always on after PHP,
0034 =                  fai     equ fao+intdis      ;+ forced interrupt disabl
00ff =                  m8      equ $ff             ;8 bit mask
00fb =                  m8i     equ $ff&~intdis     ;8 bit mask - interrupt di
                        
                        ;macros to allow masking of status bits.
                        ;masking of interrupt enable/disable on load and compa
                        ;masking of always on bits after PHP or BRK (unused & 
                                if I_flag = 0
                        load_flag   macro
                                    lda #\1&m8i         ;force enable interrup
                                    endm
                        cmp_flag    macro
                                    cmp #(\1|fao)&m8i   ;I_flag is always enab
                                    endm
                        eor_flag    macro
                                    eor #(\1&m8i|fao)   ;mask I, invert expect
                                    endm
                                endif
                                if I_flag = 1
                        load_flag   macro
                                    lda #\1|intdis      ;force disable interru
                                    endm
                        cmp_flag    macro
                                    cmp #(\1|fai)&m8    ;I_flag is always disa
                                    endm
                        eor_flag    macro
                                    eor #(\1|fai)       ;invert expected flags
                                    endm
                                endif
                                if I_flag = 2
                        load_flag   macro
                                    lda #\1
                                    ora flag_I_on       ;restore I-flag
                                    and flag_I_off
                                    endm
                        cmp_flag    macro
                                    eor flag_I_on       ;I_flag is never chang
                                    cmp #(\1|fao)&m8i   ;expected flags + alwa
                                    endm
                        eor_flag    macro
                                    eor flag_I_on       ;I_flag is never chang
                                    eor #(\1&m8i|fao)   ;mask I, invert expect
                                    endm
                                endif
                                if I_flag = 3
                        load_flag   macro
                                    lda #\1             ;allow test to change 
                                    endm
                        cmp_flag    macro
                                    cmp #(\1|fao)&m8    ;expected flags + alwa
                                    endm
                        eor_flag    macro
                                    eor #\1|fao         ;invert expected flags
                                    endm
                                endif
                        
                        ;macros to set (register|memory|zeropage) & status
                        set_stat    macro       ;setting flags in the processo
                                    load_flag \1
                                    pha         ;use stack to load status
                                    plp
                                    endm
                        
                        set_a       macro       ;precharging accu & status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda #\1     ;precharge accu
                                    plp
                                    endm
                        
                        set_x       macro       ;precharging index & status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    ldx #\1     ;precharge index x
                                    plp
                                    endm
                        
                        set_y       macro       ;precharging index & status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    ldy #\1     ;precharge index y
                                    plp
                                    endm
                        
                        set_ax      macro       ;precharging indexed accu & im
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda \1,x    ;precharge accu
                                    plp
                                    endm
                        
                        set_ay      macro       ;precharging indexed accu & im
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda \1,y    ;precharge accu
                                    plp
                                    endm
                        
                        set_z       macro       ;precharging indexed zp & imme
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda \1,x    ;load to zeropage
                                    sta zpt
                                    plp
                                    endm
                        
                        set_zx      macro       ;precharging zp,x & immediate 
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda \1,x    ;load to indexed zeropage
                                    sta zpt,x
                                    plp
                                    endm
                        
                        set_abs     macro       ;precharging indexed memory & 
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda \1,x    ;load to memory
                                    sta abst
                                    plp
                                    endm
                        
                        set_absx    macro       ;precharging abs,x & immediate
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda \1,x    ;load to indexed memory
                                    sta abst,x
                                    plp
                                    endm
                        
                        ;macros to test (register|memory|zeropage) & status & 
                        tst_stat    macro       ;testing flags in the processo
                                    php         ;save status
                                    php         ;use stack to retrieve status
                                    pla
                                    cmp_flag \1
                                    trap_ne
                                    plp         ;restore status
                                    endm
                                    
                        tst_a       macro       ;testing result in accu & flag
                                    php         ;save flags
                                    php
                                    cmp #\1     ;test result
                                    trap_ne
                                    pla         ;load status
                                    cmp_flag \2
                                    trap_ne
                                    plp         ;restore status
                                    endm
                        
                        tst_x       macro       ;testing result in x index & f
                                    php         ;save flags
                                    php
                                    cpx #\1     ;test result
                                    trap_ne
                                    pla         ;load status
                                    cmp_flag \2
                                    trap_ne
                                    plp         ;restore status
                                    endm
                        
                        tst_y       macro       ;testing result in y index & f
                                    php         ;save flags
                                    php
                                    cpy #\1     ;test result
                                    trap_ne
                                    pla         ;load status
                                    cmp_flag \2
                                    trap_ne
                                    plp         ;restore status
                                    endm
                        
                        tst_ax      macro       ;indexed testing result in acc
                                    php         ;save flags
                                    cmp \1,x    ;test result
                                    trap_ne
                                    pla         ;load status
                                    eor_flag \3
                                    cmp \2,x    ;test flags
                                    trap_ne     ;
                                    endm
                        
                        tst_ay      macro       ;indexed testing result in acc
                                    php         ;save flags
                                    cmp \1,y    ;test result
                                    trap_ne     ;
                                    pla         ;load status
                                    eor_flag \3
                                    cmp \2,y    ;test flags
                                    trap_ne
                                    endm
                                
                        tst_z       macro       ;indexed testing result in zp 
                                    php         ;save flags
                                    lda zpt
                                    cmp \1,x    ;test result
                                    trap_ne
                                    pla         ;load status
                                    eor_flag \3
                                    cmp \2,x    ;test flags
                                    trap_ne
                                    endm
                        
                        tst_zx      macro       ;testing result in zp,x & flag
                                    php         ;save flags
                                    lda zpt,x
                                    cmp \1,x    ;test result
                                    trap_ne
                                    pla         ;load status
                                    eor_flag \3
                                    cmp \2,x    ;test flags
                                    trap_ne
                                    endm
                        
                        tst_abs     macro       ;indexed testing result in mem
                                    php         ;save flags
                                    lda abst
                                    cmp \1,x    ;test result
                                    trap_ne
                                    pla         ;load status
                                    eor_flag \3
                                    cmp \2,x    ;test flags
                                    trap_ne
                                    endm
                        
                        tst_absx    macro       ;testing result in abs,x & fla
                                    php         ;save flags
                                    lda abst,x
                                    cmp \1,x    ;test result
                                    trap_ne
                                    pla         ;load status
                                    eor_flag \3
                                    cmp \2,x    ;test flags
                                    trap_ne
                                    endm
                                    
                        ; RAM integrity test
                        ;   verifies that none of the previous tests has alter
                        ;   designated write areas.
                        ;   uses zpt word as indirect pointer, zpt+2 word as c
                                if ram_top > -1
                        check_ram   macro 
                                    cld
                                    lda #0
                                    sta zpt         ;set low byte of indirect 
                                    sta zpt+3       ;checksum high byte
                                    sta range_adr   ;reset self modifying code
                                    sta tandi1
                                    sta tandi2
                                    sta teori1
                                    sta teori2
                                    sta torai1
                                    sta torai2
                                    sta chkdadi  
                                    sta chkdsbi
                                    sta chkadi
                                    sta chksbi
                                    clc
                                    ldx #zp_bss-zero_page ;zeropage - write te
                        ccs3\?      adc zero_page,x
                                    bcc ccs2\?
                                    inc zpt+3       ;carry to high byte
                                    clc
                        ccs2\?      inx
                                    bne ccs3\?
                                    ldx #hi(data_segment) ;set high byte of in
                                    stx zpt+1
                                    ldy #lo(data_bss) ;data after write test a
                        ccs5\?      adc (zpt),y
                                    bcc ccs4\?
                                    inc zpt+3       ;carry to high byte
                                    clc
                        ccs4\?      iny
                                    bne ccs5\?
                                    inx             ;advance RAM high address
                                    stx zpt+1
                                    cpx #ram_top
                                    bne ccs5\?
                                    sta zpt+2       ;checksum low is
                                    cmp ram_chksm   ;checksum low expected
                                    trap_ne         ;checksum mismatch
                                    lda zpt+3       ;checksum high is
                                    cmp ram_chksm+1 ;checksum high expected
                                    trap_ne         ;checksum mismatch
                                    endm            
                                else
                        check_ram   macro
                                    ;RAM check disabled - RAM size not set
                                    endm
                                endif
                        
                        next_test   macro           ;make sure, tests don't ju
                                    lda test_case   ;previous test
                                    cmp #test_num
                                    trap_ne         ;test is out of sequence
                        test_num = test_num + 1
                                    lda #test_num   ;*** this tests' number
                                    sta test_case
                                    ;check_ram       ;uncomment to find altere
                                    endm
                        
                            if load_data_direct = 1
                                data
                            else
                                bss                 ;uninitialized segment, co
                            endif
000a =                          org zero_page
                        ;break test interrupt save
000a =                  irq_a   ds  1               ;a register
000b =                  irq_x   ds  1               ;x register
                            if I_flag = 2
                        ;masking for I bit in status
                        flag_I_on   ds  1           ;or mask to load flags   
                        flag_I_off  ds  1           ;and mask to load flags
                            endif
000c =                  zpt                         ;5 bytes store/modify test
                        ;add/subtract operand generation and result/flag predi
000c =                  adfc    ds  1               ;carry flag before op
000d =                  ad1     ds  1               ;operand 1 - accumulator
000e =                  ad2     ds  1               ;operand 2 - memory / imme
000f =                  adrl    ds  1               ;expected result bits 0-7
0010 =                  adrh    ds  1               ;expected result bit 8 (ca
0011 =                  adrf    ds  1               ;expected flags NV0000ZC (
0012 =                  sb2     ds  1               ;operand 2 complemented fo
0013 =                  zp_bss
0013 =                  zp1     db  $c3,$82,$41,0   ;test patterns for LDx BIT
0017 =                  zp7f    db  $7f             ;test pattern for compare 
                        ;logical zeropage operands
0018 =                  zpOR    db  0,$1f,$71,$80   ;test pattern for OR
001c =                  zpAN    db  $0f,$ff,$7f,$80 ;test pattern for AND
0020 =                  zpEO    db  $ff,$0f,$8f,$8f ;test pattern for EOR
                        ;indirect addressing pointers
0024 =                  ind1    dw  abs1            ;indirect pointer to patte
0026 =                          dw  abs1+1
0028 =                          dw  abs1+2
002a =                          dw  abs1+3
002c =                          dw  abs7f
002e =                  inw1    dw  abs1-$f8        ;indirect pointer for wrap
0030 =                  indt    dw  abst            ;indirect pointer to store
0032 =                          dw  abst+1
0034 =                          dw  abst+2
0036 =                          dw  abst+3
0038 =                  inwt    dw  abst-$f8        ;indirect pointer for wrap
003a =                  indAN   dw  absAN           ;indirect pointer to AND p
003c =                          dw  absAN+1
003e =                          dw  absAN+2
0040 =                          dw  absAN+3
0042 =                  indEO   dw  absEO           ;indirect pointer to EOR p
0044 =                          dw  absEO+1
0046 =                          dw  absEO+2
0048 =                          dw  absEO+3
004a =                  indOR   dw  absOR           ;indirect pointer to OR pa
004c =                          dw  absOR+1
004e =                          dw  absOR+2
0050 =                          dw  absOR+3
                        ;add/subtract indirect pointers
0052 =                  adi2    dw  ada2            ;indirect pointer to opera
0054 =                  sbi2    dw  sba2            ;indirect pointer to compl
0056 =                  adiy2   dw  ada2-$ff        ;with offset for indirect 
0058 =                  sbiy2   dw  sba2-$ff
005a =                  zp_bss_end
                           
0200 =                          org data_segment
0200 =                  test_case   ds  1           ;current test number
0201 =                  ram_chksm   ds  2           ;checksum for RAM integrit
                        ;add/subtract operand copy - abs tests write area
0203 =                  abst                        ;5 bytes store/modify test
0203 =                  ada2    ds  1               ;operand 2
0204 =                  sba2    ds  1               ;operand 2 complemented fo
0205 =                          ds  3               ;fill remaining bytes
0208 =                  data_bss
0208 =                  abs1    db  $c3,$82,$41,0   ;test patterns for LDx BIT
020c =                  abs7f   db  $7f             ;test pattern for compare
                        ;loads
020d =                  fLDx    db  fn,fn,0,fz      ;expected flags for load
                        ;shifts
0211 =                  rASL                        ;expected result ASL & ROL
0211 =                  rROL    db  $86,$04,$82,0   ; "
0215 =                  rROLc   db  $87,$05,$83,1   ;expected result ROL +carr
0219 =                  rLSR                        ;expected result LSR & ROR
0219 =                  rROR    db  $61,$41,$20,0   ; "
021d =                  rRORc   db  $e1,$c1,$a0,$80 ;expected result ROR +carr
0221 =                  fASL                        ;expected flags for shifts
0221 =                  fROL    db  fnc,fc,fn,fz    ;no carry in
0225 =                  fROLc   db  fnc,fc,fn,0     ;carry in
0229 =                  fLSR
0229 =                  fROR    db  fc,0,fc,fz      ;no carry in
022d =                  fRORc   db  fnc,fn,fnc,fn   ;carry in
                        ;increments (decrements)
0231 =                  rINC    db  $7f,$80,$ff,0,1 ;expected result for INC/D
0236 =                  fINC    db  0,fn,fn,fz,0    ;expected flags for INC/DE
                        ;logical memory operand
023b =                  absOR   db  0,$1f,$71,$80   ;test pattern for OR
023f =                  absAN   db  $0f,$ff,$7f,$80 ;test pattern for AND
0243 =                  absEO   db  $ff,$0f,$8f,$8f ;test pattern for EOR
                        ;logical accu operand
0247 =                  absORa  db  0,$f1,$1f,0     ;test pattern for OR
024b =                  absANa  db  $f0,$ff,$ff,$ff ;test pattern for AND
024f =                  absEOa  db  $ff,$f0,$f0,$0f ;test pattern for EOR
                        ;logical results
0253 =                  absrlo  db  0,$ff,$7f,$80
0257 =                  absflo  db  fz,fn,0,fn
025b =                  data_bss_end
                        
                        
                                code
0400 =                          org code_segment
0400 : d8               start   cld
0401 : a900                     lda #0          ;*** test 0 = initialize
0403 : 8d0002                   sta test_case
0000 =                  test_num = 0
                        
                        ;stop interrupts before initializing BSS
                            if I_flag = 1
                                sei
                            endif
                            
                        ;initialize BSS segment
                            if load_data_direct != 1
0406 : a246                     ldx #zp_end-zp_init-1
0408 : bd5a36           ld_zp   lda zp_init,x
040b : 9513                     sta zp_bss,x
040d : ca                       dex
040e : 10f8                     bpl ld_zp
0410 : a252                     ldx #data_end-data_init-1
0412 : bda136           ld_data lda data_init,x
0415 : 9d0802                   sta data_bss,x
0418 : ca                       dex
0419 : 10f7                     bpl ld_data
                              if ROM_vectors = 1
041b : a205                     ldx #5
041d : bdf436           ld_vect lda vec_init,x
0420 : 9dfaff                   sta vec_bss,x
0423 : ca                       dex
0424 : 10f7                     bpl ld_vect
                              endif
                            endif
                        
                        ;retain status of interrupt flag
                            if I_flag = 2
                                php
                                pla
                                and #4          ;isolate flag
                                sta flag_I_on   ;or mask
                                eor #lo(~4)     ;reverse
                                sta flag_I_off  ;and mask
                            endif
                                
                        ;generate checksum for RAM integrity test
                            if ram_top > -1
                                lda #0 
                                sta zpt         ;set low byte of indirect poin
                                sta ram_chksm+1 ;checksum high byte
                                sta range_adr   ;reset self modifying code
                                sta tandi1
                                sta tandi2
                                sta teori1
                                sta teori2
                                sta torai1
                                sta torai2
                                sta chkdadi  
                                sta chkdsbi
                                sta chkadi
                                sta chksbi
                                clc
                                ldx #zp_bss-zero_page ;zeropage - write test a
                        gcs3    adc zero_page,x
                                bcc gcs2
                                inc ram_chksm+1 ;carry to high byte
                                clc
                        gcs2    inx
                                bne gcs3
                                ldx #hi(data_segment) ;set high byte of indire
                                stx zpt+1
                                ldy #lo(data_bss) ;data after write test area
                        gcs5    adc (zpt),y
                                bcc gcs4
                                inc ram_chksm+1 ;carry to high byte
                                clc
                        gcs4    iny
                                bne gcs5
                                inx             ;advance RAM high address
                                stx zpt+1
                                cpx #ram_top
                                bne gcs5
                                sta ram_chksm   ;checksum complete
                            endif
                                next_test            
0426 : ad0002          >            lda test_case   ;previous test
0429 : c900            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
042b : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0001 =                 >test_num = test_num + 1
042d : a901            >            lda #test_num   ;*** this tests' number
042f : 8d0002          >            sta test_case
                       >            ;check_ram       ;uncomment to find altere
                        
                        
                        ;testing relative addressing with BEQ
0432 : a0fe                     ldy #$fe        ;testing maximum range, not -1
0434 :                  range_loop
0434 : 88                       dey             ;next relative address
0435 : 98                       tya
0436 : aa                       tax             ;precharge count to end of loo
0437 : 1003                     bpl range_fw    ;calculate relative address
0439 : 18                       clc             ;avoid branch self or to relat
043a : 6902                     adc #2
043c :                  range_fw
043c : 497f                     eor #$7f        ;complement except sign
043e : 8dc504                   sta range_adr   ;load into test target
0441 : a900                     lda #0          ;should set zero flag in statu
0443 : 4cc404                   jmp range_op
                                
                                ;relative address target field with branch und
0446 : ca                       dex             ;-128 - max backward
0447 : ca                       dex
0448 : ca                       dex
0449 : ca                       dex
044a : ca                       dex
044b : ca                       dex
044c : ca                       dex
044d : ca                       dex
044e : ca                       dex             ;-120
044f : ca                       dex
0450 : ca                       dex
0451 : ca                       dex
0452 : ca                       dex
0453 : ca                       dex
0454 : ca                       dex
0455 : ca                       dex
0456 : ca                       dex
0457 : ca                       dex
0458 : ca                       dex             ;-110
0459 : ca                       dex
045a : ca                       dex
045b : ca                       dex
045c : ca                       dex
045d : ca                       dex
045e : ca                       dex
045f : ca                       dex
0460 : ca                       dex
0461 : ca                       dex
0462 : ca                       dex             ;-100
0463 : ca                       dex
0464 : ca                       dex
0465 : ca                       dex
0466 : ca                       dex
0467 : ca                       dex
0468 : ca                       dex
0469 : ca                       dex
046a : ca                       dex
046b : ca                       dex
046c : ca                       dex             ;-90
046d : ca                       dex
046e : ca                       dex
046f : ca                       dex
0470 : ca                       dex
0471 : ca                       dex
0472 : ca                       dex
0473 : ca                       dex
0474 : ca                       dex
0475 : ca                       dex
0476 : ca                       dex             ;-80
0477 : ca                       dex
0478 : ca                       dex
0479 : ca                       dex
047a : ca                       dex
047b : ca                       dex
047c : ca                       dex
047d : ca                       dex
047e : ca                       dex
047f : ca                       dex
0480 : ca                       dex             ;-70
0481 : ca                       dex
0482 : ca                       dex
0483 : ca                       dex
0484 : ca                       dex
0485 : ca                       dex
0486 : ca                       dex
0487 : ca                       dex
0488 : ca                       dex
0489 : ca                       dex
048a : ca                       dex             ;-60
048b : ca                       dex
048c : ca                       dex
048d : ca                       dex
048e : ca                       dex
048f : ca                       dex
0490 : ca                       dex
0491 : ca                       dex
0492 : ca                       dex
0493 : ca                       dex
0494 : ca                       dex             ;-50
0495 : ca                       dex
0496 : ca                       dex
0497 : ca                       dex
0498 : ca                       dex
0499 : ca                       dex
049a : ca                       dex
049b : ca                       dex
049c : ca                       dex
049d : ca                       dex
049e : ca                       dex             ;-40
049f : ca                       dex
04a0 : ca                       dex
04a1 : ca                       dex
04a2 : ca                       dex
04a3 : ca                       dex
04a4 : ca                       dex
04a5 : ca                       dex
04a6 : ca                       dex
04a7 : ca                       dex
04a8 : ca                       dex             ;-30
04a9 : ca                       dex
04aa : ca                       dex
04ab : ca                       dex
04ac : ca                       dex
04ad : ca                       dex
04ae : ca                       dex
04af : ca                       dex
04b0 : ca                       dex
04b1 : ca                       dex
04b2 : ca                       dex             ;-20
04b3 : ca                       dex
04b4 : ca                       dex
04b5 : ca                       dex
04b6 : ca                       dex
04b7 : ca                       dex
04b8 : ca                       dex
04b9 : ca                       dex
04ba : ca                       dex
04bb : ca                       dex
04bc : ca                       dex             ;-10
04bd : ca                       dex
04be : ca                       dex
04bf : ca                       dex
04c0 : ca                       dex
04c1 : ca                       dex
04c2 : ca                       dex
04c3 : ca                       dex             ;-3
04c4 :                  range_op                ;test target with zero flag=0,
04c5 =                  range_adr   = *+1       ;modifiable relative address
04c4 : f03e                     beq *+64        ;if called without modificatio
04c6 : ca                       dex             ;+0
04c7 : ca                       dex
04c8 : ca                       dex
04c9 : ca                       dex
04ca : ca                       dex
04cb : ca                       dex
04cc : ca                       dex
04cd : ca                       dex
04ce : ca                       dex
04cf : ca                       dex
04d0 : ca                       dex             ;+10
04d1 : ca                       dex
04d2 : ca                       dex
04d3 : ca                       dex
04d4 : ca                       dex
04d5 : ca                       dex
04d6 : ca                       dex
04d7 : ca                       dex
04d8 : ca                       dex
04d9 : ca                       dex
04da : ca                       dex             ;+20
04db : ca                       dex
04dc : ca                       dex
04dd : ca                       dex
04de : ca                       dex
04df : ca                       dex
04e0 : ca                       dex
04e1 : ca                       dex
04e2 : ca                       dex
04e3 : ca                       dex
04e4 : ca                       dex             ;+30
04e5 : ca                       dex
04e6 : ca                       dex
04e7 : ca                       dex
04e8 : ca                       dex
04e9 : ca                       dex
04ea : ca                       dex
04eb : ca                       dex
04ec : ca                       dex
04ed : ca                       dex
04ee : ca                       dex             ;+40
04ef : ca                       dex
04f0 : ca                       dex
04f1 : ca                       dex
04f2 : ca                       dex
04f3 : ca                       dex
04f4 : ca                       dex
04f5 : ca                       dex
04f6 : ca                       dex
04f7 : ca                       dex
04f8 : ca                       dex             ;+50
04f9 : ca                       dex
04fa : ca                       dex
04fb : ca                       dex
04fc : ca                       dex
04fd : ca                       dex
04fe : ca                       dex
04ff : ca                       dex
0500 : ca                       dex
0501 : ca                       dex
0502 : ca                       dex             ;+60
0503 : ca                       dex
0504 : ca                       dex
0505 : ca                       dex
0506 : ca                       dex
0507 : ca                       dex
0508 : ca                       dex
0509 : ca                       dex
050a : ca                       dex
050b : ca                       dex
050c : ca                       dex             ;+70
050d : ca                       dex
050e : ca                       dex
050f : ca                       dex
0510 : ca                       dex
0511 : ca                       dex
0512 : ca                       dex
0513 : ca                       dex
0514 : ca                       dex
0515 : ca                       dex
0516 : ca                       dex             ;+80
0517 : ca                       dex
0518 : ca                       dex
0519 : ca                       dex
051a : ca                       dex
051b : ca                       dex
051c : ca                       dex
051d : ca                       dex
051e : ca                       dex
051f : ca                       dex
0520 : ca                       dex             ;+90
0521 : ca                       dex
0522 : ca                       dex
0523 : ca                       dex
0524 : ca                       dex
0525 : ca                       dex
0526 : ca                       dex
0527 : ca                       dex
0528 : ca                       dex
0529 : ca                       dex
052a : ca                       dex             ;+100
052b : ca                       dex
052c : ca                       dex
052d : ca                       dex
052e : ca                       dex
052f : ca                       dex
0530 : ca                       dex
0531 : ca                       dex
0532 : ca                       dex
0533 : ca                       dex
0534 : ca                       dex             ;+110
0535 : ca                       dex
0536 : ca                       dex
0537 : ca                       dex
0538 : ca                       dex
0539 : ca                       dex
053a : ca                       dex
053b : ca                       dex
053c : ca                       dex
053d : ca                       dex
053e : ca                       dex             ;+120
053f : ca                       dex
0540 : ca                       dex
0541 : ca                       dex
0542 : ca                       dex
0543 : ca                       dex
0544 : ca                       dex
0545 : f003                     beq range_ok    ;+127 - max forward
                                trap            ; bad range
0547 : 4c4705          >        jmp *           ;failed anyway
                        
054a :                  range_ok
054a : c000                     cpy #0
054c : f003                     beq range_end   
054e : 4c3404                   jmp range_loop
0551 :                  range_end               ;range test successful
                                next_test
0551 : ad0002          >            lda test_case   ;previous test
0554 : c901            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
0556 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0002 =                 >test_num = test_num + 1
0558 : a902            >            lda #test_num   ;*** this tests' number
055a : 8d0002          >            sta test_case
                       >            ;check_ram       ;uncomment to find altere
                        
                        
                        ;partial test BNE & CMP, CPX, CPY immediate
055d : c001                     cpy #1          ;testing BNE true
055f : d003                     bne test_bne
                                trap 
0561 : 4c6105          >        jmp *           ;failed anyway
                        
0564 :                  test_bne
0564 : a900                     lda #0 
0566 : c900                     cmp #0          ;test compare immediate 
                                trap_ne
0568 : d0fe            >        bne *           ;failed not equal (non zero)
                        
                                trap_cc
056a : 90fe            >        bcc *           ;failed carry clear
                        
                                trap_mi
056c : 30fe            >        bmi *           ;failed minus (bit 7 set)
                        
056e : c901                     cmp #1
                                trap_eq 
0570 : f0fe            >        beq *           ;failed equal (zero)
                        
                                trap_cs
0572 : b0fe            >        bcs *           ;failed carry set
                        
                                trap_pl
0574 : 10fe            >        bpl *           ;failed plus (bit 7 clear)
                        
0576 : aa                       tax 
0577 : e000                     cpx #0          ;test compare x immediate
                                trap_ne
0579 : d0fe            >        bne *           ;failed not equal (non zero)
                        
                                trap_cc
057b : 90fe            >        bcc *           ;failed carry clear
                        
                                trap_mi
057d : 30fe            >        bmi *           ;failed minus (bit 7 set)
                        
057f : e001                     cpx #1
                                trap_eq 
0581 : f0fe            >        beq *           ;failed equal (zero)
                        
                                trap_cs
0583 : b0fe            >        bcs *           ;failed carry set
                        
                                trap_pl
0585 : 10fe            >        bpl *           ;failed plus (bit 7 clear)
                        
0587 : a8                       tay 
0588 : c000                     cpy #0          ;test compare y immediate
                                trap_ne
058a : d0fe            >        bne *           ;failed not equal (non zero)
                        
                                trap_cc
058c : 90fe            >        bcc *           ;failed carry clear
                        
                                trap_mi
058e : 30fe            >        bmi *           ;failed minus (bit 7 set)
                        
0590 : c001                     cpy #1
                                trap_eq 
0592 : f0fe            >        beq *           ;failed equal (zero)
                        
                                trap_cs
0594 : b0fe            >        bcs *           ;failed carry set
                        
                                trap_pl
0596 : 10fe            >        bpl *           ;failed plus (bit 7 clear)
                        
                                next_test
0598 : ad0002          >            lda test_case   ;previous test
059b : c902            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
059d : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0003 =                 >test_num = test_num + 1
059f : a903            >            lda #test_num   ;*** this tests' number
05a1 : 8d0002          >            sta test_case
                       >            ;check_ram       ;uncomment to find altere
                        
                        ;testing stack operations PHA PHP PLA PLP
                                    
05a4 : a2ff                     ldx #$ff        ;initialize stack
05a6 : 9a                       txs
05a7 : a955                     lda #$55
05a9 : 48                       pha
05aa : a9aa                     lda #$aa
05ac : 48                       pha
05ad : cdfe01                   cmp $1fe        ;on stack ?
                                trap_ne
05b0 : d0fe            >        bne *           ;failed not equal (non zero)
                        
05b2 : ba                       tsx
05b3 : 8a                       txa             ;overwrite accu
05b4 : c9fd                     cmp #$fd        ;sp decremented?
                                trap_ne
05b6 : d0fe            >        bne *           ;failed not equal (non zero)
                        
05b8 : 68                       pla
05b9 : c9aa                     cmp #$aa        ;successful retreived from sta
                                trap_ne
05bb : d0fe            >        bne *           ;failed not equal (non zero)
                        
05bd : 68                       pla
05be : c955                     cmp #$55
                                trap_ne
05c0 : d0fe            >        bne *           ;failed not equal (non zero)
                        
05c2 : cdff01                   cmp $1ff        ;remains on stack?
                                trap_ne
05c5 : d0fe            >        bne *           ;failed not equal (non zero)
                        
05c7 : ba                       tsx
05c8 : e0ff                     cpx #$ff        ;sp incremented?
                                trap_ne
05ca : d0fe            >        bne *           ;failed not equal (non zero)
                        
                                next_test
05cc : ad0002          >            lda test_case   ;previous test
05cf : c903            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
05d1 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0004 =                 >test_num = test_num + 1
05d3 : a904            >            lda #test_num   ;*** this tests' number
05d5 : 8d0002          >            sta test_case
                       >            ;check_ram       ;uncomment to find altere
                        
                        
                        ;testing branch decisions BPL BMI BVC BVS BCC BCS BNE 
                                set_stat $ff    ;all on
                       >            load_flag $ff    
05d8 : a9ff            >            lda #$ff                 ;allow test to ch
                       >
05da : 48              >            pha         ;use stack to load status
05db : 28              >            plp
                        
05dc : 101a                     bpl nbr1        ;branches should not be taken
05de : 501b                     bvc nbr2
05e0 : 901c                     bcc nbr3
05e2 : d01d                     bne nbr4
05e4 : 3003                     bmi br1         ;branches should be taken
                                trap 
05e6 : 4ce605          >        jmp *           ;failed anyway
                        
05e9 : 7003             br1     bvs br2
                                trap 
05eb : 4ceb05          >        jmp *           ;failed anyway
                        
05ee : b003             br2     bcs br3
                                trap 
05f0 : 4cf005          >        jmp *           ;failed anyway
                        
05f3 : f00f             br3     beq br4
                                trap 
05f5 : 4cf505          >        jmp *           ;failed anyway
                        
05f8 :                  nbr1
                                trap            ;previous bpl taken 
05f8 : 4cf805          >        jmp *           ;failed anyway
                        
05fb :                  nbr2
                                trap            ;previous bvc taken
05fb : 4cfb05          >        jmp *           ;failed anyway
                        
05fe :                  nbr3
                                trap            ;previous bcc taken
05fe : 4cfe05          >        jmp *           ;failed anyway
                        
0601 :                  nbr4
                                trap            ;previous bne taken
0601 : 4c0106          >        jmp *           ;failed anyway
                        
0604 : 08               br4     php
0605 : ba                       tsx
0606 : e0fe                     cpx #$fe        ;sp after php?
                                trap_ne
0608 : d0fe            >        bne *           ;failed not equal (non zero)
                        
060a : 68                       pla
                                cmp_flag $ff    ;returned all flags on?
060b : c9ff            >            cmp #($ff    |fao)&m8    ;expected flags +
                        
                                trap_ne
060d : d0fe            >        bne *           ;failed not equal (non zero)
                        
060f : ba                       tsx
0610 : e0ff                     cpx #$ff        ;sp after php?
                                trap_ne
0612 : d0fe            >        bne *           ;failed not equal (non zero)
                        
                                set_stat 0      ;all off
                       >            load_flag 0      
0614 : a900            >            lda #0                   ;allow test to ch
                       >
0616 : 48              >            pha         ;use stack to load status
0617 : 28              >            plp
                        
0618 : 3022                     bmi nbr11       ;branches should not be taken
061a : 7023                     bvs nbr12
061c : b024                     bcs nbr13
061e : f025                     beq nbr14
                                trap_mi  
0620 : 30fe            >        bmi *           ;failed minus (bit 7 set)
                        
                                trap_vs
0622 : 70fe            >        bvs *           ;failed overflow set
                        
                                trap_cs
0624 : b0fe            >        bcs *           ;failed carry set
                        
                                trap_eq 
0626 : f0fe            >        beq *           ;failed equal (zero)
                        
0628 : 1003                     bpl br11        ;branches should be taken
                                trap 
062a : 4c2a06          >        jmp *           ;failed anyway
                        
062d : 5003             br11    bvc br12
                                trap 
062f : 4c2f06          >        jmp *           ;failed anyway
                        
0632 : 9003             br12    bcc br13
                                trap 
0634 : 4c3406          >        jmp *           ;failed anyway
                        
0637 : d00f             br13    bne br14
                                trap 
0639 : 4c3906          >        jmp *           ;failed anyway
                        
063c :                  nbr11
                                trap            ;previous bmi taken 
063c : 4c3c06          >        jmp *           ;failed anyway
                        
063f :                  nbr12
                                trap            ;previous bvs taken 
063f : 4c3f06          >        jmp *           ;failed anyway
                        
0642 :                  nbr13
                                trap            ;previous bcs taken 
0642 : 4c4206          >        jmp *           ;failed anyway
                        
0645 :                  nbr14
                                trap            ;previous beq taken 
0645 : 4c4506          >        jmp *           ;failed anyway
                        
0648 : 08               br14    php
0649 : 68                       pla
                                cmp_flag 0      ;flags off except break (pushe
064a : c930            >            cmp #(0      |fao)&m8    ;expected flags +
                        
                                trap_ne
064c : d0fe            >        bne *           ;failed not equal (non zero)
                        
                                ;crosscheck flags
                                set_stat carry
                       >            load_flag carry
064e : a901            >            lda #carry             ;allow test to chan
                       >
0650 : 48              >            pha         ;use stack to load status
0651 : 28              >            plp
                        
                                trap_cc
0652 : 90fe            >        bcc *           ;failed carry clear
                        
                                set_stat zero
                       >            load_flag zero
0654 : a902            >            lda #zero             ;allow test to chang
                       >
0656 : 48              >            pha         ;use stack to load status
0657 : 28              >            plp
                        
                                trap_ne
0658 : d0fe            >        bne *           ;failed not equal (non zero)
                        
                                set_stat overfl
                       >            load_flag overfl
065a : a940            >            lda #overfl             ;allow test to cha
                       >
065c : 48              >            pha         ;use stack to load status
065d : 28              >            plp
                        
                                trap_vc
065e : 50fe            >        bvc *           ;failed overflow clear
                        
                                set_stat minus
                       >            load_flag minus
0660 : a980            >            lda #minus             ;allow test to chan
                       >
0662 : 48              >            pha         ;use stack to load status
0663 : 28              >            plp
                        
                                trap_pl
0664 : 10fe            >        bpl *           ;failed plus (bit 7 clear)
                        
                                set_stat $ff-carry
                       >            load_flag $ff-carry
0666 : a9fe            >            lda #$ff-carry             ;allow test to 
                       >
0668 : 48              >            pha         ;use stack to load status
0669 : 28              >            plp
                        
                                trap_cs
066a : b0fe            >        bcs *           ;failed carry set
                        
                                set_stat $ff-zero
                       >            load_flag $ff-zero
066c : a9fd            >            lda #$ff-zero             ;allow test to c
                       >
066e : 48              >            pha         ;use stack to load status
066f : 28              >            plp
                        
                                trap_eq 
0670 : f0fe            >        beq *           ;failed equal (zero)
                        
                                set_stat $ff-overfl
                       >            load_flag $ff-overfl
0672 : a9bf            >            lda #$ff-overfl             ;allow test to
                       >
0674 : 48              >            pha         ;use stack to load status
0675 : 28              >            plp
                        
                                trap_vs
0676 : 70fe            >        bvs *           ;failed overflow set
                        
                                set_stat $ff-minus
                       >            load_flag $ff-minus
0678 : a97f            >            lda #$ff-minus             ;allow test to 
                       >
067a : 48              >            pha         ;use stack to load status
067b : 28              >            plp
                        
                                trap_mi
067c : 30fe            >        bmi *           ;failed minus (bit 7 set)
                        
                                next_test
067e : ad0002          >            lda test_case   ;previous test
0681 : c904            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
0683 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0005 =                 >test_num = test_num + 1
0685 : a905            >            lda #test_num   ;*** this tests' number
0687 : 8d0002          >            sta test_case
                       >            ;check_ram       ;uncomment to find altere
                        
                        
                        ; test PHA does not alter flags or accumulator but PLA
068a : a255                     ldx #$55        ;x & y protected
068c : a0aa                     ldy #$aa
                                set_a 1,$ff     ;push
                       >            load_flag $ff     
068e : a9ff            >            lda #$ff                  ;allow test to c
                       >
0690 : 48              >            pha         ;use stack to load status
0691 : a901            >            lda #1     ;precharge accu
0693 : 28              >            plp
                        
0694 : 48                       pha
                                tst_a 1,$ff
0695 : 08              >            php         ;save flags
0696 : 08              >            php
0697 : c901            >            cmp #1     ;test result
                       >            trap_ne
0699 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
069b : 68              >            pla         ;load status
                       >            cmp_flag $ff
069c : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + alw
                       >
                       >            trap_ne
069e : d0fe            >        bne *           ;failed not equal (non zero)
                       >
06a0 : 28              >            plp         ;restore status
                        
                                set_a 0,0
                       >            load_flag 0
06a1 : a900            >            lda #0             ;allow test to change I
                       >
06a3 : 48              >            pha         ;use stack to load status
06a4 : a900            >            lda #0     ;precharge accu
06a6 : 28              >            plp
                        
06a7 : 48                       pha
                                tst_a 0,0
06a8 : 08              >            php         ;save flags
06a9 : 08              >            php
06aa : c900            >            cmp #0     ;test result
                       >            trap_ne
06ac : d0fe            >        bne *           ;failed not equal (non zero)
                       >
06ae : 68              >            pla         ;load status
                       >            cmp_flag 0
06af : c930            >            cmp #(0|fao)&m8    ;expected flags + alway
                       >
                       >            trap_ne
06b1 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
06b3 : 28              >            plp         ;restore status
                        
                                set_a $ff,$ff
                       >            load_flag $ff
06b4 : a9ff            >            lda #$ff             ;allow test to change
                       >
06b6 : 48              >            pha         ;use stack to load status
06b7 : a9ff            >            lda #$ff     ;precharge accu
06b9 : 28              >            plp
                        
06ba : 48                       pha
                                tst_a $ff,$ff
06bb : 08              >            php         ;save flags
06bc : 08              >            php
06bd : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
06bf : d0fe            >        bne *           ;failed not equal (non zero)
                       >
06c1 : 68              >            pla         ;load status
                       >            cmp_flag $ff
06c2 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + alw
                       >
                       >            trap_ne
06c4 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
06c6 : 28              >            plp         ;restore status
                        
                                set_a 1,0
                       >            load_flag 0
06c7 : a900            >            lda #0             ;allow test to change I
                       >
06c9 : 48              >            pha         ;use stack to load status
06ca : a901            >            lda #1     ;precharge accu
06cc : 28              >            plp
                        
06cd : 48                       pha
                                tst_a 1,0
06ce : 08              >            php         ;save flags
06cf : 08              >            php
06d0 : c901            >            cmp #1     ;test result
                       >            trap_ne
06d2 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
06d4 : 68              >            pla         ;load status
                       >            cmp_flag 0
06d5 : c930            >            cmp #(0|fao)&m8    ;expected flags + alway
                       >
                       >            trap_ne
06d7 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
06d9 : 28              >            plp         ;restore status
                        
                                set_a 0,$ff
                       >            load_flag $ff
06da : a9ff            >            lda #$ff             ;allow test to change
                       >
06dc : 48              >            pha         ;use stack to load status
06dd : a900            >            lda #0     ;precharge accu
06df : 28              >            plp
                        
06e0 : 48                       pha
                                tst_a 0,$ff
06e1 : 08              >            php         ;save flags
06e2 : 08              >            php
06e3 : c900            >            cmp #0     ;test result
                       >            trap_ne
06e5 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
06e7 : 68              >            pla         ;load status
                       >            cmp_flag $ff
06e8 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + alw
                       >
                       >            trap_ne
06ea : d0fe            >        bne *           ;failed not equal (non zero)
                       >
06ec : 28              >            plp         ;restore status
                        
                                set_a $ff,0
                       >            load_flag 0
06ed : a900            >            lda #0             ;allow test to change I
                       >
06ef : 48              >            pha         ;use stack to load status
06f0 : a9ff            >            lda #$ff     ;precharge accu
06f2 : 28              >            plp
                        
06f3 : 48                       pha
                                tst_a $ff,0
06f4 : 08              >            php         ;save flags
06f5 : 08              >            php
06f6 : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
06f8 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
06fa : 68              >            pla         ;load status
                       >            cmp_flag 0
06fb : c930            >            cmp #(0|fao)&m8    ;expected flags + alway
                       >
                       >            trap_ne
06fd : d0fe            >        bne *           ;failed not equal (non zero)
                       >
06ff : 28              >            plp         ;restore status
                        
                                set_a 0,$ff     ;pull
                       >            load_flag $ff     
0700 : a9ff            >            lda #$ff                  ;allow test to c
                       >
0702 : 48              >            pha         ;use stack to load status
0703 : a900            >            lda #0     ;precharge accu
0705 : 28              >            plp
                        
0706 : 68                       pla
                                tst_a $ff,$ff-zero
0707 : 08              >            php         ;save flags
0708 : 08              >            php
0709 : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
070b : d0fe            >        bne *           ;failed not equal (non zero)
                       >
070d : 68              >            pla         ;load status
                       >            cmp_flag $ff-zero
070e : c9fd            >            cmp #($ff-zero|fao)&m8    ;expected flags 
                       >
                       >            trap_ne
0710 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0712 : 28              >            plp         ;restore status
                        
                                set_a $ff,0
                       >            load_flag 0
0713 : a900            >            lda #0             ;allow test to change I
                       >
0715 : 48              >            pha         ;use stack to load status
0716 : a9ff            >            lda #$ff     ;precharge accu
0718 : 28              >            plp
                        
0719 : 68                       pla
                                tst_a 0,zero
071a : 08              >            php         ;save flags
071b : 08              >            php
071c : c900            >            cmp #0     ;test result
                       >            trap_ne
071e : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0720 : 68              >            pla         ;load status
                       >            cmp_flag zero
0721 : c932            >            cmp #(zero|fao)&m8    ;expected flags + al
                       >
                       >            trap_ne
0723 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0725 : 28              >            plp         ;restore status
                        
                                set_a $fe,$ff
                       >            load_flag $ff
0726 : a9ff            >            lda #$ff             ;allow test to change
                       >
0728 : 48              >            pha         ;use stack to load status
0729 : a9fe            >            lda #$fe     ;precharge accu
072b : 28              >            plp
                        
072c : 68                       pla
                                tst_a 1,$ff-zero-minus
072d : 08              >            php         ;save flags
072e : 08              >            php
072f : c901            >            cmp #1     ;test result
                       >            trap_ne
0731 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0733 : 68              >            pla         ;load status
                       >            cmp_flag $ff-zero-minus
0734 : c97d            >            cmp #($ff-zero-minus|fao)&m8    ;expected 
                       >
                       >            trap_ne
0736 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0738 : 28              >            plp         ;restore status
                        
                                set_a 0,0
                       >            load_flag 0
0739 : a900            >            lda #0             ;allow test to change I
                       >
073b : 48              >            pha         ;use stack to load status
073c : a900            >            lda #0     ;precharge accu
073e : 28              >            plp
                        
073f : 68                       pla
                                tst_a $ff,minus
0740 : 08              >            php         ;save flags
0741 : 08              >            php
0742 : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
0744 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0746 : 68              >            pla         ;load status
                       >            cmp_flag minus
0747 : c9b0            >            cmp #(minus|fao)&m8    ;expected flags + a
                       >
                       >            trap_ne
0749 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
074b : 28              >            plp         ;restore status
                        
                                set_a $ff,$ff
                       >            load_flag $ff
074c : a9ff            >            lda #$ff             ;allow test to change
                       >
074e : 48              >            pha         ;use stack to load status
074f : a9ff            >            lda #$ff     ;precharge accu
0751 : 28              >            plp
                        
0752 : 68                       pla
                                tst_a 0,$ff-minus
0753 : 08              >            php         ;save flags
0754 : 08              >            php
0755 : c900            >            cmp #0     ;test result
                       >            trap_ne
0757 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0759 : 68              >            pla         ;load status
                       >            cmp_flag $ff-minus
075a : c97f            >            cmp #($ff-minus|fao)&m8    ;expected flags
                       >
                       >            trap_ne
075c : d0fe            >        bne *           ;failed not equal (non zero)
                       >
075e : 28              >            plp         ;restore status
                        
                                set_a $fe,0
                       >            load_flag 0
075f : a900            >            lda #0             ;allow test to change I
                       >
0761 : 48              >            pha         ;use stack to load status
0762 : a9fe            >            lda #$fe     ;precharge accu
0764 : 28              >            plp
                        
0765 : 68                       pla
                                tst_a 1,0
0766 : 08              >            php         ;save flags
0767 : 08              >            php
0768 : c901            >            cmp #1     ;test result
                       >            trap_ne
076a : d0fe            >        bne *           ;failed not equal (non zero)
                       >
076c : 68              >            pla         ;load status
                       >            cmp_flag 0
076d : c930            >            cmp #(0|fao)&m8    ;expected flags + alway
                       >
                       >            trap_ne
076f : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0771 : 28              >            plp         ;restore status
                        
0772 : e055                     cpx #$55        ;x & y unchanged?
                                trap_ne
0774 : d0fe            >        bne *           ;failed not equal (non zero)
                        
0776 : c0aa                     cpy #$aa
                                trap_ne
0778 : d0fe            >        bne *           ;failed not equal (non zero)
                        
                                next_test
077a : ad0002          >            lda test_case   ;previous test
077d : c905            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
077f : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0006 =                 >test_num = test_num + 1
0781 : a906            >            lda #test_num   ;*** this tests' number
0783 : 8d0002          >            sta test_case
                       >            ;check_ram       ;uncomment to find altere
                        
                         
                        ; partial pretest EOR #
                                set_a $3c,0
                       >            load_flag 0
0786 : a900            >            lda #0             ;allow test to change I
                       >
0788 : 48              >            pha         ;use stack to load status
0789 : a93c            >            lda #$3c     ;precharge accu
078b : 28              >            plp
                        
078c : 49c3                     eor #$c3
                                tst_a $ff,fn
078e : 08              >            php         ;save flags
078f : 08              >            php
0790 : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
0792 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0794 : 68              >            pla         ;load status
                       >            cmp_flag fn
0795 : c9b0            >            cmp #(fn|fao)&m8    ;expected flags + alwa
                       >
                       >            trap_ne
0797 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0799 : 28              >            plp         ;restore status
                        
                                set_a $c3,0
                       >            load_flag 0
079a : a900            >            lda #0             ;allow test to change I
                       >
079c : 48              >            pha         ;use stack to load status
079d : a9c3            >            lda #$c3     ;precharge accu
079f : 28              >            plp
                        
07a0 : 49c3                     eor #$c3
                                tst_a 0,fz
07a2 : 08              >            php         ;save flags
07a3 : 08              >            php
07a4 : c900            >            cmp #0     ;test result
                       >            trap_ne
07a6 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
07a8 : 68              >            pla         ;load status
                       >            cmp_flag fz
07a9 : c932            >            cmp #(fz|fao)&m8    ;expected flags + alwa
                       >
                       >            trap_ne
07ab : d0fe            >        bne *           ;failed not equal (non zero)
                       >
07ad : 28              >            plp         ;restore status
                        
                                next_test
07ae : ad0002          >            lda test_case   ;previous test
07b1 : c906            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
07b3 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0007 =                 >test_num = test_num + 1
07b5 : a907            >            lda #test_num   ;*** this tests' number
07b7 : 8d0002          >            sta test_case
                       >            ;check_ram       ;uncomment to find altere
                        
                        
                        ; PC modifying instructions except branches (NOP, JMP,
                        ; testing NOP
07ba : a224                     ldx #$24
07bc : a042                     ldy #$42
                                set_a $18,0
                       >            load_flag 0
07be : a900            >            lda #0             ;allow test to change I
                       >
07c0 : 48              >            pha         ;use stack to load status
07c1 : a918            >            lda #$18     ;precharge accu
07c3 : 28              >            plp
                        
07c4 : ea                       nop
                                tst_a $18,0
07c5 : 08              >            php         ;save flags
07c6 : 08              >            php
07c7 : c918            >            cmp #$18     ;test result
                       >            trap_ne
07c9 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
07cb : 68              >            pla         ;load status
                       >            cmp_flag 0
07cc : c930            >            cmp #(0|fao)&m8    ;expected flags + alway
                       >
                       >            trap_ne
07ce : d0fe            >        bne *           ;failed not equal (non zero)
                       >
07d0 : 28              >            plp         ;restore status
                        
07d1 : e024                     cpx #$24
                                trap_ne
07d3 : d0fe            >        bne *           ;failed not equal (non zero)
                        
07d5 : c042                     cpy #$42
                                trap_ne
07d7 : d0fe            >        bne *           ;failed not equal (non zero)
                        
07d9 : a2db                     ldx #$db
07db : a0bd                     ldy #$bd
                                set_a $e7,$ff
                       >            load_flag $ff
07dd : a9ff            >            lda #$ff             ;allow test to change
                       >
07df : 48              >            pha         ;use stack to load status
07e0 : a9e7            >            lda #$e7     ;precharge accu
07e2 : 28              >            plp
                        
07e3 : ea                       nop
                                tst_a $e7,$ff
07e4 : 08              >            php         ;save flags
07e5 : 08              >            php
07e6 : c9e7            >            cmp #$e7     ;test result
                       >            trap_ne
07e8 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
07ea : 68              >            pla         ;load status
                       >            cmp_flag $ff
07eb : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + alw
                       >
                       >            trap_ne
07ed : d0fe            >        bne *           ;failed not equal (non zero)
                       >
07ef : 28              >            plp         ;restore status
                        
07f0 : e0db                     cpx #$db
                                trap_ne
07f2 : d0fe            >        bne *           ;failed not equal (non zero)
                        
07f4 : c0bd                     cpy #$bd
                                trap_ne
07f6 : d0fe            >        bne *           ;failed not equal (non zero)
                        
                                next_test
07f8 : ad0002          >            lda test_case   ;previous test
07fb : c907            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
07fd : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0008 =                 >test_num = test_num + 1
07ff : a908            >            lda #test_num   ;*** this tests' number
0801 : 8d0002          >            sta test_case
                       >            ;check_ram       ;uncomment to find altere
                        
                                
                        ; jump absolute
                                set_stat $0
                       >            load_flag $0
0804 : a900            >            lda #$0             ;allow test to change 
                       >
0806 : 48              >            pha         ;use stack to load status
0807 : 28              >            plp
                        
0808 : a946                     lda #'F'
080a : a241                     ldx #'A'
080c : a052                     ldy #'R'        ;N=0, V=0, Z=0, C=0
080e : 4c6835                   jmp test_far
0811 : ea                       nop
0812 : ea                       nop
                                trap_ne         ;runover protection
0813 : d0fe            >        bne *           ;failed not equal (non zero)
                        
0815 : e8                       inx
0816 : e8                       inx
0817 :                  far_ret 
                                trap_eq         ;returned flags OK?
0817 : f0fe            >        beq *           ;failed equal (zero)
                        
                                trap_pl
0819 : 10fe            >        bpl *           ;failed plus (bit 7 clear)
                        
                                trap_cc
081b : 90fe            >        bcc *           ;failed carry clear
                        
                                trap_vc
081d : 50fe            >        bvc *           ;failed overflow clear
                        
081f : c9ec                     cmp #('F'^$aa)  ;returned registers OK?
                                trap_ne
0821 : d0fe            >        bne *           ;failed not equal (non zero)
                        
0823 : e042                     cpx #('A'+1)
                                trap_ne
0825 : d0fe            >        bne *           ;failed not equal (non zero)
                        
0827 : c04f                     cpy #('R'-3)
                                trap_ne
0829 : d0fe            >        bne *           ;failed not equal (non zero)
                        
082b : ca                       dex
082c : c8                       iny
082d : c8                       iny
082e : c8                       iny
082f : 49aa                     eor #$aa        ;N=0, V=1, Z=0, C=1
0831 : 4c3a08                   jmp test_near
0834 : ea                       nop
0835 : ea                       nop
                                trap_ne         ;runover protection
0836 : d0fe            >        bne *           ;failed not equal (non zero)
                        
0838 : e8                       inx
0839 : e8                       inx
083a :                  test_near
                                trap_eq         ;passed flags OK?
083a : f0fe            >        beq *           ;failed equal (zero)
                        
                                trap_mi
083c : 30fe            >        bmi *           ;failed minus (bit 7 set)
                        
                                trap_cc
083e : 90fe            >        bcc *           ;failed carry clear
                        
                                trap_vc
0840 : 50fe            >        bvc *           ;failed overflow clear
                        
0842 : c946                     cmp #'F'        ;passed registers OK?
                                trap_ne
0844 : d0fe            >        bne *           ;failed not equal (non zero)
                        
0846 : e041                     cpx #'A'
                                trap_ne
0848 : d0fe            >        bne *           ;failed not equal (non zero)
                        
084a : c052                     cpy #'R'
                                trap_ne
084c : d0fe            >        bne *           ;failed not equal (non zero)
                        
                                next_test
084e : ad0002          >            lda test_case   ;previous test
0851 : c908            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
0853 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0009 =                 >test_num = test_num + 1
0855 : a909            >            lda #test_num   ;*** this tests' number
0857 : 8d0002          >            sta test_case
                       >            ;check_ram       ;uncomment to find altere
                        
                                
                        ; jump indirect
                                set_stat 0
                       >            load_flag 0
085a : a900            >            lda #0             ;allow test to change I
                       >
085c : 48              >            pha         ;use stack to load status
085d : 28              >            plp
                        
085e : a949                     lda #'I'
0860 : a24e                     ldx #'N'
0862 : a044                     ldy #'D'        ;N=0, V=0, Z=0, C=0
0864 : 6c9635                   jmp (ptr_tst_ind)
0867 : ea                       nop
                                trap_ne         ;runover protection
0868 : d0fe            >        bne *           ;failed not equal (non zero)
                        
086a : 88                       dey
086b : 88                       dey
086c :                  ind_ret 
086c : 08                       php             ;either SP or Y count will fai
086d : 88                       dey
086e : 88                       dey
086f : 88                       dey
0870 : 28                       plp
                                trap_eq         ;returned flags OK?
0871 : f0fe            >        beq *           ;failed equal (zero)
                        
                                trap_pl
0873 : 10fe            >        bpl *           ;failed plus (bit 7 clear)
                        
                                trap_cc
0875 : 90fe            >        bcc *           ;failed carry clear
                        
                                trap_vc
0877 : 50fe            >        bvc *           ;failed overflow clear
                        
0879 : c9e3                     cmp #('I'^$aa)  ;returned registers OK?
                                trap_ne
087b : d0fe            >        bne *           ;failed not equal (non zero)
                        
087d : e04f                     cpx #('N'+1)
                                trap_ne
087f : d0fe            >        bne *           ;failed not equal (non zero)
                        
0881 : c03e                     cpy #('D'-6)
                                trap_ne
0883 : d0fe            >        bne *           ;failed not equal (non zero)
                        
0885 : ba                       tsx             ;SP check
0886 : e0ff                     cpx #$ff
                                trap_ne
0888 : d0fe            >        bne *           ;failed not equal (non zero)
                        
                                next_test
088a : ad0002          >            lda test_case   ;previous test
088d : c909            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
088f : d0fe            >        bne *           ;failed not equal (non zero)
                       >
000a =                 >test_num = test_num + 1
0891 : a90a            >            lda #test_num   ;*** this tests' number
0893 : 8d0002          >            sta test_case
                       >            ;check_ram       ;uncomment to find altere
                        
                        
                        ; jump subroutine & return from subroutine
                                set_stat 0
                       >            load_flag 0
0896 : a900            >            lda #0             ;allow test to change I
                       >
0898 : 48              >            pha         ;use stack to load status
0899 : 28              >            plp
                        
089a : a94a                     lda #'J'
089c : a253                     ldx #'S'
089e : a052                     ldy #'R'        ;N=0, V=0, Z=0, C=0
08a0 : 20d235                   jsr test_jsr
08a2 =                  jsr_ret = *-1           ;last address of jsr = return 
08a3 : 08                       php             ;either SP or Y count will fai
08a4 : 88                       dey
08a5 : 88                       dey
08a6 : 88                       dey
08a7 : 28                       plp
                                trap_eq         ;returned flags OK?
08a8 : f0fe            >        beq *           ;failed equal (zero)
                        
                                trap_pl
08aa : 10fe            >        bpl *           ;failed plus (bit 7 clear)
                        
                                trap_cc
08ac : 90fe            >        bcc *           ;failed carry clear
                        
                                trap_vc
08ae : 50fe            >        bvc *           ;failed overflow clear
                        
08b0 : c9e0                     cmp #('J'^$aa)  ;returned registers OK?
                                trap_ne
08b2 : d0fe            >        bne *           ;failed not equal (non zero)
                        
08b4 : e054                     cpx #('S'+1)
                                trap_ne
08b6 : d0fe            >        bne *           ;failed not equal (non zero)
                        
08b8 : c04c                     cpy #('R'-6)
                                trap_ne
08ba : d0fe            >        bne *           ;failed not equal (non zero)
                        
08bc : ba                       tsx             ;sp?
08bd : e0ff                     cpx #$ff
                                trap_ne
08bf : d0fe            >        bne *           ;failed not equal (non zero)
                        
                                next_test
08c1 : ad0002          >            lda test_case   ;previous test
08c4 : c90a            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
08c6 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
000b =                 >test_num = test_num + 1
08c8 : a90b            >            lda #test_num   ;*** this tests' number
08ca : 8d0002          >            sta test_case
                       >            ;check_ram       ;uncomment to find altere
                        
                        
                        ; break & return from interrupt
                            if ROM_vectors = 1
                                set_stat 0
                       >            load_flag 0
08cd : a900            >            lda #0             ;allow test to change I
                       >
08cf : 48              >            pha         ;use stack to load status
08d0 : 28              >            plp
                        
08d1 : a942                     lda #'B'
08d3 : a252                     ldx #'R'
08d5 : a04b                     ldy #'K'        ;N=0, V=0, Z=0, C=0
08d7 : 00                       brk
                            else
                                lda #hi brk_ret ;emulated break
                                pha
                                lda #lo brk_ret
                                pha
                                lda #fao        ;set break & unused on stack
                                pha
                                set_stat intdis
                                lda #'B'
                                ldx #'R'
                                ldy #'K'        ;N=0, V=0, Z=0, C=0
                                jmp irq_trap
                            endif
08d8 : 88                       dey             ;should not be executed
08d9 :                  brk_ret                 ;address of break return
08d9 : 08                       php             ;either SP or Y count will fai
08da : 88                       dey
08db : 88                       dey
08dc : 88                       dey
08dd : c9e8                     cmp #('B'^$aa)  ;returned registers OK?
                                trap_ne
08df : d0fe            >        bne *           ;failed not equal (non zero)
                        
08e1 : e053                     cpx #('R'+1)
                                trap_ne
08e3 : d0fe            >        bne *           ;failed not equal (non zero)
                        
08e5 : c045                     cpy #('K'-6)
                                trap_ne
08e7 : d0fe            >        bne *           ;failed not equal (non zero)
                        
08e9 : 68                       pla             ;returned flags OK (unchanged)
                                cmp_flag 0
08ea : c930            >            cmp #(0|fao)&m8    ;expected flags + alway
                        
                                trap_ne
08ec : d0fe            >        bne *           ;failed not equal (non zero)
                        
08ee : ba                       tsx             ;sp?
08ef : e0ff                     cpx #$ff
                                trap_ne
08f1 : d0fe            >        bne *           ;failed not equal (non zero)
                        
                                next_test
08f3 : ad0002          >            lda test_case   ;previous test
08f6 : c90b            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
08f8 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
000c =                 >test_num = test_num + 1
08fa : a90c            >            lda #test_num   ;*** this tests' number
08fc : 8d0002          >            sta test_case
                       >            ;check_ram       ;uncomment to find altere
                        
                         
                        ; test set and clear flags CLC CLI CLD CLV SEC SEI SED
                                set_stat $ff
                       >            load_flag $ff
08ff : a9ff            >            lda #$ff             ;allow test to change
                       >
0901 : 48              >            pha         ;use stack to load status
0902 : 28              >            plp
                        
0903 : 18                       clc
                                tst_stat $ff-carry
0904 : 08              >            php         ;save status
0905 : 08              >            php         ;use stack to retrieve status
0906 : 68              >            pla
                       >            cmp_flag $ff-carry
0907 : c9fe            >            cmp #($ff-carry|fao)&m8    ;expected flags
                       >
                       >            trap_ne
0909 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
090b : 28              >            plp         ;restore status
                        
090c : 38                       sec
                                tst_stat $ff
090d : 08              >            php         ;save status
090e : 08              >            php         ;use stack to retrieve status
090f : 68              >            pla
                       >            cmp_flag $ff
0910 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + alw
                       >
                       >            trap_ne
0912 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0914 : 28              >            plp         ;restore status
                        
                            if I_flag = 3
0915 : 58                       cli
                                tst_stat $ff-intdis
0916 : 08              >            php         ;save status
0917 : 08              >            php         ;use stack to retrieve status
0918 : 68              >            pla
                       >            cmp_flag $ff-intdis
0919 : c9fb            >            cmp #($ff-intdis|fao)&m8    ;expected flag
                       >
                       >            trap_ne
091b : d0fe            >        bne *           ;failed not equal (non zero)
                       >
091d : 28              >            plp         ;restore status
                        
091e : 78                       sei
                                tst_stat $ff
091f : 08              >            php         ;save status
0920 : 08              >            php         ;use stack to retrieve status
0921 : 68              >            pla
                       >            cmp_flag $ff
0922 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + alw
                       >
                       >            trap_ne
0924 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0926 : 28              >            plp         ;restore status
                        
                            endif
0927 : d8                       cld
                                tst_stat $ff-decmode
0928 : 08              >            php         ;save status
0929 : 08              >            php         ;use stack to retrieve status
092a : 68              >            pla
                       >            cmp_flag $ff-decmode
092b : c9f7            >            cmp #($ff-decmode|fao)&m8    ;expected fla
                       >
                       >            trap_ne
092d : d0fe            >        bne *           ;failed not equal (non zero)
                       >
092f : 28              >            plp         ;restore status
                        
0930 : f8                       sed
                                tst_stat $ff
0931 : 08              >            php         ;save status
0932 : 08              >            php         ;use stack to retrieve status
0933 : 68              >            pla
                       >            cmp_flag $ff
0934 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + alw
                       >
                       >            trap_ne
0936 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0938 : 28              >            plp         ;restore status
                        
0939 : b8                       clv
                                tst_stat $ff-overfl
093a : 08              >            php         ;save status
093b : 08              >            php         ;use stack to retrieve status
093c : 68              >            pla
                       >            cmp_flag $ff-overfl
093d : c9bf            >            cmp #($ff-overfl|fao)&m8    ;expected flag
                       >
                       >            trap_ne
093f : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0941 : 28              >            plp         ;restore status
                        
                                set_stat 0
                       >            load_flag 0
0942 : a900            >            lda #0             ;allow test to change I
                       >
0944 : 48              >            pha         ;use stack to load status
0945 : 28              >            plp
                        
                                tst_stat 0
0946 : 08              >            php         ;save status
0947 : 08              >            php         ;use stack to retrieve status
0948 : 68              >            pla
                       >            cmp_flag 0
0949 : c930            >            cmp #(0|fao)&m8    ;expected flags + alway
                       >
                       >            trap_ne
094b : d0fe            >        bne *           ;failed not equal (non zero)
                       >
094d : 28              >            plp         ;restore status
                        
094e : 38                       sec
                                tst_stat carry
094f : 08              >            php         ;save status
0950 : 08              >            php         ;use stack to retrieve status
0951 : 68              >            pla
                       >            cmp_flag carry
0952 : c931            >            cmp #(carry|fao)&m8    ;expected flags + a
                       >
                       >            trap_ne
0954 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0956 : 28              >            plp         ;restore status
                        
0957 : 18                       clc
                                tst_stat 0  
0958 : 08              >            php         ;save status
0959 : 08              >            php         ;use stack to retrieve status
095a : 68              >            pla
                       >            cmp_flag 0  
095b : c930            >            cmp #(0  |fao)&m8    ;expected flags + alw
                       >
                       >            trap_ne
095d : d0fe            >        bne *           ;failed not equal (non zero)
                       >
095f : 28              >            plp         ;restore status
                        
                            if I_flag = 3
0960 : 78                       sei
                                tst_stat intdis
0961 : 08              >            php         ;save status
0962 : 08              >            php         ;use stack to retrieve status
0963 : 68              >            pla
                       >            cmp_flag intdis
0964 : c934            >            cmp #(intdis|fao)&m8    ;expected flags + 
                       >
                       >            trap_ne
0966 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0968 : 28              >            plp         ;restore status
                        
0969 : 58                       cli
                                tst_stat 0
096a : 08              >            php         ;save status
096b : 08              >            php         ;use stack to retrieve status
096c : 68              >            pla
                       >            cmp_flag 0
096d : c930            >            cmp #(0|fao)&m8    ;expected flags + alway
                       >
                       >            trap_ne
096f : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0971 : 28              >            plp         ;restore status
                        
                            endif  
0972 : f8                       sed
                                tst_stat decmode
0973 : 08              >            php         ;save status
0974 : 08              >            php         ;use stack to retrieve status
0975 : 68              >            pla
                       >            cmp_flag decmode
0976 : c938            >            cmp #(decmode|fao)&m8    ;expected flags +
                       >
                       >            trap_ne
0978 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
097a : 28              >            plp         ;restore status
                        
097b : d8                       cld
                                tst_stat 0  
097c : 08              >            php         ;save status
097d : 08              >            php         ;use stack to retrieve status
097e : 68              >            pla
                       >            cmp_flag 0  
097f : c930            >            cmp #(0  |fao)&m8    ;expected flags + alw
                       >
                       >            trap_ne
0981 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0983 : 28              >            plp         ;restore status
                        
                                set_stat overfl
                       >            load_flag overfl
0984 : a940            >            lda #overfl             ;allow test to cha
                       >
0986 : 48              >            pha         ;use stack to load status
0987 : 28              >            plp
                        
                                tst_stat overfl
0988 : 08              >            php         ;save status
0989 : 08              >            php         ;use stack to retrieve status
098a : 68              >            pla
                       >            cmp_flag overfl
098b : c970            >            cmp #(overfl|fao)&m8    ;expected flags + 
                       >
                       >            trap_ne
098d : d0fe            >        bne *           ;failed not equal (non zero)
                       >
098f : 28              >            plp         ;restore status
                        
0990 : b8                       clv
                                tst_stat 0
0991 : 08              >            php         ;save status
0992 : 08              >            php         ;use stack to retrieve status
0993 : 68              >            pla
                       >            cmp_flag 0
0994 : c930            >            cmp #(0|fao)&m8    ;expected flags + alway
                       >
                       >            trap_ne
0996 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0998 : 28              >            plp         ;restore status
                        
                                next_test
0999 : ad0002          >            lda test_case   ;previous test
099c : c90c            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
099e : d0fe            >        bne *           ;failed not equal (non zero)
                       >
000d =                 >test_num = test_num + 1
09a0 : a90d            >            lda #test_num   ;*** this tests' number
09a2 : 8d0002          >            sta test_case
                       >            ;check_ram       ;uncomment to find altere
                        
                        ; testing index register increment/decrement and trans
                        ; INX INY DEX DEY TAX TXA TAY TYA 
09a5 : a2fe                     ldx #$fe
                                set_stat $ff
                       >            load_flag $ff
09a7 : a9ff            >            lda #$ff             ;allow test to change
                       >
09a9 : 48              >            pha         ;use stack to load status
09aa : 28              >            plp
                        
09ab : e8                       inx             ;ff
                                tst_x $ff,$ff-zero
09ac : 08              >            php         ;save flags
09ad : 08              >            php
09ae : e0ff            >            cpx #$ff     ;test result
                       >            trap_ne
09b0 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
09b2 : 68              >            pla         ;load status
                       >            cmp_flag $ff-zero
09b3 : c9fd            >            cmp #($ff-zero|fao)&m8    ;expected flags 
                       >
                       >            trap_ne
09b5 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
09b7 : 28              >            plp         ;restore status
                        
09b8 : e8                       inx             ;00
                                tst_x 0,$ff-minus
09b9 : 08              >            php         ;save flags
09ba : 08              >            php
09bb : e000            >            cpx #0     ;test result
                       >            trap_ne
09bd : d0fe            >        bne *           ;failed not equal (non zero)
                       >
09bf : 68              >            pla         ;load status
                       >            cmp_flag $ff-minus
09c0 : c97f            >            cmp #($ff-minus|fao)&m8    ;expected flags
                       >
                       >            trap_ne
09c2 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
09c4 : 28              >            plp         ;restore status
                        
09c5 : e8                       inx             ;01
                                tst_x 1,$ff-minus-zero
09c6 : 08              >            php         ;save flags
09c7 : 08              >            php
09c8 : e001            >            cpx #1     ;test result
                       >            trap_ne
09ca : d0fe            >        bne *           ;failed not equal (non zero)
                       >
09cc : 68              >            pla         ;load status
                       >            cmp_flag $ff-minus-zero
09cd : c97d            >            cmp #($ff-minus-zero|fao)&m8    ;expected 
                       >
                       >            trap_ne
09cf : d0fe            >        bne *           ;failed not equal (non zero)
                       >
09d1 : 28              >            plp         ;restore status
                        
09d2 : ca                       dex             ;00
                                tst_x 0,$ff-minus
09d3 : 08              >            php         ;save flags
09d4 : 08              >            php
09d5 : e000            >            cpx #0     ;test result
                       >            trap_ne
09d7 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
09d9 : 68              >            pla         ;load status
                       >            cmp_flag $ff-minus
09da : c97f            >            cmp #($ff-minus|fao)&m8    ;expected flags
                       >
                       >            trap_ne
09dc : d0fe            >        bne *           ;failed not equal (non zero)
                       >
09de : 28              >            plp         ;restore status
                        
09df : ca                       dex             ;ff
                                tst_x $ff,$ff-zero
09e0 : 08              >            php         ;save flags
09e1 : 08              >            php
09e2 : e0ff            >            cpx #$ff     ;test result
                       >            trap_ne
09e4 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
09e6 : 68              >            pla         ;load status
                       >            cmp_flag $ff-zero
09e7 : c9fd            >            cmp #($ff-zero|fao)&m8    ;expected flags 
                       >
                       >            trap_ne
09e9 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
09eb : 28              >            plp         ;restore status
                        
09ec : ca                       dex             ;fe
                                set_stat 0
                       >            load_flag 0
09ed : a900            >            lda #0             ;allow test to change I
                       >
09ef : 48              >            pha         ;use stack to load status
09f0 : 28              >            plp
                        
09f1 : e8                       inx             ;ff
                                tst_x $ff,minus
09f2 : 08              >            php         ;save flags
09f3 : 08              >            php
09f4 : e0ff            >            cpx #$ff     ;test result
                       >            trap_ne
09f6 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
09f8 : 68              >            pla         ;load status
                       >            cmp_flag minus
09f9 : c9b0            >            cmp #(minus|fao)&m8    ;expected flags + a
                       >
                       >            trap_ne
09fb : d0fe            >        bne *           ;failed not equal (non zero)
                       >
09fd : 28              >            plp         ;restore status
                        
09fe : e8                       inx             ;00
                                tst_x 0,zero
09ff : 08              >            php         ;save flags
0a00 : 08              >            php
0a01 : e000            >            cpx #0     ;test result
                       >            trap_ne
0a03 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0a05 : 68              >            pla         ;load status
                       >            cmp_flag zero
0a06 : c932            >            cmp #(zero|fao)&m8    ;expected flags + al
                       >
                       >            trap_ne
0a08 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0a0a : 28              >            plp         ;restore status
                        
0a0b : e8                       inx             ;01
                                tst_x 1,0
0a0c : 08              >            php         ;save flags
0a0d : 08              >            php
0a0e : e001            >            cpx #1     ;test result
                       >            trap_ne
0a10 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0a12 : 68              >            pla         ;load status
                       >            cmp_flag 0
0a13 : c930            >            cmp #(0|fao)&m8    ;expected flags + alway
                       >
                       >            trap_ne
0a15 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0a17 : 28              >            plp         ;restore status
                        
0a18 : ca                       dex             ;00
                                tst_x 0,zero
0a19 : 08              >            php         ;save flags
0a1a : 08              >            php
0a1b : e000            >            cpx #0     ;test result
                       >            trap_ne
0a1d : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0a1f : 68              >            pla         ;load status
                       >            cmp_flag zero
0a20 : c932            >            cmp #(zero|fao)&m8    ;expected flags + al
                       >
                       >            trap_ne
0a22 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0a24 : 28              >            plp         ;restore status
                        
0a25 : ca                       dex             ;ff
                                tst_x $ff,minus
0a26 : 08              >            php         ;save flags
0a27 : 08              >            php
0a28 : e0ff            >            cpx #$ff     ;test result
                       >            trap_ne
0a2a : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0a2c : 68              >            pla         ;load status
                       >            cmp_flag minus
0a2d : c9b0            >            cmp #(minus|fao)&m8    ;expected flags + a
                       >
                       >            trap_ne
0a2f : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0a31 : 28              >            plp         ;restore status
                        
                        
0a32 : a0fe                     ldy #$fe
                                set_stat $ff
                       >            load_flag $ff
0a34 : a9ff            >            lda #$ff             ;allow test to change
                       >
0a36 : 48              >            pha         ;use stack to load status
0a37 : 28              >            plp
                        
0a38 : c8                       iny             ;ff
                                tst_y $ff,$ff-zero
0a39 : 08              >            php         ;save flags
0a3a : 08              >            php
0a3b : c0ff            >            cpy #$ff     ;test result
                       >            trap_ne
0a3d : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0a3f : 68              >            pla         ;load status
                       >            cmp_flag $ff-zero
0a40 : c9fd            >            cmp #($ff-zero|fao)&m8    ;expected flags 
                       >
                       >            trap_ne
0a42 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0a44 : 28              >            plp         ;restore status
                        
0a45 : c8                       iny             ;00
                                tst_y 0,$ff-minus
0a46 : 08              >            php         ;save flags
0a47 : 08              >            php
0a48 : c000            >            cpy #0     ;test result
                       >            trap_ne
0a4a : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0a4c : 68              >            pla         ;load status
                       >            cmp_flag $ff-minus
0a4d : c97f            >            cmp #($ff-minus|fao)&m8    ;expected flags
                       >
                       >            trap_ne
0a4f : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0a51 : 28              >            plp         ;restore status
                        
0a52 : c8                       iny             ;01
                                tst_y 1,$ff-minus-zero
0a53 : 08              >            php         ;save flags
0a54 : 08              >            php
0a55 : c001            >            cpy #1     ;test result
                       >            trap_ne
0a57 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0a59 : 68              >            pla         ;load status
                       >            cmp_flag $ff-minus-zero
0a5a : c97d            >            cmp #($ff-minus-zero|fao)&m8    ;expected 
                       >
                       >            trap_ne
0a5c : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0a5e : 28              >            plp         ;restore status
                        
0a5f : 88                       dey             ;00
                                tst_y 0,$ff-minus
0a60 : 08              >            php         ;save flags
0a61 : 08              >            php
0a62 : c000            >            cpy #0     ;test result
                       >            trap_ne
0a64 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0a66 : 68              >            pla         ;load status
                       >            cmp_flag $ff-minus
0a67 : c97f            >            cmp #($ff-minus|fao)&m8    ;expected flags
                       >
                       >            trap_ne
0a69 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0a6b : 28              >            plp         ;restore status
                        
0a6c : 88                       dey             ;ff
                                tst_y $ff,$ff-zero
0a6d : 08              >            php         ;save flags
0a6e : 08              >            php
0a6f : c0ff            >            cpy #$ff     ;test result
                       >            trap_ne
0a71 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0a73 : 68              >            pla         ;load status
                       >            cmp_flag $ff-zero
0a74 : c9fd            >            cmp #($ff-zero|fao)&m8    ;expected flags 
                       >
                       >            trap_ne
0a76 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0a78 : 28              >            plp         ;restore status
                        
0a79 : 88                       dey             ;fe
                                set_stat 0
                       >            load_flag 0
0a7a : a900            >            lda #0             ;allow test to change I
                       >
0a7c : 48              >            pha         ;use stack to load status
0a7d : 28              >            plp
                        
0a7e : c8                       iny             ;ff
                                tst_y $ff,0+minus
0a7f : 08              >            php         ;save flags
0a80 : 08              >            php
0a81 : c0ff            >            cpy #$ff     ;test result
                       >            trap_ne
0a83 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0a85 : 68              >            pla         ;load status
                       >            cmp_flag 0+minus
0a86 : c9b0            >            cmp #(0+minus|fao)&m8    ;expected flags +
                       >
                       >            trap_ne
0a88 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0a8a : 28              >            plp         ;restore status
                        
0a8b : c8                       iny             ;00
                                tst_y 0,zero
0a8c : 08              >            php         ;save flags
0a8d : 08              >            php
0a8e : c000            >            cpy #0     ;test result
                       >            trap_ne
0a90 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0a92 : 68              >            pla         ;load status
                       >            cmp_flag zero
0a93 : c932            >            cmp #(zero|fao)&m8    ;expected flags + al
                       >
                       >            trap_ne
0a95 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0a97 : 28              >            plp         ;restore status
                        
0a98 : c8                       iny             ;01
                                tst_y 1,0
0a99 : 08              >            php         ;save flags
0a9a : 08              >            php
0a9b : c001            >            cpy #1     ;test result
                       >            trap_ne
0a9d : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0a9f : 68              >            pla         ;load status
                       >            cmp_flag 0
0aa0 : c930            >            cmp #(0|fao)&m8    ;expected flags + alway
                       >
                       >            trap_ne
0aa2 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0aa4 : 28              >            plp         ;restore status
                        
0aa5 : 88                       dey             ;00
                                tst_y 0,zero
0aa6 : 08              >            php         ;save flags
0aa7 : 08              >            php
0aa8 : c000            >            cpy #0     ;test result
                       >            trap_ne
0aaa : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0aac : 68              >            pla         ;load status
                       >            cmp_flag zero
0aad : c932            >            cmp #(zero|fao)&m8    ;expected flags + al
                       >
                       >            trap_ne
0aaf : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0ab1 : 28              >            plp         ;restore status
                        
0ab2 : 88                       dey             ;ff
                                tst_y $ff,minus
0ab3 : 08              >            php         ;save flags
0ab4 : 08              >            php
0ab5 : c0ff            >            cpy #$ff     ;test result
                       >            trap_ne
0ab7 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0ab9 : 68              >            pla         ;load status
                       >            cmp_flag minus
0aba : c9b0            >            cmp #(minus|fao)&m8    ;expected flags + a
                       >
                       >            trap_ne
0abc : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0abe : 28              >            plp         ;restore status
                        
                                        
0abf : a2ff                     ldx #$ff
                                set_stat $ff
                       >            load_flag $ff
0ac1 : a9ff            >            lda #$ff             ;allow test to change
                       >
0ac3 : 48              >            pha         ;use stack to load status
0ac4 : 28              >            plp
                        
0ac5 : 8a                       txa
                                tst_a $ff,$ff-zero
0ac6 : 08              >            php         ;save flags
0ac7 : 08              >            php
0ac8 : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
0aca : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0acc : 68              >            pla         ;load status
                       >            cmp_flag $ff-zero
0acd : c9fd            >            cmp #($ff-zero|fao)&m8    ;expected flags 
                       >
                       >            trap_ne
0acf : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0ad1 : 28              >            plp         ;restore status
                        
0ad2 : 08                       php
0ad3 : e8                       inx             ;00
0ad4 : 28                       plp
0ad5 : 8a                       txa
                                tst_a 0,$ff-minus
0ad6 : 08              >            php         ;save flags
0ad7 : 08              >            php
0ad8 : c900            >            cmp #0     ;test result
                       >            trap_ne
0ada : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0adc : 68              >            pla         ;load status
                       >            cmp_flag $ff-minus
0add : c97f            >            cmp #($ff-minus|fao)&m8    ;expected flags
                       >
                       >            trap_ne
0adf : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0ae1 : 28              >            plp         ;restore status
                        
0ae2 : 08                       php
0ae3 : e8                       inx             ;01
0ae4 : 28                       plp
0ae5 : 8a                       txa
                                tst_a 1,$ff-minus-zero
0ae6 : 08              >            php         ;save flags
0ae7 : 08              >            php
0ae8 : c901            >            cmp #1     ;test result
                       >            trap_ne
0aea : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0aec : 68              >            pla         ;load status
                       >            cmp_flag $ff-minus-zero
0aed : c97d            >            cmp #($ff-minus-zero|fao)&m8    ;expected 
                       >
                       >            trap_ne
0aef : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0af1 : 28              >            plp         ;restore status
                        
                                set_stat 0
                       >            load_flag 0
0af2 : a900            >            lda #0             ;allow test to change I
                       >
0af4 : 48              >            pha         ;use stack to load status
0af5 : 28              >            plp
                        
0af6 : 8a                       txa
                                tst_a 1,0
0af7 : 08              >            php         ;save flags
0af8 : 08              >            php
0af9 : c901            >            cmp #1     ;test result
                       >            trap_ne
0afb : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0afd : 68              >            pla         ;load status
                       >            cmp_flag 0
0afe : c930            >            cmp #(0|fao)&m8    ;expected flags + alway
                       >
                       >            trap_ne
0b00 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0b02 : 28              >            plp         ;restore status
                        
0b03 : 08                       php
0b04 : ca                       dex             ;00
0b05 : 28                       plp
0b06 : 8a                       txa
                                tst_a 0,zero
0b07 : 08              >            php         ;save flags
0b08 : 08              >            php
0b09 : c900            >            cmp #0     ;test result
                       >            trap_ne
0b0b : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0b0d : 68              >            pla         ;load status
                       >            cmp_flag zero
0b0e : c932            >            cmp #(zero|fao)&m8    ;expected flags + al
                       >
                       >            trap_ne
0b10 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0b12 : 28              >            plp         ;restore status
                        
0b13 : 08                       php
0b14 : ca                       dex             ;ff
0b15 : 28                       plp
0b16 : 8a                       txa
                                tst_a $ff,minus
0b17 : 08              >            php         ;save flags
0b18 : 08              >            php
0b19 : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
0b1b : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0b1d : 68              >            pla         ;load status
                       >            cmp_flag minus
0b1e : c9b0            >            cmp #(minus|fao)&m8    ;expected flags + a
                       >
                       >            trap_ne
0b20 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0b22 : 28              >            plp         ;restore status
                        
                                                
0b23 : a0ff                     ldy #$ff
                                set_stat $ff
                       >            load_flag $ff
0b25 : a9ff            >            lda #$ff             ;allow test to change
                       >
0b27 : 48              >            pha         ;use stack to load status
0b28 : 28              >            plp
                        
0b29 : 98                       tya
                                tst_a $ff,$ff-zero
0b2a : 08              >            php         ;save flags
0b2b : 08              >            php
0b2c : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
0b2e : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0b30 : 68              >            pla         ;load status
                       >            cmp_flag $ff-zero
0b31 : c9fd            >            cmp #($ff-zero|fao)&m8    ;expected flags 
                       >
                       >            trap_ne
0b33 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0b35 : 28              >            plp         ;restore status
                        
0b36 : 08                       php
0b37 : c8                       iny             ;00
0b38 : 28                       plp
0b39 : 98                       tya
                                tst_a 0,$ff-minus
0b3a : 08              >            php         ;save flags
0b3b : 08              >            php
0b3c : c900            >            cmp #0     ;test result
                       >            trap_ne
0b3e : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0b40 : 68              >            pla         ;load status
                       >            cmp_flag $ff-minus
0b41 : c97f            >            cmp #($ff-minus|fao)&m8    ;expected flags
                       >
                       >            trap_ne
0b43 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0b45 : 28              >            plp         ;restore status
                        
0b46 : 08                       php
0b47 : c8                       iny             ;01
0b48 : 28                       plp
0b49 : 98                       tya
                                tst_a 1,$ff-minus-zero
0b4a : 08              >            php         ;save flags
0b4b : 08              >            php
0b4c : c901            >            cmp #1     ;test result
                       >            trap_ne
0b4e : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0b50 : 68              >            pla         ;load status
                       >            cmp_flag $ff-minus-zero
0b51 : c97d            >            cmp #($ff-minus-zero|fao)&m8    ;expected 
                       >
                       >            trap_ne
0b53 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0b55 : 28              >            plp         ;restore status
                        
                                set_stat 0
                       >            load_flag 0
0b56 : a900            >            lda #0             ;allow test to change I
                       >
0b58 : 48              >            pha         ;use stack to load status
0b59 : 28              >            plp
                        
0b5a : 98                       tya
                                tst_a 1,0
0b5b : 08              >            php         ;save flags
0b5c : 08              >            php
0b5d : c901            >            cmp #1     ;test result
                       >            trap_ne
0b5f : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0b61 : 68              >            pla         ;load status
                       >            cmp_flag 0
0b62 : c930            >            cmp #(0|fao)&m8    ;expected flags + alway
                       >
                       >            trap_ne
0b64 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0b66 : 28              >            plp         ;restore status
                        
0b67 : 08                       php
0b68 : 88                       dey             ;00
0b69 : 28                       plp
0b6a : 98                       tya
                                tst_a 0,zero
0b6b : 08              >            php         ;save flags
0b6c : 08              >            php
0b6d : c900            >            cmp #0     ;test result
                       >            trap_ne
0b6f : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0b71 : 68              >            pla         ;load status
                       >            cmp_flag zero
0b72 : c932            >            cmp #(zero|fao)&m8    ;expected flags + al
                       >
                       >            trap_ne
0b74 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0b76 : 28              >            plp         ;restore status
                        
0b77 : 08                       php
0b78 : 88                       dey             ;ff
0b79 : 28                       plp
0b7a : 98                       tya
                                tst_a $ff,minus
0b7b : 08              >            php         ;save flags
0b7c : 08              >            php
0b7d : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
0b7f : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0b81 : 68              >            pla         ;load status
                       >            cmp_flag minus
0b82 : c9b0            >            cmp #(minus|fao)&m8    ;expected flags + a
                       >
                       >            trap_ne
0b84 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0b86 : 28              >            plp         ;restore status
                        
                        
                                load_flag $ff
0b87 : a9ff            >            lda #$ff             ;allow test to change
                        
0b89 : 48                       pha
0b8a : a2ff                     ldx #$ff        ;ff
0b8c : 8a                       txa
0b8d : 28                       plp             
0b8e : a8                       tay
                                tst_y $ff,$ff-zero
0b8f : 08              >            php         ;save flags
0b90 : 08              >            php
0b91 : c0ff            >            cpy #$ff     ;test result
                       >            trap_ne
0b93 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0b95 : 68              >            pla         ;load status
                       >            cmp_flag $ff-zero
0b96 : c9fd            >            cmp #($ff-zero|fao)&m8    ;expected flags 
                       >
                       >            trap_ne
0b98 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0b9a : 28              >            plp         ;restore status
                        
0b9b : 08                       php
0b9c : e8                       inx             ;00
0b9d : 8a                       txa
0b9e : 28                       plp
0b9f : a8                       tay
                                tst_y 0,$ff-minus
0ba0 : 08              >            php         ;save flags
0ba1 : 08              >            php
0ba2 : c000            >            cpy #0     ;test result
                       >            trap_ne
0ba4 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0ba6 : 68              >            pla         ;load status
                       >            cmp_flag $ff-minus
0ba7 : c97f            >            cmp #($ff-minus|fao)&m8    ;expected flags
                       >
                       >            trap_ne
0ba9 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0bab : 28              >            plp         ;restore status
                        
0bac : 08                       php
0bad : e8                       inx             ;01
0bae : 8a                       txa
0baf : 28                       plp
0bb0 : a8                       tay
                                tst_y 1,$ff-minus-zero
0bb1 : 08              >            php         ;save flags
0bb2 : 08              >            php
0bb3 : c001            >            cpy #1     ;test result
                       >            trap_ne
0bb5 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0bb7 : 68              >            pla         ;load status
                       >            cmp_flag $ff-minus-zero
0bb8 : c97d            >            cmp #($ff-minus-zero|fao)&m8    ;expected 
                       >
                       >            trap_ne
0bba : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0bbc : 28              >            plp         ;restore status
                        
                                load_flag 0
0bbd : a900            >            lda #0             ;allow test to change I
                        
0bbf : 48                       pha
0bc0 : a900                     lda #0
0bc2 : 8a                       txa
0bc3 : 28                       plp
0bc4 : a8                       tay
                                tst_y 1,0
0bc5 : 08              >            php         ;save flags
0bc6 : 08              >            php
0bc7 : c001            >            cpy #1     ;test result
                       >            trap_ne
0bc9 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0bcb : 68              >            pla         ;load status
                       >            cmp_flag 0
0bcc : c930            >            cmp #(0|fao)&m8    ;expected flags + alway
                       >
                       >            trap_ne
0bce : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0bd0 : 28              >            plp         ;restore status
                        
0bd1 : 08                       php
0bd2 : ca                       dex             ;00
0bd3 : 8a                       txa
0bd4 : 28                       plp
0bd5 : a8                       tay
                                tst_y 0,zero
0bd6 : 08              >            php         ;save flags
0bd7 : 08              >            php
0bd8 : c000            >            cpy #0     ;test result
                       >            trap_ne
0bda : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0bdc : 68              >            pla         ;load status
                       >            cmp_flag zero
0bdd : c932            >            cmp #(zero|fao)&m8    ;expected flags + al
                       >
                       >            trap_ne
0bdf : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0be1 : 28              >            plp         ;restore status
                        
0be2 : 08                       php
0be3 : ca                       dex             ;ff
0be4 : 8a                       txa
0be5 : 28                       plp
0be6 : a8                       tay
                                tst_y $ff,minus
0be7 : 08              >            php         ;save flags
0be8 : 08              >            php
0be9 : c0ff            >            cpy #$ff     ;test result
                       >            trap_ne
0beb : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0bed : 68              >            pla         ;load status
                       >            cmp_flag minus
0bee : c9b0            >            cmp #(minus|fao)&m8    ;expected flags + a
                       >
                       >            trap_ne
0bf0 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0bf2 : 28              >            plp         ;restore status
                        
                        
                        
                                load_flag $ff
0bf3 : a9ff            >            lda #$ff             ;allow test to change
                        
0bf5 : 48                       pha
0bf6 : a0ff                     ldy #$ff        ;ff
0bf8 : 98                       tya
0bf9 : 28                       plp
0bfa : aa                       tax
                                tst_x $ff,$ff-zero
0bfb : 08              >            php         ;save flags
0bfc : 08              >            php
0bfd : e0ff            >            cpx #$ff     ;test result
                       >            trap_ne
0bff : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0c01 : 68              >            pla         ;load status
                       >            cmp_flag $ff-zero
0c02 : c9fd            >            cmp #($ff-zero|fao)&m8    ;expected flags 
                       >
                       >            trap_ne
0c04 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0c06 : 28              >            plp         ;restore status
                        
0c07 : 08                       php
0c08 : c8                       iny             ;00
0c09 : 98                       tya
0c0a : 28                       plp
0c0b : aa                       tax
                                tst_x 0,$ff-minus
0c0c : 08              >            php         ;save flags
0c0d : 08              >            php
0c0e : e000            >            cpx #0     ;test result
                       >            trap_ne
0c10 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0c12 : 68              >            pla         ;load status
                       >            cmp_flag $ff-minus
0c13 : c97f            >            cmp #($ff-minus|fao)&m8    ;expected flags
                       >
                       >            trap_ne
0c15 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0c17 : 28              >            plp         ;restore status
                        
0c18 : 08                       php
0c19 : c8                       iny             ;01
0c1a : 98                       tya
0c1b : 28                       plp
0c1c : aa                       tax
                                tst_x 1,$ff-minus-zero
0c1d : 08              >            php         ;save flags
0c1e : 08              >            php
0c1f : e001            >            cpx #1     ;test result
                       >            trap_ne
0c21 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0c23 : 68              >            pla         ;load status
                       >            cmp_flag $ff-minus-zero
0c24 : c97d            >            cmp #($ff-minus-zero|fao)&m8    ;expected 
                       >
                       >            trap_ne
0c26 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0c28 : 28              >            plp         ;restore status
                        
                                load_flag 0
0c29 : a900            >            lda #0             ;allow test to change I
                        
0c2b : 48                       pha
0c2c : a900                     lda #0          ;preset status
0c2e : 98                       tya
0c2f : 28                       plp
0c30 : aa                       tax
                                tst_x 1,0
0c31 : 08              >            php         ;save flags
0c32 : 08              >            php
0c33 : e001            >            cpx #1     ;test result
                       >            trap_ne
0c35 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0c37 : 68              >            pla         ;load status
                       >            cmp_flag 0
0c38 : c930            >            cmp #(0|fao)&m8    ;expected flags + alway
                       >
                       >            trap_ne
0c3a : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0c3c : 28              >            plp         ;restore status
                        
0c3d : 08                       php
0c3e : 88                       dey             ;00
0c3f : 98                       tya
0c40 : 28                       plp
0c41 : aa                       tax
                                tst_x 0,zero
0c42 : 08              >            php         ;save flags
0c43 : 08              >            php
0c44 : e000            >            cpx #0     ;test result
                       >            trap_ne
0c46 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0c48 : 68              >            pla         ;load status
                       >            cmp_flag zero
0c49 : c932            >            cmp #(zero|fao)&m8    ;expected flags + al
                       >
                       >            trap_ne
0c4b : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0c4d : 28              >            plp         ;restore status
                        
0c4e : 08                       php
0c4f : 88                       dey             ;ff
0c50 : 98                       tya
0c51 : 28                       plp
0c52 : aa                       tax
                                tst_x $ff,minus
0c53 : 08              >            php         ;save flags
0c54 : 08              >            php
0c55 : e0ff            >            cpx #$ff     ;test result
                       >            trap_ne
0c57 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0c59 : 68              >            pla         ;load status
                       >            cmp_flag minus
0c5a : c9b0            >            cmp #(minus|fao)&m8    ;expected flags + a
                       >
                       >            trap_ne
0c5c : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0c5e : 28              >            plp         ;restore status
                        
                                next_test
0c5f : ad0002          >            lda test_case   ;previous test
0c62 : c90d            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
0c64 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
000e =                 >test_num = test_num + 1
0c66 : a90e            >            lda #test_num   ;*** this tests' number
0c68 : 8d0002          >            sta test_case
                       >            ;check_ram       ;uncomment to find altere
                        
                             
                        ;TSX sets NZ - TXS does not
0c6b : a201                     ldx #1          ;01
                                set_stat $ff
                       >            load_flag $ff
0c6d : a9ff            >            lda #$ff             ;allow test to change
                       >
0c6f : 48              >            pha         ;use stack to load status
0c70 : 28              >            plp
                        
0c71 : 9a                       txs
0c72 : 08                       php
0c73 : ad0101                   lda $101
                                cmp_flag $ff
0c76 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + alw
                        
                                trap_ne
0c78 : d0fe            >        bne *           ;failed not equal (non zero)
                        
                                set_stat 0
                       >            load_flag 0
0c7a : a900            >            lda #0             ;allow test to change I
                       >
0c7c : 48              >            pha         ;use stack to load status
0c7d : 28              >            plp
                        
0c7e : 9a                       txs
0c7f : 08                       php
0c80 : ad0101                   lda $101
                                cmp_flag 0
0c83 : c930            >            cmp #(0|fao)&m8    ;expected flags + alway
                        
                                trap_ne
0c85 : d0fe            >        bne *           ;failed not equal (non zero)
                        
0c87 : ca                       dex             ;00
                                set_stat $ff
                       >            load_flag $ff
0c88 : a9ff            >            lda #$ff             ;allow test to change
                       >
0c8a : 48              >            pha         ;use stack to load status
0c8b : 28              >            plp
                        
0c8c : 9a                       txs
0c8d : 08                       php
0c8e : ad0001                   lda $100
                                cmp_flag $ff
0c91 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + alw
                        
                                trap_ne
0c93 : d0fe            >        bne *           ;failed not equal (non zero)
                        
                                set_stat 0
                       >            load_flag 0
0c95 : a900            >            lda #0             ;allow test to change I
                       >
0c97 : 48              >            pha         ;use stack to load status
0c98 : 28              >            plp
                        
0c99 : 9a                       txs
0c9a : 08                       php
0c9b : ad0001                   lda $100
                                cmp_flag 0
0c9e : c930            >            cmp #(0|fao)&m8    ;expected flags + alway
                        
                                trap_ne
0ca0 : d0fe            >        bne *           ;failed not equal (non zero)
                        
0ca2 : ca                       dex             ;ff
                                set_stat $ff
                       >            load_flag $ff
0ca3 : a9ff            >            lda #$ff             ;allow test to change
                       >
0ca5 : 48              >            pha         ;use stack to load status
0ca6 : 28              >            plp
                        
0ca7 : 9a                       txs
0ca8 : 08                       php
0ca9 : adff01                   lda $1ff
                                cmp_flag $ff
0cac : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + alw
                        
                                trap_ne
0cae : d0fe            >        bne *           ;failed not equal (non zero)
                        
                                set_stat 0
                       >            load_flag 0
0cb0 : a900            >            lda #0             ;allow test to change I
                       >
0cb2 : 48              >            pha         ;use stack to load status
0cb3 : 28              >            plp
                        
0cb4 : 9a                       txs
0cb5 : 08                       php
0cb6 : adff01                   lda $1ff
                                cmp_flag 0
0cb9 : c930            >            cmp #(0|fao)&m8    ;expected flags + alway
                        
                                
0cbb : a201                     ldx #1
0cbd : 9a                       txs             ;sp=01
                                set_stat $ff
                       >            load_flag $ff
0cbe : a9ff            >            lda #$ff             ;allow test to change
                       >
0cc0 : 48              >            pha         ;use stack to load status
0cc1 : 28              >            plp
                        
0cc2 : ba                       tsx             ;clears Z, N
0cc3 : 08                       php             ;sp=00
0cc4 : e001                     cpx #1
                                trap_ne
0cc6 : d0fe            >        bne *           ;failed not equal (non zero)
                        
0cc8 : ad0101                   lda $101
                                cmp_flag $ff-minus-zero
0ccb : c97d            >            cmp #($ff-minus-zero|fao)&m8    ;expected 
                        
                                trap_ne
0ccd : d0fe            >        bne *           ;failed not equal (non zero)
                        
                                set_stat $ff
                       >            load_flag $ff
0ccf : a9ff            >            lda #$ff             ;allow test to change
                       >
0cd1 : 48              >            pha         ;use stack to load status
0cd2 : 28              >            plp
                        
0cd3 : ba                       tsx             ;clears N, sets Z
0cd4 : 08                       php             ;sp=ff
0cd5 : e000                     cpx #0
                                trap_ne
0cd7 : d0fe            >        bne *           ;failed not equal (non zero)
                        
0cd9 : ad0001                   lda $100
                                cmp_flag $ff-minus
0cdc : c97f            >            cmp #($ff-minus|fao)&m8    ;expected flags
                        
                                trap_ne
0cde : d0fe            >        bne *           ;failed not equal (non zero)
                        
                                set_stat $ff
                       >            load_flag $ff
0ce0 : a9ff            >            lda #$ff             ;allow test to change
                       >
0ce2 : 48              >            pha         ;use stack to load status
0ce3 : 28              >            plp
                        
0ce4 : ba                       tsx             ;clears N, sets Z
0ce5 : 08                       php             ;sp=fe
0ce6 : e0ff                     cpx #$ff
                                trap_ne
0ce8 : d0fe            >        bne *           ;failed not equal (non zero)
                        
0cea : adff01                   lda $1ff
                                cmp_flag $ff-zero
0ced : c9fd            >            cmp #($ff-zero|fao)&m8    ;expected flags 
                        
                                trap_ne
0cef : d0fe            >        bne *           ;failed not equal (non zero)
                        
                                
0cf1 : a201                     ldx #1
0cf3 : 9a                       txs             ;sp=01
                                set_stat 0
                       >            load_flag 0
0cf4 : a900            >            lda #0             ;allow test to change I
                       >
0cf6 : 48              >            pha         ;use stack to load status
0cf7 : 28              >            plp
                        
0cf8 : ba                       tsx             ;clears Z, N
0cf9 : 08                       php             ;sp=00
0cfa : e001                     cpx #1
                                trap_ne
0cfc : d0fe            >        bne *           ;failed not equal (non zero)
                        
0cfe : ad0101                   lda $101
                                cmp_flag 0
0d01 : c930            >            cmp #(0|fao)&m8    ;expected flags + alway
                        
                                trap_ne
0d03 : d0fe            >        bne *           ;failed not equal (non zero)
                        
                                set_stat 0
                       >            load_flag 0
0d05 : a900            >            lda #0             ;allow test to change I
                       >
0d07 : 48              >            pha         ;use stack to load status
0d08 : 28              >            plp
                        
0d09 : ba                       tsx             ;clears N, sets Z
0d0a : 08                       php             ;sp=ff
0d0b : e000                     cpx #0
                                trap_ne
0d0d : d0fe            >        bne *           ;failed not equal (non zero)
                        
0d0f : ad0001                   lda $100
                                cmp_flag zero
0d12 : c932            >            cmp #(zero|fao)&m8    ;expected flags + al
                        
                                trap_ne
0d14 : d0fe            >        bne *           ;failed not equal (non zero)
                        
                                set_stat 0
                       >            load_flag 0
0d16 : a900            >            lda #0             ;allow test to change I
                       >
0d18 : 48              >            pha         ;use stack to load status
0d19 : 28              >            plp
                        
0d1a : ba                       tsx             ;clears N, sets Z
0d1b : 08                       php             ;sp=fe
0d1c : e0ff                     cpx #$ff
                                trap_ne
0d1e : d0fe            >        bne *           ;failed not equal (non zero)
                        
0d20 : adff01                   lda $1ff
                                cmp_flag minus
0d23 : c9b0            >            cmp #(minus|fao)&m8    ;expected flags + a
                        
                                trap_ne
0d25 : d0fe            >        bne *           ;failed not equal (non zero)
                        
0d27 : 68                       pla             ;sp=ff
                                next_test
0d28 : ad0002          >            lda test_case   ;previous test
0d2b : c90e            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
0d2d : d0fe            >        bne *           ;failed not equal (non zero)
                       >
000f =                 >test_num = test_num + 1
0d2f : a90f            >            lda #test_num   ;*** this tests' number
0d31 : 8d0002          >            sta test_case
                       >            ;check_ram       ;uncomment to find altere
                        
                                
                        ; testing index register load & store LDY LDX STY STX 
                        ; LDX / STX - zp,y / abs,y
0d34 : a003                     ldy #3
0d36 :                  tldx    
                                set_stat 0
                       >            load_flag 0
0d36 : a900            >            lda #0             ;allow test to change I
                       >
0d38 : 48              >            pha         ;use stack to load status
0d39 : 28              >            plp
                        
0d3a : b613                     ldx zp1,y
0d3c : 08                       php         ;test stores do not alter flags
0d3d : 8a                       txa
0d3e : 49c3                     eor #$c3
0d40 : 28                       plp
0d41 : 990302                   sta abst,y
0d44 : 08                       php         ;flags after load/store sequence
0d45 : 49c3                     eor #$c3
0d47 : d90802                   cmp abs1,y  ;test result
                                trap_ne
0d4a : d0fe            >        bne *           ;failed not equal (non zero)
                        
0d4c : 68                       pla         ;load status
                                eor_flag 0
0d4d : 4930            >            eor #0|fao         ;invert expected flags 
                        
0d4f : d90d02                   cmp fLDx,y  ;test flags
                                trap_ne
0d52 : d0fe            >        bne *           ;failed not equal (non zero)
                        
0d54 : 88                       dey
0d55 : 10df                     bpl tldx                  
                        
0d57 : a003                     ldy #3
0d59 :                  tldx1   
                                set_stat $ff
                       >            load_flag $ff
0d59 : a9ff            >            lda #$ff             ;allow test to change
                       >
0d5b : 48              >            pha         ;use stack to load status
0d5c : 28              >            plp
                        
0d5d : b613                     ldx zp1,y
0d5f : 08                       php         ;test stores do not alter flags
0d60 : 8a                       txa
0d61 : 49c3                     eor #$c3
0d63 : 28                       plp
0d64 : 990302                   sta abst,y
0d67 : 08                       php         ;flags after load/store sequence
0d68 : 49c3                     eor #$c3
0d6a : d90802                   cmp abs1,y  ;test result
                                trap_ne
0d6d : d0fe            >        bne *           ;failed not equal (non zero)
                        
0d6f : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
0d70 : 497d            >            eor #lo~fnz |fao         ;invert expected 
                        
0d72 : d90d02                   cmp fLDx,y  ;test flags
                                trap_ne
0d75 : d0fe            >        bne *           ;failed not equal (non zero)
                        
0d77 : 88                       dey
0d78 : 10df                     bpl tldx1                  
                        
0d7a : a003                     ldy #3
0d7c :                  tldx2   
                                set_stat 0
                       >            load_flag 0
0d7c : a900            >            lda #0             ;allow test to change I
                       >
0d7e : 48              >            pha         ;use stack to load status
0d7f : 28              >            plp
                        
0d80 : be0802                   ldx abs1,y
0d83 : 08                       php         ;test stores do not alter flags
0d84 : 8a                       txa
0d85 : 49c3                     eor #$c3
0d87 : aa                       tax
0d88 : 28                       plp
0d89 : 960c                     stx zpt,y
0d8b : 08                       php         ;flags after load/store sequence
0d8c : 49c3                     eor #$c3
0d8e : d91300                   cmp zp1,y   ;test result
                                trap_ne
0d91 : d0fe            >        bne *           ;failed not equal (non zero)
                        
0d93 : 68                       pla         ;load status
                                eor_flag 0
0d94 : 4930            >            eor #0|fao         ;invert expected flags 
                        
0d96 : d90d02                   cmp fLDx,y  ;test flags
                                trap_ne
0d99 : d0fe            >        bne *           ;failed not equal (non zero)
                        
0d9b : 88                       dey
0d9c : 10de                     bpl tldx2                  
                        
0d9e : a003                     ldy #3
0da0 :                  tldx3   
                                set_stat $ff
                       >            load_flag $ff
0da0 : a9ff            >            lda #$ff             ;allow test to change
                       >
0da2 : 48              >            pha         ;use stack to load status
0da3 : 28              >            plp
                        
0da4 : be0802                   ldx abs1,y
0da7 : 08                       php         ;test stores do not alter flags
0da8 : 8a                       txa
0da9 : 49c3                     eor #$c3
0dab : aa                       tax
0dac : 28                       plp
0dad : 960c                     stx zpt,y
0daf : 08                       php         ;flags after load/store sequence
0db0 : 49c3                     eor #$c3
0db2 : d91300                   cmp zp1,y   ;test result
                                trap_ne
0db5 : d0fe            >        bne *           ;failed not equal (non zero)
                        
0db7 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
0db8 : 497d            >            eor #lo~fnz |fao         ;invert expected 
                        
0dba : d90d02                   cmp fLDx,y  ;test flags
                                trap_ne
0dbd : d0fe            >        bne *           ;failed not equal (non zero)
                        
0dbf : 88                       dey
0dc0 : 10de                     bpl tldx3
                                
0dc2 : a003                     ldy #3      ;testing store result
0dc4 : a200                     ldx #0
0dc6 : b90c00           tstx    lda zpt,y
0dc9 : 49c3                     eor #$c3
0dcb : d91300                   cmp zp1,y
                                trap_ne     ;store to zp data
0dce : d0fe            >        bne *           ;failed not equal (non zero)
                        
0dd0 : 960c                     stx zpt,y   ;clear                
0dd2 : b90302                   lda abst,y
0dd5 : 49c3                     eor #$c3
0dd7 : d90802                   cmp abs1,y
                                trap_ne     ;store to abs data
0dda : d0fe            >        bne *           ;failed not equal (non zero)
                        
0ddc : 8a                       txa
0ddd : 990302                   sta abst,y  ;clear                
0de0 : 88                       dey
0de1 : 10e3                     bpl tstx
                                next_test
0de3 : ad0002          >            lda test_case   ;previous test
0de6 : c90f            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
0de8 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0010 =                 >test_num = test_num + 1
0dea : a910            >            lda #test_num   ;*** this tests' number
0dec : 8d0002          >            sta test_case
                       >            ;check_ram       ;uncomment to find altere
                        
                                
                        ; indexed wraparound test (only zp should wrap)
0def : a0fd                     ldy #3+$fa
0df1 : b619             tldx4   ldx zp1-$fa&$ff,y   ;wrap on indexed zp
0df3 : 8a                       txa
0df4 : 990901                   sta abst-$fa,y      ;no STX abs,y!
0df7 : 88                       dey
0df8 : c0fa                     cpy #$fa
0dfa : b0f5                     bcs tldx4                  
0dfc : a0fd                     ldy #3+$fa
0dfe : be0e01           tldx5   ldx abs1-$fa,y      ;no wrap on indexed abs
0e01 : 9612                     stx zpt-$fa&$ff,y
0e03 : 88                       dey
0e04 : c0fa                     cpy #$fa
0e06 : b0f6                     bcs tldx5                  
0e08 : a003                     ldy #3      ;testing wraparound result
0e0a : a200                     ldx #0
0e0c : b90c00           tstx1   lda zpt,y
0e0f : d91300                   cmp zp1,y
                                trap_ne     ;store to zp data
0e12 : d0fe            >        bne *           ;failed not equal (non zero)
                        
0e14 : 960c                     stx zpt,y   ;clear                
0e16 : b90302                   lda abst,y
0e19 : d90802                   cmp abs1,y
                                trap_ne     ;store to abs data
0e1c : d0fe            >        bne *           ;failed not equal (non zero)
                        
0e1e : 8a                       txa
0e1f : 990302                   sta abst,y  ;clear                
0e22 : 88                       dey
0e23 : 10e7                     bpl tstx1
                                next_test
0e25 : ad0002          >            lda test_case   ;previous test
0e28 : c910            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
0e2a : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0011 =                 >test_num = test_num + 1
0e2c : a911            >            lda #test_num   ;*** this tests' number
0e2e : 8d0002          >            sta test_case
                       >            ;check_ram       ;uncomment to find altere
                        
                                
                        ; LDY / STY - zp,x / abs,x
0e31 : a203                     ldx #3
0e33 :                  tldy    
                                set_stat 0
                       >            load_flag 0
0e33 : a900            >            lda #0             ;allow test to change I
                       >
0e35 : 48              >            pha         ;use stack to load status
0e36 : 28              >            plp
                        
0e37 : b413                     ldy zp1,x
0e39 : 08                       php         ;test stores do not alter flags
0e3a : 98                       tya
0e3b : 49c3                     eor #$c3
0e3d : 28                       plp
0e3e : 9d0302                   sta abst,x
0e41 : 08                       php         ;flags after load/store sequence
0e42 : 49c3                     eor #$c3
0e44 : dd0802                   cmp abs1,x  ;test result
                                trap_ne
0e47 : d0fe            >        bne *           ;failed not equal (non zero)
                        
0e49 : 68                       pla         ;load status
                                eor_flag 0
0e4a : 4930            >            eor #0|fao         ;invert expected flags 
                        
0e4c : dd0d02                   cmp fLDx,x  ;test flags
                                trap_ne
0e4f : d0fe            >        bne *           ;failed not equal (non zero)
                        
0e51 : ca                       dex
0e52 : 10df                     bpl tldy                  
                        
0e54 : a203                     ldx #3
0e56 :                  tldy1   
                                set_stat $ff
                       >            load_flag $ff
0e56 : a9ff            >            lda #$ff             ;allow test to change
                       >
0e58 : 48              >            pha         ;use stack to load status
0e59 : 28              >            plp
                        
0e5a : b413                     ldy zp1,x
0e5c : 08                       php         ;test stores do not alter flags
0e5d : 98                       tya
0e5e : 49c3                     eor #$c3
0e60 : 28                       plp
0e61 : 9d0302                   sta abst,x
0e64 : 08                       php         ;flags after load/store sequence
0e65 : 49c3                     eor #$c3
0e67 : dd0802                   cmp abs1,x  ;test result
                                trap_ne
0e6a : d0fe            >        bne *           ;failed not equal (non zero)
                        
0e6c : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
0e6d : 497d            >            eor #lo~fnz |fao         ;invert expected 
                        
0e6f : dd0d02                   cmp fLDx,x  ;test flags
                                trap_ne
0e72 : d0fe            >        bne *           ;failed not equal (non zero)
                        
0e74 : ca                       dex
0e75 : 10df                     bpl tldy1                  
                        
0e77 : a203                     ldx #3
0e79 :                  tldy2   
                                set_stat 0
                       >            load_flag 0
0e79 : a900            >            lda #0             ;allow test to change I
                       >
0e7b : 48              >            pha         ;use stack to load status
0e7c : 28              >            plp
                        
0e7d : bc0802                   ldy abs1,x
0e80 : 08                       php         ;test stores do not alter flags
0e81 : 98                       tya
0e82 : 49c3                     eor #$c3
0e84 : a8                       tay
0e85 : 28                       plp
0e86 : 940c                     sty zpt,x
0e88 : 08                       php         ;flags after load/store sequence
0e89 : 49c3                     eor #$c3
0e8b : d513                     cmp zp1,x   ;test result
                                trap_ne
0e8d : d0fe            >        bne *           ;failed not equal (non zero)
                        
0e8f : 68                       pla         ;load status
                                eor_flag 0
0e90 : 4930            >            eor #0|fao         ;invert expected flags 
                        
0e92 : dd0d02                   cmp fLDx,x  ;test flags
                                trap_ne
0e95 : d0fe            >        bne *           ;failed not equal (non zero)
                        
0e97 : ca                       dex
0e98 : 10df                     bpl tldy2                  
                        
0e9a : a203                     ldx #3
0e9c :                  tldy3
                                set_stat $ff
                       >            load_flag $ff
0e9c : a9ff            >            lda #$ff             ;allow test to change
                       >
0e9e : 48              >            pha         ;use stack to load status
0e9f : 28              >            plp
                        
0ea0 : bc0802                   ldy abs1,x
0ea3 : 08                       php         ;test stores do not alter flags
0ea4 : 98                       tya
0ea5 : 49c3                     eor #$c3
0ea7 : a8                       tay
0ea8 : 28                       plp
0ea9 : 940c                     sty zpt,x
0eab : 08                       php         ;flags after load/store sequence
0eac : 49c3                     eor #$c3
0eae : d513                     cmp zp1,x   ;test result
                                trap_ne
0eb0 : d0fe            >        bne *           ;failed not equal (non zero)
                        
0eb2 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
0eb3 : 497d            >            eor #lo~fnz |fao         ;invert expected 
                        
0eb5 : dd0d02                   cmp fLDx,x  ;test flags
                                trap_ne
0eb8 : d0fe            >        bne *           ;failed not equal (non zero)
                        
0eba : ca                       dex
0ebb : 10df                     bpl tldy3
                        
0ebd : a203                     ldx #3      ;testing store result
0ebf : a000                     ldy #0
0ec1 : b50c             tsty    lda zpt,x
0ec3 : 49c3                     eor #$c3
0ec5 : d513                     cmp zp1,x
                                trap_ne     ;store to zp,x data
0ec7 : d0fe            >        bne *           ;failed not equal (non zero)
                        
0ec9 : 940c                     sty zpt,x   ;clear                
0ecb : bd0302                   lda abst,x
0ece : 49c3                     eor #$c3
0ed0 : dd0802                   cmp abs1,x
                                trap_ne     ;store to abs,x data
0ed3 : d0fe            >        bne *           ;failed not equal (non zero)
                        
0ed5 : 8a                       txa
0ed6 : 9d0302                   sta abst,x  ;clear                
0ed9 : ca                       dex
0eda : 10e5                     bpl tsty
                                next_test
0edc : ad0002          >            lda test_case   ;previous test
0edf : c911            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
0ee1 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0012 =                 >test_num = test_num + 1
0ee3 : a912            >            lda #test_num   ;*** this tests' number
0ee5 : 8d0002          >            sta test_case
                       >            ;check_ram       ;uncomment to find altere
                        
                        
                        ; indexed wraparound test (only zp should wrap)
0ee8 : a2fd                     ldx #3+$fa
0eea : b419             tldy4   ldy zp1-$fa&$ff,x   ;wrap on indexed zp
0eec : 98                       tya
0eed : 9d0901                   sta abst-$fa,x      ;no STX abs,x!
0ef0 : ca                       dex
0ef1 : e0fa                     cpx #$fa
0ef3 : b0f5                     bcs tldy4                  
0ef5 : a2fd                     ldx #3+$fa
0ef7 : bc0e01           tldy5   ldy abs1-$fa,x      ;no wrap on indexed abs
0efa : 9412                     sty zpt-$fa&$ff,x
0efc : ca                       dex
0efd : e0fa                     cpx #$fa
0eff : b0f6                     bcs tldy5                  
0f01 : a203                     ldx #3      ;testing wraparound result
0f03 : a000                     ldy #0
0f05 : b50c             tsty1   lda zpt,x
0f07 : d513                     cmp zp1,x
                                trap_ne     ;store to zp,x data
0f09 : d0fe            >        bne *           ;failed not equal (non zero)
                        
0f0b : 940c                     sty zpt,x   ;clear                
0f0d : bd0302                   lda abst,x
0f10 : dd0802                   cmp abs1,x
                                trap_ne     ;store to abs,x data
0f13 : d0fe            >        bne *           ;failed not equal (non zero)
                        
0f15 : 8a                       txa
0f16 : 9d0302                   sta abst,x  ;clear                
0f19 : ca                       dex
0f1a : 10e9                     bpl tsty1
                                next_test
0f1c : ad0002          >            lda test_case   ;previous test
0f1f : c912            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
0f21 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0013 =                 >test_num = test_num + 1
0f23 : a913            >            lda #test_num   ;*** this tests' number
0f25 : 8d0002          >            sta test_case
                       >            ;check_ram       ;uncomment to find altere
                        
                        
                        ; LDX / STX - zp / abs / #
                                set_stat 0  
                       >            load_flag 0  
0f28 : a900            >            lda #0               ;allow test to change
                       >
0f2a : 48              >            pha         ;use stack to load status
0f2b : 28              >            plp
                        
0f2c : a613                     ldx zp1
0f2e : 08                       php         ;test stores do not alter flags
0f2f : 8a                       txa
0f30 : 49c3                     eor #$c3
0f32 : aa                       tax
0f33 : 28                       plp
0f34 : 8e0302                   stx abst
0f37 : 08                       php         ;flags after load/store sequence
0f38 : 49c3                     eor #$c3
0f3a : aa                       tax
0f3b : e0c3                     cpx #$c3    ;test result
                                trap_ne
0f3d : d0fe            >        bne *           ;failed not equal (non zero)
                        
0f3f : 68                       pla         ;load status
                                eor_flag 0
0f40 : 4930            >            eor #0|fao         ;invert expected flags 
                        
0f42 : cd0d02                   cmp fLDx    ;test flags
                                trap_ne
0f45 : d0fe            >        bne *           ;failed not equal (non zero)
                        
                                set_stat 0
                       >            load_flag 0
0f47 : a900            >            lda #0             ;allow test to change I
                       >
0f49 : 48              >            pha         ;use stack to load status
0f4a : 28              >            plp
                        
0f4b : a614                     ldx zp1+1
0f4d : 08                       php         ;test stores do not alter flags
0f4e : 8a                       txa
0f4f : 49c3                     eor #$c3
0f51 : aa                       tax
0f52 : 28                       plp
0f53 : 8e0402                   stx abst+1
0f56 : 08                       php         ;flags after load/store sequence
0f57 : 49c3                     eor #$c3
0f59 : aa                       tax
0f5a : e082                     cpx #$82    ;test result
                                trap_ne
0f5c : d0fe            >        bne *           ;failed not equal (non zero)
                        
0f5e : 68                       pla         ;load status
                                eor_flag 0
0f5f : 4930            >            eor #0|fao         ;invert expected flags 
                        
0f61 : cd0e02                   cmp fLDx+1  ;test flags
                                trap_ne
0f64 : d0fe            >        bne *           ;failed not equal (non zero)
                        
                                set_stat 0
                       >            load_flag 0
0f66 : a900            >            lda #0             ;allow test to change I
                       >
0f68 : 48              >            pha         ;use stack to load status
0f69 : 28              >            plp
                        
0f6a : a615                     ldx zp1+2
0f6c : 08                       php         ;test stores do not alter flags
0f6d : 8a                       txa
0f6e : 49c3                     eor #$c3
0f70 : aa                       tax
0f71 : 28                       plp
0f72 : 8e0502                   stx abst+2
0f75 : 08                       php         ;flags after load/store sequence
0f76 : 49c3                     eor #$c3
0f78 : aa                       tax
0f79 : e041                     cpx #$41    ;test result
                                trap_ne
0f7b : d0fe            >        bne *           ;failed not equal (non zero)
                        
0f7d : 68                       pla         ;load status
                                eor_flag 0
0f7e : 4930            >            eor #0|fao         ;invert expected flags 
                        
0f80 : cd0f02                   cmp fLDx+2  ;test flags
                                trap_ne
0f83 : d0fe            >        bne *           ;failed not equal (non zero)
                        
                                set_stat 0
                       >            load_flag 0
0f85 : a900            >            lda #0             ;allow test to change I
                       >
0f87 : 48              >            pha         ;use stack to load status
0f88 : 28              >            plp
                        
0f89 : a616                     ldx zp1+3
0f8b : 08                       php         ;test stores do not alter flags
0f8c : 8a                       txa
0f8d : 49c3                     eor #$c3
0f8f : aa                       tax
0f90 : 28                       plp
0f91 : 8e0602                   stx abst+3
0f94 : 08                       php         ;flags after load/store sequence
0f95 : 49c3                     eor #$c3
0f97 : aa                       tax
0f98 : e000                     cpx #0      ;test result
                                trap_ne
0f9a : d0fe            >        bne *           ;failed not equal (non zero)
                        
0f9c : 68                       pla         ;load status
                                eor_flag 0
0f9d : 4930            >            eor #0|fao         ;invert expected flags 
                        
0f9f : cd1002                   cmp fLDx+3  ;test flags
                                trap_ne
0fa2 : d0fe            >        bne *           ;failed not equal (non zero)
                        
                        
                                set_stat $ff
                       >            load_flag $ff
0fa4 : a9ff            >            lda #$ff             ;allow test to change
                       >
0fa6 : 48              >            pha         ;use stack to load status
0fa7 : 28              >            plp
                        
0fa8 : a613                     ldx zp1  
0faa : 08                       php         ;test stores do not alter flags
0fab : 8a                       txa
0fac : 49c3                     eor #$c3
0fae : aa                       tax
0faf : 28                       plp
0fb0 : 8e0302                   stx abst  
0fb3 : 08                       php         ;flags after load/store sequence
0fb4 : 49c3                     eor #$c3
0fb6 : aa                       tax
0fb7 : e0c3                     cpx #$c3    ;test result
                                trap_ne     ;
0fb9 : d0fe            >        bne *           ;failed not equal (non zero)
                        
0fbb : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
0fbc : 497d            >            eor #lo~fnz |fao         ;invert expected 
                        
0fbe : cd0d02                   cmp fLDx    ;test flags
                                trap_ne
0fc1 : d0fe            >        bne *           ;failed not equal (non zero)
                        
                                set_stat $ff
                       >            load_flag $ff
0fc3 : a9ff            >            lda #$ff             ;allow test to change
                       >
0fc5 : 48              >            pha         ;use stack to load status
0fc6 : 28              >            plp
                        
0fc7 : a614                     ldx zp1+1
0fc9 : 08                       php         ;test stores do not alter flags
0fca : 8a                       txa
0fcb : 49c3                     eor #$c3
0fcd : aa                       tax
0fce : 28                       plp
0fcf : 8e0402                   stx abst+1
0fd2 : 08                       php         ;flags after load/store sequence
0fd3 : 49c3                     eor #$c3
0fd5 : aa                       tax
0fd6 : e082                     cpx #$82    ;test result
                                trap_ne
0fd8 : d0fe            >        bne *           ;failed not equal (non zero)
                        
0fda : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
0fdb : 497d            >            eor #lo~fnz |fao         ;invert expected 
                        
0fdd : cd0e02                   cmp fLDx+1  ;test flags
                                trap_ne
0fe0 : d0fe            >        bne *           ;failed not equal (non zero)
                        
                                set_stat $ff
                       >            load_flag $ff
0fe2 : a9ff            >            lda #$ff             ;allow test to change
                       >
0fe4 : 48              >            pha         ;use stack to load status
0fe5 : 28              >            plp
                        
0fe6 : a615                     ldx zp1+2
0fe8 : 08                       php         ;test stores do not alter flags
0fe9 : 8a                       txa
0fea : 49c3                     eor #$c3
0fec : aa                       tax
0fed : 28                       plp
0fee : 8e0502                   stx abst+2
0ff1 : 08                       php         ;flags after load/store sequence
0ff2 : 49c3                     eor #$c3
0ff4 : aa                       tax
0ff5 : e041                     cpx #$41    ;test result
                                trap_ne     ;
0ff7 : d0fe            >        bne *           ;failed not equal (non zero)
                        
0ff9 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
0ffa : 497d            >            eor #lo~fnz |fao         ;invert expected 
                        
0ffc : cd0f02                   cmp fLDx+2  ;test flags
                                trap_ne
0fff : d0fe            >        bne *           ;failed not equal (non zero)
                        
                                set_stat $ff
                       >            load_flag $ff
1001 : a9ff            >            lda #$ff             ;allow test to change
                       >
1003 : 48              >            pha         ;use stack to load status
1004 : 28              >            plp
                        
1005 : a616                     ldx zp1+3
1007 : 08                       php         ;test stores do not alter flags
1008 : 8a                       txa
1009 : 49c3                     eor #$c3
100b : aa                       tax
100c : 28                       plp
100d : 8e0602                   stx abst+3
1010 : 08                       php         ;flags after load/store sequence
1011 : 49c3                     eor #$c3
1013 : aa                       tax
1014 : e000                     cpx #0      ;test result
                                trap_ne
1016 : d0fe            >        bne *           ;failed not equal (non zero)
                        
1018 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1019 : 497d            >            eor #lo~fnz |fao         ;invert expected 
                        
101b : cd1002                   cmp fLDx+3  ;test flags
                                trap_ne
101e : d0fe            >        bne *           ;failed not equal (non zero)
                        
                        
                                set_stat 0
                       >            load_flag 0
1020 : a900            >            lda #0             ;allow test to change I
                       >
1022 : 48              >            pha         ;use stack to load status
1023 : 28              >            plp
                        
1024 : ae0802                   ldx abs1  
1027 : 08                       php         ;test stores do not alter flags
1028 : 8a                       txa
1029 : 49c3                     eor #$c3
102b : aa                       tax
102c : 28                       plp
102d : 860c                     stx zpt  
102f : 08                       php         ;flags after load/store sequence
1030 : 49c3                     eor #$c3
1032 : c513                     cmp zp1     ;test result
                                trap_ne
1034 : d0fe            >        bne *           ;failed not equal (non zero)
                        
1036 : 68                       pla         ;load status
                                eor_flag 0
1037 : 4930            >            eor #0|fao         ;invert expected flags 
                        
1039 : cd0d02                   cmp fLDx    ;test flags
                                trap_ne
103c : d0fe            >        bne *           ;failed not equal (non zero)
                        
                                set_stat 0
                       >            load_flag 0
103e : a900            >            lda #0             ;allow test to change I
                       >
1040 : 48              >            pha         ;use stack to load status
1041 : 28              >            plp
                        
1042 : ae0902                   ldx abs1+1
1045 : 08                       php         ;test stores do not alter flags
1046 : 8a                       txa
1047 : 49c3                     eor #$c3
1049 : aa                       tax
104a : 28                       plp
104b : 860d                     stx zpt+1
104d : 08                       php         ;flags after load/store sequence
104e : 49c3                     eor #$c3
1050 : c514                     cmp zp1+1   ;test result
                                trap_ne
1052 : d0fe            >        bne *           ;failed not equal (non zero)
                        
1054 : 68                       pla         ;load status
                                eor_flag 0
1055 : 4930            >            eor #0|fao         ;invert expected flags 
                        
1057 : cd0e02                   cmp fLDx+1  ;test flags
                                trap_ne
105a : d0fe            >        bne *           ;failed not equal (non zero)
                        
                                set_stat 0
                       >            load_flag 0
105c : a900            >            lda #0             ;allow test to change I
                       >
105e : 48              >            pha         ;use stack to load status
105f : 28              >            plp
                        
1060 : ae0a02                   ldx abs1+2
1063 : 08                       php         ;test stores do not alter flags
1064 : 8a                       txa
1065 : 49c3                     eor #$c3
1067 : aa                       tax
1068 : 28                       plp
1069 : 860e                     stx zpt+2
106b : 08                       php         ;flags after load/store sequence
106c : 49c3                     eor #$c3
106e : c515                     cmp zp1+2   ;test result
                                trap_ne
1070 : d0fe            >        bne *           ;failed not equal (non zero)
                        
1072 : 68                       pla         ;load status
                                eor_flag 0
1073 : 4930            >            eor #0|fao         ;invert expected flags 
                        
1075 : cd0f02                   cmp fLDx+2  ;test flags
                                trap_ne
1078 : d0fe            >        bne *           ;failed not equal (non zero)
                        
                                set_stat 0
                       >            load_flag 0
107a : a900            >            lda #0             ;allow test to change I
                       >
107c : 48              >            pha         ;use stack to load status
107d : 28              >            plp
                        
107e : ae0b02                   ldx abs1+3
1081 : 08                       php         ;test stores do not alter flags
1082 : 8a                       txa
1083 : 49c3                     eor #$c3
1085 : aa                       tax
1086 : 28                       plp
1087 : 860f                     stx zpt+3
1089 : 08                       php         ;flags after load/store sequence
108a : 49c3                     eor #$c3
108c : c516                     cmp zp1+3   ;test result
                                trap_ne
108e : d0fe            >        bne *           ;failed not equal (non zero)
                        
1090 : 68                       pla         ;load status
                                eor_flag 0
1091 : 4930            >            eor #0|fao         ;invert expected flags 
                        
1093 : cd1002                   cmp fLDx+3  ;test flags
                                trap_ne
1096 : d0fe            >        bne *           ;failed not equal (non zero)
                        
                        
                                set_stat $ff
                       >            load_flag $ff
1098 : a9ff            >            lda #$ff             ;allow test to change
                       >
109a : 48              >            pha         ;use stack to load status
109b : 28              >            plp
                        
109c : ae0802                   ldx abs1  
109f : 08                       php         ;test stores do not alter flags
10a0 : 8a                       txa
10a1 : 49c3                     eor #$c3
10a3 : aa                       tax
10a4 : 28                       plp
10a5 : 860c                     stx zpt  
10a7 : 08                       php         ;flags after load/store sequence
10a8 : 49c3                     eor #$c3
10aa : aa                       tax
10ab : e413                     cpx zp1     ;test result
                                trap_ne
10ad : d0fe            >        bne *           ;failed not equal (non zero)
                        
10af : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
10b0 : 497d            >            eor #lo~fnz |fao         ;invert expected 
                        
10b2 : cd0d02                   cmp fLDx    ;test flags
                                trap_ne
10b5 : d0fe            >        bne *           ;failed not equal (non zero)
                        
                                set_stat $ff
                       >            load_flag $ff
10b7 : a9ff            >            lda #$ff             ;allow test to change
                       >
10b9 : 48              >            pha         ;use stack to load status
10ba : 28              >            plp
                        
10bb : ae0902                   ldx abs1+1
10be : 08                       php         ;test stores do not alter flags
10bf : 8a                       txa
10c0 : 49c3                     eor #$c3
10c2 : aa                       tax
10c3 : 28                       plp
10c4 : 860d                     stx zpt+1
10c6 : 08                       php         ;flags after load/store sequence
10c7 : 49c3                     eor #$c3
10c9 : aa                       tax
10ca : e414                     cpx zp1+1   ;test result
                                trap_ne
10cc : d0fe            >        bne *           ;failed not equal (non zero)
                        
10ce : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
10cf : 497d            >            eor #lo~fnz |fao         ;invert expected 
                        
10d1 : cd0e02                   cmp fLDx+1  ;test flags
                                trap_ne
10d4 : d0fe            >        bne *           ;failed not equal (non zero)
                        
                                set_stat $ff
                       >            load_flag $ff
10d6 : a9ff            >            lda #$ff             ;allow test to change
                       >
10d8 : 48              >            pha         ;use stack to load status
10d9 : 28              >            plp
                        
10da : ae0a02                   ldx abs1+2
10dd : 08                       php         ;test stores do not alter flags
10de : 8a                       txa
10df : 49c3                     eor #$c3
10e1 : aa                       tax
10e2 : 28                       plp
10e3 : 860e                     stx zpt+2
10e5 : 08                       php         ;flags after load/store sequence
10e6 : 49c3                     eor #$c3
10e8 : aa                       tax
10e9 : e415                     cpx zp1+2   ;test result
                                trap_ne
10eb : d0fe            >        bne *           ;failed not equal (non zero)
                        
10ed : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
10ee : 497d            >            eor #lo~fnz |fao         ;invert expected 
                        
10f0 : cd0f02                   cmp fLDx+2  ;test flags
                                trap_ne
10f3 : d0fe            >        bne *           ;failed not equal (non zero)
                        
                                set_stat $ff
                       >            load_flag $ff
10f5 : a9ff            >            lda #$ff             ;allow test to change
                       >
10f7 : 48              >            pha         ;use stack to load status
10f8 : 28              >            plp
                        
10f9 : ae0b02                   ldx abs1+3
10fc : 08                       php         ;test stores do not alter flags
10fd : 8a                       txa
10fe : 49c3                     eor #$c3
1100 : aa                       tax
1101 : 28                       plp
1102 : 860f                     stx zpt+3
1104 : 08                       php         ;flags after load/store sequence
1105 : 49c3                     eor #$c3
1107 : aa                       tax
1108 : e416                     cpx zp1+3   ;test result
                                trap_ne
110a : d0fe            >        bne *           ;failed not equal (non zero)
                        
110c : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
110d : 497d            >            eor #lo~fnz |fao         ;invert expected 
                        
110f : cd1002                   cmp fLDx+3  ;test flags
                                trap_ne
1112 : d0fe            >        bne *           ;failed not equal (non zero)
                        
                        
                                set_stat 0  
                       >            load_flag 0  
1114 : a900            >            lda #0               ;allow test to change
                       >
1116 : 48              >            pha         ;use stack to load status
1117 : 28              >            plp
                        
1118 : a2c3                     ldx #$c3
111a : 08                       php
111b : ec0802                   cpx abs1    ;test result
                                trap_ne
111e : d0fe            >        bne *           ;failed not equal (non zero)
                        
1120 : 68                       pla         ;load status
                                eor_flag 0
1121 : 4930            >            eor #0|fao         ;invert expected flags 
                        
1123 : cd0d02                   cmp fLDx    ;test flags
                                trap_ne
1126 : d0fe            >        bne *           ;failed not equal (non zero)
                        
                                set_stat 0
                       >            load_flag 0
1128 : a900            >            lda #0             ;allow test to change I
                       >
112a : 48              >            pha         ;use stack to load status
112b : 28              >            plp
                        
112c : a282                     ldx #$82
112e : 08                       php
112f : ec0902                   cpx abs1+1  ;test result
                                trap_ne
1132 : d0fe            >        bne *           ;failed not equal (non zero)
                        
1134 : 68                       pla         ;load status
                                eor_flag 0
1135 : 4930            >            eor #0|fao         ;invert expected flags 
                        
1137 : cd0e02                   cmp fLDx+1  ;test flags
                                trap_ne
113a : d0fe            >        bne *           ;failed not equal (non zero)
                        
                                set_stat 0
                       >            load_flag 0
113c : a900            >            lda #0             ;allow test to change I
                       >
113e : 48              >            pha         ;use stack to load status
113f : 28              >            plp
                        
1140 : a241                     ldx #$41
1142 : 08                       php
1143 : ec0a02                   cpx abs1+2  ;test result
                                trap_ne
1146 : d0fe            >        bne *           ;failed not equal (non zero)
                        
1148 : 68                       pla         ;load status
                                eor_flag 0
1149 : 4930            >            eor #0|fao         ;invert expected flags 
                        
114b : cd0f02                   cmp fLDx+2  ;test flags
                                trap_ne
114e : d0fe            >        bne *           ;failed not equal (non zero)
                        
                                set_stat 0
                       >            load_flag 0
1150 : a900            >            lda #0             ;allow test to change I
                       >
1152 : 48              >            pha         ;use stack to load status
1153 : 28              >            plp
                        
1154 : a200                     ldx #0
1156 : 08                       php
1157 : ec0b02                   cpx abs1+3  ;test result
                                trap_ne
115a : d0fe            >        bne *           ;failed not equal (non zero)
                        
115c : 68                       pla         ;load status
                                eor_flag 0
115d : 4930            >            eor #0|fao         ;invert expected flags 
                        
115f : cd1002                   cmp fLDx+3  ;test flags
                                trap_ne
1162 : d0fe            >        bne *           ;failed not equal (non zero)
                        
                        
                                set_stat $ff
                       >            load_flag $ff
1164 : a9ff            >            lda #$ff             ;allow test to change
                       >
1166 : 48              >            pha         ;use stack to load status
1167 : 28              >            plp
                        
1168 : a2c3                     ldx #$c3  
116a : 08                       php
116b : ec0802                   cpx abs1    ;test result
                                trap_ne
116e : d0fe            >        bne *           ;failed not equal (non zero)
                        
1170 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1171 : 497d            >            eor #lo~fnz |fao         ;invert expected 
                        
1173 : cd0d02                   cmp fLDx    ;test flags
                                trap_ne
1176 : d0fe            >        bne *           ;failed not equal (non zero)
                        
                                set_stat $ff
                       >            load_flag $ff
1178 : a9ff            >            lda #$ff             ;allow test to change
                       >
117a : 48              >            pha         ;use stack to load status
117b : 28              >            plp
                        
117c : a282                     ldx #$82
117e : 08                       php
117f : ec0902                   cpx abs1+1  ;test result
                                trap_ne
1182 : d0fe            >        bne *           ;failed not equal (non zero)
                        
1184 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1185 : 497d            >            eor #lo~fnz |fao         ;invert expected 
                        
1187 : cd0e02                   cmp fLDx+1  ;test flags
                                trap_ne
118a : d0fe            >        bne *           ;failed not equal (non zero)
                        
                                set_stat $ff
                       >            load_flag $ff
118c : a9ff            >            lda #$ff             ;allow test to change
                       >
118e : 48              >            pha         ;use stack to load status
118f : 28              >            plp
                        
1190 : a241                     ldx #$41
1192 : 08                       php
1193 : ec0a02                   cpx abs1+2  ;test result
                                trap_ne
1196 : d0fe            >        bne *           ;failed not equal (non zero)
                        
1198 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1199 : 497d            >            eor #lo~fnz |fao         ;invert expected 
                        
119b : cd0f02                   cmp fLDx+2  ;test flags
                                trap_ne
119e : d0fe            >        bne *           ;failed not equal (non zero)
                        
                                set_stat $ff
                       >            load_flag $ff
11a0 : a9ff            >            lda #$ff             ;allow test to change
                       >
11a2 : 48              >            pha         ;use stack to load status
11a3 : 28              >            plp
                        
11a4 : a200                     ldx #0
11a6 : 08                       php
11a7 : ec0b02                   cpx abs1+3  ;test result
                                trap_ne
11aa : d0fe            >        bne *           ;failed not equal (non zero)
                        
11ac : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
11ad : 497d            >            eor #lo~fnz |fao         ;invert expected 
                        
11af : cd1002                   cmp fLDx+3  ;test flags
                                trap_ne
11b2 : d0fe            >        bne *           ;failed not equal (non zero)
                        
                        
11b4 : a200                     ldx #0
11b6 : a50c                     lda zpt  
11b8 : 49c3                     eor #$c3
11ba : c513                     cmp zp1  
                                trap_ne     ;store to zp data
11bc : d0fe            >        bne *           ;failed not equal (non zero)
                        
11be : 860c                     stx zpt     ;clear                
11c0 : ad0302                   lda abst  
11c3 : 49c3                     eor #$c3
11c5 : cd0802                   cmp abs1  
                                trap_ne     ;store to abs data
11c8 : d0fe            >        bne *           ;failed not equal (non zero)
                        
11ca : 8e0302                   stx abst    ;clear                
11cd : a50d                     lda zpt+1
11cf : 49c3                     eor #$c3
11d1 : c514                     cmp zp1+1
                                trap_ne     ;store to zp data
11d3 : d0fe            >        bne *           ;failed not equal (non zero)
                        
11d5 : 860d                     stx zpt+1   ;clear                
11d7 : ad0402                   lda abst+1
11da : 49c3                     eor #$c3
11dc : cd0902                   cmp abs1+1
                                trap_ne     ;store to abs data
11df : d0fe            >        bne *           ;failed not equal (non zero)
                        
11e1 : 8e0402                   stx abst+1  ;clear                
11e4 : a50e                     lda zpt+2
11e6 : 49c3                     eor #$c3
11e8 : c515                     cmp zp1+2
                                trap_ne     ;store to zp data
11ea : d0fe            >        bne *           ;failed not equal (non zero)
                        
11ec : 860e                     stx zpt+2   ;clear                
11ee : ad0502                   lda abst+2
11f1 : 49c3                     eor #$c3
11f3 : cd0a02                   cmp abs1+2
                                trap_ne     ;store to abs data
11f6 : d0fe            >        bne *           ;failed not equal (non zero)
                        
11f8 : 8e0502                   stx abst+2  ;clear                
11fb : a50f                     lda zpt+3
11fd : 49c3                     eor #$c3
11ff : c516                     cmp zp1+3
                                trap_ne     ;store to zp data
1201 : d0fe            >        bne *           ;failed not equal (non zero)
                        
1203 : 860f                     stx zpt+3   ;clear                
1205 : ad0602                   lda abst+3
1208 : 49c3                     eor #$c3
120a : cd0b02                   cmp abs1+3
                                trap_ne     ;store to abs data
120d : d0fe            >        bne *           ;failed not equal (non zero)
                        
120f : 8e0602                   stx abst+3  ;clear                
                                next_test
1212 : ad0002          >            lda test_case   ;previous test
1215 : c913            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
1217 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0014 =                 >test_num = test_num + 1
1219 : a914            >            lda #test_num   ;*** this tests' number
121b : 8d0002          >            sta test_case
                       >            ;check_ram       ;uncomment to find altere
                        
                        
                        ; LDY / STY - zp / abs / #
                                set_stat 0
                       >            load_flag 0
121e : a900            >            lda #0             ;allow test to change I
                       >
1220 : 48              >            pha         ;use stack to load status
1221 : 28              >            plp
                        
1222 : a413                     ldy zp1  
1224 : 08                       php         ;test stores do not alter flags
1225 : 98                       tya
1226 : 49c3                     eor #$c3
1228 : a8                       tay
1229 : 28                       plp
122a : 8c0302                   sty abst  
122d : 08                       php         ;flags after load/store sequence
122e : 49c3                     eor #$c3
1230 : a8                       tay
1231 : c0c3                     cpy #$c3    ;test result
                                trap_ne
1233 : d0fe            >        bne *           ;failed not equal (non zero)
                        
1235 : 68                       pla         ;load status
                                eor_flag 0
1236 : 4930            >            eor #0|fao         ;invert expected flags 
                        
1238 : cd0d02                   cmp fLDx    ;test flags
                                trap_ne
123b : d0fe            >        bne *           ;failed not equal (non zero)
                        
                                set_stat 0
                       >            load_flag 0
123d : a900            >            lda #0             ;allow test to change I
                       >
123f : 48              >            pha         ;use stack to load status
1240 : 28              >            plp
                        
1241 : a414                     ldy zp1+1
1243 : 08                       php         ;test stores do not alter flags
1244 : 98                       tya
1245 : 49c3                     eor #$c3
1247 : a8                       tay
1248 : 28                       plp
1249 : 8c0402                   sty abst+1
124c : 08                       php         ;flags after load/store sequence
124d : 49c3                     eor #$c3
124f : a8                       tay
1250 : c082                     cpy #$82    ;test result
                                trap_ne
1252 : d0fe            >        bne *           ;failed not equal (non zero)
                        
1254 : 68                       pla         ;load status
                                eor_flag 0
1255 : 4930            >            eor #0|fao         ;invert expected flags 
                        
1257 : cd0e02                   cmp fLDx+1  ;test flags
                                trap_ne
125a : d0fe            >        bne *           ;failed not equal (non zero)
                        
                                set_stat 0
                       >            load_flag 0
125c : a900            >            lda #0             ;allow test to change I
                       >
125e : 48              >            pha         ;use stack to load status
125f : 28              >            plp
                        
1260 : a415                     ldy zp1+2
1262 : 08                       php         ;test stores do not alter flags
1263 : 98                       tya
1264 : 49c3                     eor #$c3
1266 : a8                       tay
1267 : 28                       plp
1268 : 8c0502                   sty abst+2
126b : 08                       php         ;flags after load/store sequence
126c : 49c3                     eor #$c3
126e : a8                       tay
126f : c041                     cpy #$41    ;test result
                                trap_ne
1271 : d0fe            >        bne *           ;failed not equal (non zero)
                        
1273 : 68                       pla         ;load status
                                eor_flag 0
1274 : 4930            >            eor #0|fao         ;invert expected flags 
                        
1276 : cd0f02                   cmp fLDx+2  ;test flags
                                trap_ne
1279 : d0fe            >        bne *           ;failed not equal (non zero)
                        
                                set_stat 0
                       >            load_flag 0
127b : a900            >            lda #0             ;allow test to change I
                       >
127d : 48              >            pha         ;use stack to load status
127e : 28              >            plp
                        
127f : a416                     ldy zp1+3
1281 : 08                       php         ;test stores do not alter flags
1282 : 98                       tya
1283 : 49c3                     eor #$c3
1285 : a8                       tay
1286 : 28                       plp
1287 : 8c0602                   sty abst+3
128a : 08                       php         ;flags after load/store sequence
128b : 49c3                     eor #$c3
128d : a8                       tay
128e : c000                     cpy #0      ;test result
                                trap_ne
1290 : d0fe            >        bne *           ;failed not equal (non zero)
                        
1292 : 68                       pla         ;load status
                                eor_flag 0
1293 : 4930            >            eor #0|fao         ;invert expected flags 
                        
1295 : cd1002                   cmp fLDx+3  ;test flags
                                trap_ne
1298 : d0fe            >        bne *           ;failed not equal (non zero)
                        
                        
                                set_stat $ff
                       >            load_flag $ff
129a : a9ff            >            lda #$ff             ;allow test to change
                       >
129c : 48              >            pha         ;use stack to load status
129d : 28              >            plp
                        
129e : a413                     ldy zp1  
12a0 : 08                       php         ;test stores do not alter flags
12a1 : 98                       tya
12a2 : 49c3                     eor #$c3
12a4 : a8                       tay
12a5 : 28                       plp
12a6 : 8c0302                   sty abst  
12a9 : 08                       php         ;flags after load/store sequence
12aa : 49c3                     eor #$c3
12ac : a8                       tay
12ad : c0c3                     cpy #$c3    ;test result
                                trap_ne
12af : d0fe            >        bne *           ;failed not equal (non zero)
                        
12b1 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
12b2 : 497d            >            eor #lo~fnz |fao         ;invert expected 
                        
12b4 : cd0d02                   cmp fLDx    ;test flags
                                trap_ne
12b7 : d0fe            >        bne *           ;failed not equal (non zero)
                        
                                set_stat $ff
                       >            load_flag $ff
12b9 : a9ff            >            lda #$ff             ;allow test to change
                       >
12bb : 48              >            pha         ;use stack to load status
12bc : 28              >            plp
                        
12bd : a414                     ldy zp1+1
12bf : 08                       php         ;test stores do not alter flags
12c0 : 98                       tya
12c1 : 49c3                     eor #$c3
12c3 : a8                       tay
12c4 : 28                       plp
12c5 : 8c0402                   sty abst+1
12c8 : 08                       php         ;flags after load/store sequence
12c9 : 49c3                     eor #$c3
12cb : a8                       tay
12cc : c082                     cpy #$82   ;test result
                                trap_ne
12ce : d0fe            >        bne *           ;failed not equal (non zero)
                        
12d0 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
12d1 : 497d            >            eor #lo~fnz |fao         ;invert expected 
                        
12d3 : cd0e02                   cmp fLDx+1  ;test flags
                                trap_ne
12d6 : d0fe            >        bne *           ;failed not equal (non zero)
                        
                                set_stat $ff
                       >            load_flag $ff
12d8 : a9ff            >            lda #$ff             ;allow test to change
                       >
12da : 48              >            pha         ;use stack to load status
12db : 28              >            plp
                        
12dc : a415                     ldy zp1+2
12de : 08                       php         ;test stores do not alter flags
12df : 98                       tya
12e0 : 49c3                     eor #$c3
12e2 : a8                       tay
12e3 : 28                       plp
12e4 : 8c0502                   sty abst+2
12e7 : 08                       php         ;flags after load/store sequence
12e8 : 49c3                     eor #$c3
12ea : a8                       tay
12eb : c041                     cpy #$41    ;test result
                                trap_ne
12ed : d0fe            >        bne *           ;failed not equal (non zero)
                        
12ef : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
12f0 : 497d            >            eor #lo~fnz |fao         ;invert expected 
                        
12f2 : cd0f02                   cmp fLDx+2  ;test flags
                                trap_ne
12f5 : d0fe            >        bne *           ;failed not equal (non zero)
                        
                                set_stat $ff
                       >            load_flag $ff
12f7 : a9ff            >            lda #$ff             ;allow test to change
                       >
12f9 : 48              >            pha         ;use stack to load status
12fa : 28              >            plp
                        
12fb : a416                     ldy zp1+3
12fd : 08                       php         ;test stores do not alter flags
12fe : 98                       tya
12ff : 49c3                     eor #$c3
1301 : a8                       tay
1302 : 28                       plp
1303 : 8c0602                   sty abst+3
1306 : 08                       php         ;flags after load/store sequence
1307 : 49c3                     eor #$c3
1309 : a8                       tay
130a : c000                     cpy #0      ;test result
                                trap_ne
130c : d0fe            >        bne *           ;failed not equal (non zero)
                        
130e : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
130f : 497d            >            eor #lo~fnz |fao         ;invert expected 
                        
1311 : cd1002                   cmp fLDx+3  ;test flags
                                trap_ne
1314 : d0fe            >        bne *           ;failed not equal (non zero)
                        
                                
                                set_stat 0
                       >            load_flag 0
1316 : a900            >            lda #0             ;allow test to change I
                       >
1318 : 48              >            pha         ;use stack to load status
1319 : 28              >            plp
                        
131a : ac0802                   ldy abs1  
131d : 08                       php         ;test stores do not alter flags
131e : 98                       tya
131f : 49c3                     eor #$c3
1321 : a8                       tay
1322 : 28                       plp
1323 : 840c                     sty zpt  
1325 : 08                       php         ;flags after load/store sequence
1326 : 49c3                     eor #$c3
1328 : a8                       tay
1329 : c413                     cpy zp1     ;test result
                                trap_ne
132b : d0fe            >        bne *           ;failed not equal (non zero)
                        
132d : 68                       pla         ;load status
                                eor_flag 0
132e : 4930            >            eor #0|fao         ;invert expected flags 
                        
1330 : cd0d02                   cmp fLDx    ;test flags
                                trap_ne
1333 : d0fe            >        bne *           ;failed not equal (non zero)
                        
                                set_stat 0
                       >            load_flag 0
1335 : a900            >            lda #0             ;allow test to change I
                       >
1337 : 48              >            pha         ;use stack to load status
1338 : 28              >            plp
                        
1339 : ac0902                   ldy abs1+1
133c : 08                       php         ;test stores do not alter flags
133d : 98                       tya
133e : 49c3                     eor #$c3
1340 : a8                       tay
1341 : 28                       plp
1342 : 840d                     sty zpt+1
1344 : 08                       php         ;flags after load/store sequence
1345 : 49c3                     eor #$c3
1347 : a8                       tay
1348 : c414                     cpy zp1+1   ;test result
                                trap_ne
134a : d0fe            >        bne *           ;failed not equal (non zero)
                        
134c : 68                       pla         ;load status
                                eor_flag 0
134d : 4930            >            eor #0|fao         ;invert expected flags 
                        
134f : cd0e02                   cmp fLDx+1  ;test flags
                                trap_ne
1352 : d0fe            >        bne *           ;failed not equal (non zero)
                        
                                set_stat 0
                       >            load_flag 0
1354 : a900            >            lda #0             ;allow test to change I
                       >
1356 : 48              >            pha         ;use stack to load status
1357 : 28              >            plp
                        
1358 : ac0a02                   ldy abs1+2
135b : 08                       php         ;test stores do not alter flags
135c : 98                       tya
135d : 49c3                     eor #$c3
135f : a8                       tay
1360 : 28                       plp
1361 : 840e                     sty zpt+2
1363 : 08                       php         ;flags after load/store sequence
1364 : 49c3                     eor #$c3
1366 : a8                       tay
1367 : c415                     cpy zp1+2   ;test result
                                trap_ne
1369 : d0fe            >        bne *           ;failed not equal (non zero)
                        
136b : 68                       pla         ;load status
                                eor_flag 0
136c : 4930            >            eor #0|fao         ;invert expected flags 
                        
136e : cd0f02                   cmp fLDx+2  ;test flags
                                trap_ne
1371 : d0fe            >        bne *           ;failed not equal (non zero)
                        
                                set_stat 0
                       >            load_flag 0
1373 : a900            >            lda #0             ;allow test to change I
                       >
1375 : 48              >            pha         ;use stack to load status
1376 : 28              >            plp
                        
1377 : ac0b02                   ldy abs1+3
137a : 08                       php         ;test stores do not alter flags
137b : 98                       tya
137c : 49c3                     eor #$c3
137e : a8                       tay
137f : 28                       plp
1380 : 840f                     sty zpt+3
1382 : 08                       php         ;flags after load/store sequence
1383 : 49c3                     eor #$c3
1385 : a8                       tay
1386 : c416                     cpy zp1+3   ;test result
                                trap_ne
1388 : d0fe            >        bne *           ;failed not equal (non zero)
                        
138a : 68                       pla         ;load status
                                eor_flag 0
138b : 4930            >            eor #0|fao         ;invert expected flags 
                        
138d : cd1002                   cmp fLDx+3  ;test flags
                                trap_ne
1390 : d0fe            >        bne *           ;failed not equal (non zero)
                        
                        
                                set_stat $ff
                       >            load_flag $ff
1392 : a9ff            >            lda #$ff             ;allow test to change
                       >
1394 : 48              >            pha         ;use stack to load status
1395 : 28              >            plp
                        
1396 : ac0802                   ldy abs1  
1399 : 08                       php         ;test stores do not alter flags
139a : 98                       tya
139b : 49c3                     eor #$c3
139d : a8                       tay
139e : 28                       plp
139f : 840c                     sty zpt  
13a1 : 08                       php         ;flags after load/store sequence
13a2 : 49c3                     eor #$c3
13a4 : a8                       tay
13a5 : c513                     cmp zp1     ;test result
                                trap_ne
13a7 : d0fe            >        bne *           ;failed not equal (non zero)
                        
13a9 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
13aa : 497d            >            eor #lo~fnz |fao         ;invert expected 
                        
13ac : cd0d02                   cmp fLDx    ;test flags
                                trap_ne
13af : d0fe            >        bne *           ;failed not equal (non zero)
                        
                                set_stat $ff
                       >            load_flag $ff
13b1 : a9ff            >            lda #$ff             ;allow test to change
                       >
13b3 : 48              >            pha         ;use stack to load status
13b4 : 28              >            plp
                        
13b5 : ac0902                   ldy abs1+1
13b8 : 08                       php         ;test stores do not alter flags
13b9 : 98                       tya
13ba : 49c3                     eor #$c3
13bc : a8                       tay
13bd : 28                       plp
13be : 840d                     sty zpt+1
13c0 : 08                       php         ;flags after load/store sequence
13c1 : 49c3                     eor #$c3
13c3 : a8                       tay
13c4 : c514                     cmp zp1+1   ;test result
                                trap_ne
13c6 : d0fe            >        bne *           ;failed not equal (non zero)
                        
13c8 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
13c9 : 497d            >            eor #lo~fnz |fao         ;invert expected 
                        
13cb : cd0e02                   cmp fLDx+1  ;test flags
                                trap_ne
13ce : d0fe            >        bne *           ;failed not equal (non zero)
                        
                                set_stat $ff
                       >            load_flag $ff
13d0 : a9ff            >            lda #$ff             ;allow test to change
                       >
13d2 : 48              >            pha         ;use stack to load status
13d3 : 28              >            plp
                        
13d4 : ac0a02                   ldy abs1+2
13d7 : 08                       php         ;test stores do not alter flags
13d8 : 98                       tya
13d9 : 49c3                     eor #$c3
13db : a8                       tay
13dc : 28                       plp
13dd : 840e                     sty zpt+2
13df : 08                       php         ;flags after load/store sequence
13e0 : 49c3                     eor #$c3
13e2 : a8                       tay
13e3 : c515                     cmp zp1+2   ;test result
                                trap_ne
13e5 : d0fe            >        bne *           ;failed not equal (non zero)
                        
13e7 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
13e8 : 497d            >            eor #lo~fnz |fao         ;invert expected 
                        
13ea : cd0f02                   cmp fLDx+2  ;test flags
                                trap_ne
13ed : d0fe            >        bne *           ;failed not equal (non zero)
                        
                                set_stat $ff
                       >            load_flag $ff
13ef : a9ff            >            lda #$ff             ;allow test to change
                       >
13f1 : 48              >            pha         ;use stack to load status
13f2 : 28              >            plp
                        
13f3 : ac0b02                   ldy abs1+3
13f6 : 08                       php         ;test stores do not alter flags
13f7 : 98                       tya
13f8 : 49c3                     eor #$c3
13fa : a8                       tay
13fb : 28                       plp
13fc : 840f                     sty zpt+3
13fe : 08                       php         ;flags after load/store sequence
13ff : 49c3                     eor #$c3
1401 : a8                       tay
1402 : c516                     cmp zp1+3   ;test result
                                trap_ne
1404 : d0fe            >        bne *           ;failed not equal (non zero)
                        
1406 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1407 : 497d            >            eor #lo~fnz |fao         ;invert expected 
                        
1409 : cd1002                   cmp fLDx+3  ;test flags
                                trap_ne
140c : d0fe            >        bne *           ;failed not equal (non zero)
                        
                        
                        
                                set_stat 0
                       >            load_flag 0
140e : a900            >            lda #0             ;allow test to change I
                       >
1410 : 48              >            pha         ;use stack to load status
1411 : 28              >            plp
                        
1412 : a0c3                     ldy #$c3  
1414 : 08                       php
1415 : cc0802                   cpy abs1    ;test result
                                trap_ne
1418 : d0fe            >        bne *           ;failed not equal (non zero)
                        
141a : 68                       pla         ;load status
                                eor_flag 0
141b : 4930            >            eor #0|fao         ;invert expected flags 
                        
141d : cd0d02                   cmp fLDx    ;test flags
                                trap_ne
1420 : d0fe            >        bne *           ;failed not equal (non zero)
                        
                                set_stat 0
                       >            load_flag 0
1422 : a900            >            lda #0             ;allow test to change I
                       >
1424 : 48              >            pha         ;use stack to load status
1425 : 28              >            plp
                        
1426 : a082                     ldy #$82
1428 : 08                       php
1429 : cc0902                   cpy abs1+1  ;test result
                                trap_ne
142c : d0fe            >        bne *           ;failed not equal (non zero)
                        
142e : 68                       pla         ;load status
                                eor_flag 0
142f : 4930            >            eor #0|fao         ;invert expected flags 
                        
1431 : cd0e02                   cmp fLDx+1  ;test flags
                                trap_ne
1434 : d0fe            >        bne *           ;failed not equal (non zero)
                        
                                set_stat 0
                       >            load_flag 0
1436 : a900            >            lda #0             ;allow test to change I
                       >
1438 : 48              >            pha         ;use stack to load status
1439 : 28              >            plp
                        
143a : a041                     ldy #$41
143c : 08                       php
143d : cc0a02                   cpy abs1+2  ;test result
                                trap_ne
1440 : d0fe            >        bne *           ;failed not equal (non zero)
                        
1442 : 68                       pla         ;load status
                                eor_flag 0
1443 : 4930            >            eor #0|fao         ;invert expected flags 
                        
1445 : cd0f02                   cmp fLDx+2  ;test flags
                                trap_ne
1448 : d0fe            >        bne *           ;failed not equal (non zero)
                        
                                set_stat 0
                       >            load_flag 0
144a : a900            >            lda #0             ;allow test to change I
                       >
144c : 48              >            pha         ;use stack to load status
144d : 28              >            plp
                        
144e : a000                     ldy #0
1450 : 08                       php
1451 : cc0b02                   cpy abs1+3  ;test result
                                trap_ne
1454 : d0fe            >        bne *           ;failed not equal (non zero)
                        
1456 : 68                       pla         ;load status
                                eor_flag 0
1457 : 4930            >            eor #0|fao         ;invert expected flags 
                        
1459 : cd1002                   cmp fLDx+3  ;test flags
                                trap_ne
145c : d0fe            >        bne *           ;failed not equal (non zero)
                        
                        
                                set_stat $ff
                       >            load_flag $ff
145e : a9ff            >            lda #$ff             ;allow test to change
                       >
1460 : 48              >            pha         ;use stack to load status
1461 : 28              >            plp
                        
1462 : a0c3                     ldy #$c3  
1464 : 08                       php
1465 : cc0802                   cpy abs1    ;test result
                                trap_ne
1468 : d0fe            >        bne *           ;failed not equal (non zero)
                        
146a : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
146b : 497d            >            eor #lo~fnz |fao         ;invert expected 
                        
146d : cd0d02                   cmp fLDx    ;test flags
                                trap_ne
1470 : d0fe            >        bne *           ;failed not equal (non zero)
                        
                                set_stat $ff
                       >            load_flag $ff
1472 : a9ff            >            lda #$ff             ;allow test to change
                       >
1474 : 48              >            pha         ;use stack to load status
1475 : 28              >            plp
                        
1476 : a082                     ldy #$82
1478 : 08                       php
1479 : cc0902                   cpy abs1+1  ;test result
                                trap_ne
147c : d0fe            >        bne *           ;failed not equal (non zero)
                        
147e : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
147f : 497d            >            eor #lo~fnz |fao         ;invert expected 
                        
1481 : cd0e02                   cmp fLDx+1  ;test flags
                                trap_ne
1484 : d0fe            >        bne *           ;failed not equal (non zero)
                        
                                set_stat $ff
                       >            load_flag $ff
1486 : a9ff            >            lda #$ff             ;allow test to change
                       >
1488 : 48              >            pha         ;use stack to load status
1489 : 28              >            plp
                        
148a : a041                     ldy #$41
148c : 08                       php
148d : cc0a02                   cpy abs1+2   ;test result
                                trap_ne
1490 : d0fe            >        bne *           ;failed not equal (non zero)
                        
1492 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1493 : 497d            >            eor #lo~fnz |fao         ;invert expected 
                        
1495 : cd0f02                   cmp fLDx+2  ;test flags
                                trap_ne
1498 : d0fe            >        bne *           ;failed not equal (non zero)
                        
                                set_stat $ff
                       >            load_flag $ff
149a : a9ff            >            lda #$ff             ;allow test to change
                       >
149c : 48              >            pha         ;use stack to load status
149d : 28              >            plp
                        
149e : a000                     ldy #0
14a0 : 08                       php
14a1 : cc0b02                   cpy abs1+3  ;test result
                                trap_ne
14a4 : d0fe            >        bne *           ;failed not equal (non zero)
                        
14a6 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
14a7 : 497d            >            eor #lo~fnz |fao         ;invert expected 
                        
14a9 : cd1002                   cmp fLDx+3  ;test flags
                                trap_ne
14ac : d0fe            >        bne *           ;failed not equal (non zero)
                        
                                
14ae : a000                     ldy #0
14b0 : a50c                     lda zpt  
14b2 : 49c3                     eor #$c3
14b4 : c513                     cmp zp1  
                                trap_ne     ;store to zp   data
14b6 : d0fe            >        bne *           ;failed not equal (non zero)
                        
14b8 : 840c                     sty zpt     ;clear                
14ba : ad0302                   lda abst  
14bd : 49c3                     eor #$c3
14bf : cd0802                   cmp abs1  
                                trap_ne     ;store to abs   data
14c2 : d0fe            >        bne *           ;failed not equal (non zero)
                        
14c4 : 8c0302                   sty abst    ;clear                
14c7 : a50d                     lda zpt+1
14c9 : 49c3                     eor #$c3
14cb : c514                     cmp zp1+1
                                trap_ne     ;store to zp+1 data
14cd : d0fe            >        bne *           ;failed not equal (non zero)
                        
14cf : 840d                     sty zpt+1   ;clear                
14d1 : ad0402                   lda abst+1
14d4 : 49c3                     eor #$c3
14d6 : cd0902                   cmp abs1+1
                                trap_ne     ;store to abs+1 data
14d9 : d0fe            >        bne *           ;failed not equal (non zero)
                        
14db : 8c0402                   sty abst+1  ;clear                
14de : a50e                     lda zpt+2
14e0 : 49c3                     eor #$c3
14e2 : c515                     cmp zp1+2
                                trap_ne     ;store to zp+2 data
14e4 : d0fe            >        bne *           ;failed not equal (non zero)
                        
14e6 : 840e                     sty zpt+2   ;clear                
14e8 : ad0502                   lda abst+2
14eb : 49c3                     eor #$c3
14ed : cd0a02                   cmp abs1+2
                                trap_ne     ;store to abs+2 data
14f0 : d0fe            >        bne *           ;failed not equal (non zero)
                        
14f2 : 8c0502                   sty abst+2  ;clear                
14f5 : a50f                     lda zpt+3
14f7 : 49c3                     eor #$c3
14f9 : c516                     cmp zp1+3
                                trap_ne     ;store to zp+3 data
14fb : d0fe            >        bne *           ;failed not equal (non zero)
                        
14fd : 840f                     sty zpt+3   ;clear                
14ff : ad0602                   lda abst+3
1502 : 49c3                     eor #$c3
1504 : cd0b02                   cmp abs1+3
                                trap_ne     ;store to abs+3 data
1507 : d0fe            >        bne *           ;failed not equal (non zero)
                        
1509 : 8c0602                   sty abst+3  ;clear                
                                next_test
150c : ad0002          >            lda test_case   ;previous test
150f : c914            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
1511 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0015 =                 >test_num = test_num + 1
1513 : a915            >            lda #test_num   ;*** this tests' number
1515 : 8d0002          >            sta test_case
                       >            ;check_ram       ;uncomment to find altere
                        
                        
                        ; testing load / store accumulator LDA / STA all addre
                        ; LDA / STA - zp,x / abs,x
1518 : a203                     ldx #3
151a :                  tldax    
                                set_stat 0
                       >            load_flag 0
151a : a900            >            lda #0             ;allow test to change I
                       >
151c : 48              >            pha         ;use stack to load status
151d : 28              >            plp
                        
151e : b513                     lda zp1,x
1520 : 08                       php         ;test stores do not alter flags
1521 : 49c3                     eor #$c3
1523 : 28                       plp
1524 : 9d0302                   sta abst,x
1527 : 08                       php         ;flags after load/store sequence
1528 : 49c3                     eor #$c3
152a : dd0802                   cmp abs1,x  ;test result
                                trap_ne
152d : d0fe            >        bne *           ;failed not equal (non zero)
                        
152f : 68                       pla         ;load status
                                eor_flag 0
1530 : 4930            >            eor #0|fao         ;invert expected flags 
                        
1532 : dd0d02                   cmp fLDx,x  ;test flags
                                trap_ne
1535 : d0fe            >        bne *           ;failed not equal (non zero)
                        
1537 : ca                       dex
1538 : 10e0                     bpl tldax                  
                        
153a : a203                     ldx #3
153c :                  tldax1   
                                set_stat $ff
                       >            load_flag $ff
153c : a9ff            >            lda #$ff             ;allow test to change
                       >
153e : 48              >            pha         ;use stack to load status
153f : 28              >            plp
                        
1540 : b513                     lda zp1,x
1542 : 08                       php         ;test stores do not alter flags
1543 : 49c3                     eor #$c3
1545 : 28                       plp
1546 : 9d0302                   sta abst,x
1549 : 08                       php         ;flags after load/store sequence
154a : 49c3                     eor #$c3
154c : dd0802                   cmp abs1,x   ;test result
                                trap_ne
154f : d0fe            >        bne *           ;failed not equal (non zero)
                        
1551 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1552 : 497d            >            eor #lo~fnz |fao         ;invert expected 
                        
1554 : dd0d02                   cmp fLDx,x  ;test flags
                                trap_ne
1557 : d0fe            >        bne *           ;failed not equal (non zero)
                        
1559 : ca                       dex
155a : 10e0                     bpl tldax1                  
                        
155c : a203                     ldx #3
155e :                  tldax2   
                                set_stat 0
                       >            load_flag 0
155e : a900            >            lda #0             ;allow test to change I
                       >
1560 : 48              >            pha         ;use stack to load status
1561 : 28              >            plp
                        
1562 : bd0802                   lda abs1,x
1565 : 08                       php         ;test stores do not alter flags
1566 : 49c3                     eor #$c3
1568 : 28                       plp
1569 : 950c                     sta zpt,x
156b : 08                       php         ;flags after load/store sequence
156c : 49c3                     eor #$c3
156e : d513                     cmp zp1,x   ;test result
                                trap_ne
1570 : d0fe            >        bne *           ;failed not equal (non zero)
                        
1572 : 68                       pla         ;load status
                                eor_flag 0
1573 : 4930            >            eor #0|fao         ;invert expected flags 
                        
1575 : dd0d02                   cmp fLDx,x  ;test flags
                                trap_ne
1578 : d0fe            >        bne *           ;failed not equal (non zero)
                        
157a : ca                       dex
157b : 10e1                     bpl tldax2                  
                        
157d : a203                     ldx #3
157f :                  tldax3
                                set_stat $ff
                       >            load_flag $ff
157f : a9ff            >            lda #$ff             ;allow test to change
                       >
1581 : 48              >            pha         ;use stack to load status
1582 : 28              >            plp
                        
1583 : bd0802                   lda abs1,x
1586 : 08                       php         ;test stores do not alter flags
1587 : 49c3                     eor #$c3
1589 : 28                       plp
158a : 950c                     sta zpt,x
158c : 08                       php         ;flags after load/store sequence
158d : 49c3                     eor #$c3
158f : d513                     cmp zp1,x   ;test result
                                trap_ne
1591 : d0fe            >        bne *           ;failed not equal (non zero)
                        
1593 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1594 : 497d            >            eor #lo~fnz |fao         ;invert expected 
                        
1596 : dd0d02                   cmp fLDx,x  ;test flags
                                trap_ne
1599 : d0fe            >        bne *           ;failed not equal (non zero)
                        
159b : ca                       dex
159c : 10e1                     bpl tldax3
                        
159e : a203                     ldx #3      ;testing store result
15a0 : a000                     ldy #0
15a2 : b50c             tstax   lda zpt,x
15a4 : 49c3                     eor #$c3
15a6 : d513                     cmp zp1,x
                                trap_ne     ;store to zp,x data
15a8 : d0fe            >        bne *           ;failed not equal (non zero)
                        
15aa : 940c                     sty zpt,x   ;clear                
15ac : bd0302                   lda abst,x
15af : 49c3                     eor #$c3
15b1 : dd0802                   cmp abs1,x
                                trap_ne     ;store to abs,x data
15b4 : d0fe            >        bne *           ;failed not equal (non zero)
                        
15b6 : 8a                       txa
15b7 : 9d0302                   sta abst,x  ;clear                
15ba : ca                       dex
15bb : 10e5                     bpl tstax
                                next_test
15bd : ad0002          >            lda test_case   ;previous test
15c0 : c915            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
15c2 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0016 =                 >test_num = test_num + 1
15c4 : a916            >            lda #test_num   ;*** this tests' number
15c6 : 8d0002          >            sta test_case
                       >            ;check_ram       ;uncomment to find altere
                        
                        
                        ; LDA / STA - (zp),y / abs,y / (zp,x)
15c9 : a003                     ldy #3
15cb :                  tlday    
                                set_stat 0
                       >            load_flag 0
15cb : a900            >            lda #0             ;allow test to change I
                       >
15cd : 48              >            pha         ;use stack to load status
15ce : 28              >            plp
                        
15cf : b124                     lda (ind1),y
15d1 : 08                       php         ;test stores do not alter flags
15d2 : 49c3                     eor #$c3
15d4 : 28                       plp
15d5 : 990302                   sta abst,y
15d8 : 08                       php         ;flags after load/store sequence
15d9 : 49c3                     eor #$c3
15db : d90802                   cmp abs1,y  ;test result
                                trap_ne
15de : d0fe            >        bne *           ;failed not equal (non zero)
                        
15e0 : 68                       pla         ;load status
                                eor_flag 0
15e1 : 4930            >            eor #0|fao         ;invert expected flags 
                        
15e3 : d90d02                   cmp fLDx,y  ;test flags
                                trap_ne
15e6 : d0fe            >        bne *           ;failed not equal (non zero)
                        
15e8 : 88                       dey
15e9 : 10e0                     bpl tlday                  
                        
15eb : a003                     ldy #3
15ed :                  tlday1   
                                set_stat $ff
                       >            load_flag $ff
15ed : a9ff            >            lda #$ff             ;allow test to change
                       >
15ef : 48              >            pha         ;use stack to load status
15f0 : 28              >            plp
                        
15f1 : b124                     lda (ind1),y
15f3 : 08                       php         ;test stores do not alter flags
15f4 : 49c3                     eor #$c3
15f6 : 28                       plp
15f7 : 990302                   sta abst,y
15fa : 08                       php         ;flags after load/store sequence
15fb : 49c3                     eor #$c3
15fd : d90802                   cmp abs1,y  ;test result
                                trap_ne
1600 : d0fe            >        bne *           ;failed not equal (non zero)
                        
1602 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1603 : 497d            >            eor #lo~fnz |fao         ;invert expected 
                        
1605 : d90d02                   cmp fLDx,y  ;test flags
                                trap_ne
1608 : d0fe            >        bne *           ;failed not equal (non zero)
                        
160a : 88                       dey
160b : 10e0                     bpl tlday1                  
                        
160d : a003                     ldy #3      ;testing store result
160f : a200                     ldx #0
1611 : b90302           tstay   lda abst,y
1614 : 49c3                     eor #$c3
1616 : d90802                   cmp abs1,y
                                trap_ne     ;store to abs data
1619 : d0fe            >        bne *           ;failed not equal (non zero)
                        
161b : 8a                       txa
161c : 990302                   sta abst,y  ;clear                
161f : 88                       dey
1620 : 10ef                     bpl tstay
                        
1622 : a003                     ldy #3
1624 :                  tlday2   
                                set_stat 0
                       >            load_flag 0
1624 : a900            >            lda #0             ;allow test to change I
                       >
1626 : 48              >            pha         ;use stack to load status
1627 : 28              >            plp
                        
1628 : b90802                   lda abs1,y
162b : 08                       php         ;test stores do not alter flags
162c : 49c3                     eor #$c3
162e : 28                       plp
162f : 9130                     sta (indt),y
1631 : 08                       php         ;flags after load/store sequence
1632 : 49c3                     eor #$c3
1634 : d124                     cmp (ind1),y    ;test result
                                trap_ne
1636 : d0fe            >        bne *           ;failed not equal (non zero)
                        
1638 : 68                       pla         ;load status
                                eor_flag 0
1639 : 4930            >            eor #0|fao         ;invert expected flags 
                        
163b : d90d02                   cmp fLDx,y  ;test flags
                                trap_ne
163e : d0fe            >        bne *           ;failed not equal (non zero)
                        
1640 : 88                       dey
1641 : 10e1                     bpl tlday2                  
                        
1643 : a003                     ldy #3
1645 :                  tlday3   
                                set_stat $ff
                       >            load_flag $ff
1645 : a9ff            >            lda #$ff             ;allow test to change
                       >
1647 : 48              >            pha         ;use stack to load status
1648 : 28              >            plp
                        
1649 : b90802                   lda abs1,y
164c : 08                       php         ;test stores do not alter flags
164d : 49c3                     eor #$c3
164f : 28                       plp
1650 : 9130                     sta (indt),y
1652 : 08                       php         ;flags after load/store sequence
1653 : 49c3                     eor #$c3
1655 : d124                     cmp (ind1),y   ;test result
                                trap_ne
1657 : d0fe            >        bne *           ;failed not equal (non zero)
                        
1659 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
165a : 497d            >            eor #lo~fnz |fao         ;invert expected 
                        
165c : d90d02                   cmp fLDx,y  ;test flags
                                trap_ne
165f : d0fe            >        bne *           ;failed not equal (non zero)
                        
1661 : 88                       dey
1662 : 10e1                     bpl tlday3
                                
1664 : a003                     ldy #3      ;testing store result
1666 : a200                     ldx #0
1668 : b90302           tstay1  lda abst,y
166b : 49c3                     eor #$c3
166d : d90802                   cmp abs1,y
                                trap_ne     ;store to abs data
1670 : d0fe            >        bne *           ;failed not equal (non zero)
                        
1672 : 8a                       txa
1673 : 990302                   sta abst,y  ;clear                
1676 : 88                       dey
1677 : 10ef                     bpl tstay1
                                
1679 : a206                     ldx #6
167b : a003                     ldy #3
167d :                  tldax4   
                                set_stat 0
                       >            load_flag 0
167d : a900            >            lda #0             ;allow test to change I
                       >
167f : 48              >            pha         ;use stack to load status
1680 : 28              >            plp
                        
1681 : a124                     lda (ind1,x)
1683 : 08                       php         ;test stores do not alter flags
1684 : 49c3                     eor #$c3
1686 : 28                       plp
1687 : 8130                     sta (indt,x)
1689 : 08                       php         ;flags after load/store sequence
168a : 49c3                     eor #$c3
168c : d90802                   cmp abs1,y  ;test result
                                trap_ne
168f : d0fe            >        bne *           ;failed not equal (non zero)
                        
1691 : 68                       pla         ;load status
                                eor_flag 0
1692 : 4930            >            eor #0|fao         ;invert expected flags 
                        
1694 : d90d02                   cmp fLDx,y  ;test flags
                                trap_ne
1697 : d0fe            >        bne *           ;failed not equal (non zero)
                        
1699 : ca                       dex
169a : ca                       dex
169b : 88                       dey
169c : 10df                     bpl tldax4                  
                        
169e : a206                     ldx #6
16a0 : a003                     ldy #3
16a2 :                  tldax5
                                set_stat $ff
                       >            load_flag $ff
16a2 : a9ff            >            lda #$ff             ;allow test to change
                       >
16a4 : 48              >            pha         ;use stack to load status
16a5 : 28              >            plp
                        
16a6 : a124                     lda (ind1,x)
16a8 : 08                       php         ;test stores do not alter flags
16a9 : 49c3                     eor #$c3
16ab : 28                       plp
16ac : 8130                     sta (indt,x)
16ae : 08                       php         ;flags after load/store sequence
16af : 49c3                     eor #$c3
16b1 : d90802                   cmp abs1,y  ;test result
                                trap_ne
16b4 : d0fe            >        bne *           ;failed not equal (non zero)
                        
16b6 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
16b7 : 497d            >            eor #lo~fnz |fao         ;invert expected 
                        
16b9 : d90d02                   cmp fLDx,y  ;test flags
                                trap_ne
16bc : d0fe            >        bne *           ;failed not equal (non zero)
                        
16be : ca                       dex
16bf : ca                       dex
16c0 : 88                       dey
16c1 : 10df                     bpl tldax5
                        
16c3 : a003                     ldy #3      ;testing store result
16c5 : a200                     ldx #0
16c7 : b90302           tstay2  lda abst,y
16ca : 49c3                     eor #$c3
16cc : d90802                   cmp abs1,y
                                trap_ne     ;store to abs data
16cf : d0fe            >        bne *           ;failed not equal (non zero)
                        
16d1 : 8a                       txa
16d2 : 990302                   sta abst,y  ;clear                
16d5 : 88                       dey
16d6 : 10ef                     bpl tstay2
                                next_test
16d8 : ad0002          >            lda test_case   ;previous test
16db : c916            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
16dd : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0017 =                 >test_num = test_num + 1
16df : a917            >            lda #test_num   ;*** this tests' number
16e1 : 8d0002          >            sta test_case
                       >            ;check_ram       ;uncomment to find altere
                        
                        
                        ; indexed wraparound test (only zp should wrap)
16e4 : a2fd                     ldx #3+$fa
16e6 : b519             tldax6  lda zp1-$fa&$ff,x   ;wrap on indexed zp
16e8 : 9d0901                   sta abst-$fa,x      ;no STX abs,x!
16eb : ca                       dex
16ec : e0fa                     cpx #$fa
16ee : b0f6                     bcs tldax6                  
16f0 : a2fd                     ldx #3+$fa
16f2 : bd0e01           tldax7  lda abs1-$fa,x      ;no wrap on indexed abs
16f5 : 9512                     sta zpt-$fa&$ff,x
16f7 : ca                       dex
16f8 : e0fa                     cpx #$fa
16fa : b0f6                     bcs tldax7
                                                  
16fc : a203                     ldx #3      ;testing wraparound result
16fe : a000                     ldy #0
1700 : b50c             tstax1  lda zpt,x
1702 : d513                     cmp zp1,x
                                trap_ne     ;store to zp,x data
1704 : d0fe            >        bne *           ;failed not equal (non zero)
                        
1706 : 940c                     sty zpt,x   ;clear                
1708 : bd0302                   lda abst,x
170b : dd0802                   cmp abs1,x
                                trap_ne     ;store to abs,x data
170e : d0fe            >        bne *           ;failed not equal (non zero)
                        
1710 : 8a                       txa
1711 : 9d0302                   sta abst,x  ;clear                
1714 : ca                       dex
1715 : 10e9                     bpl tstax1
                        
1717 : a0fb                     ldy #3+$f8
1719 : a2fe                     ldx #6+$f8
171b : a12c             tlday4  lda (ind1-$f8&$ff,x) ;wrap on indexed zp indir
171d : 990b01                   sta abst-$f8,y
1720 : ca                       dex
1721 : ca                       dex
1722 : 88                       dey
1723 : c0f8                     cpy #$f8
1725 : b0f4                     bcs tlday4
1727 : a003                     ldy #3      ;testing wraparound result
1729 : a200                     ldx #0
172b : b90302           tstay4  lda abst,y
172e : d90802                   cmp abs1,y
                                trap_ne     ;store to abs data
1731 : d0fe            >        bne *           ;failed not equal (non zero)
                        
1733 : 8a                       txa
1734 : 990302                   sta abst,y  ;clear                
1737 : 88                       dey
1738 : 10f1                     bpl tstay4
                                
173a : a0fb                     ldy #3+$f8
173c : b91001           tlday5  lda abs1-$f8,y  ;no wrap on indexed abs
173f : 9138                     sta (inwt),y
1741 : 88                       dey
1742 : c0f8                     cpy #$f8
1744 : b0f6                     bcs tlday5                  
1746 : a003                     ldy #3      ;testing wraparound result
1748 : a200                     ldx #0
174a : b90302           tstay5  lda abst,y
174d : d90802                   cmp abs1,y
                                trap_ne     ;store to abs data
1750 : d0fe            >        bne *           ;failed not equal (non zero)
                        
1752 : 8a                       txa
1753 : 990302                   sta abst,y  ;clear                
1756 : 88                       dey
1757 : 10f1                     bpl tstay5
                        
1759 : a0fb                     ldy #3+$f8
175b : a2fe                     ldx #6+$f8
175d : b12e             tlday6  lda (inw1),y    ;no wrap on zp indirect indexe
175f : 8138                     sta (indt-$f8&$ff,x)
1761 : ca                       dex
1762 : ca                       dex
1763 : 88                       dey
1764 : c0f8                     cpy #$f8
1766 : b0f5                     bcs tlday6
1768 : a003                     ldy #3      ;testing wraparound result
176a : a200                     ldx #0
176c : b90302           tstay6  lda abst,y
176f : d90802                   cmp abs1,y
                                trap_ne     ;store to abs data
1772 : d0fe            >        bne *           ;failed not equal (non zero)
                        
1774 : 8a                       txa
1775 : 990302                   sta abst,y  ;clear                
1778 : 88                       dey
1779 : 10f1                     bpl tstay6
                                next_test
177b : ad0002          >            lda test_case   ;previous test
177e : c917            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
1780 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0018 =                 >test_num = test_num + 1
1782 : a918            >            lda #test_num   ;*** this tests' number
1784 : 8d0002          >            sta test_case
                       >            ;check_ram       ;uncomment to find altere
                        
                        
                        ; LDA / STA - zp / abs / #
                                set_stat 0  
                       >            load_flag 0  
1787 : a900            >            lda #0               ;allow test to change
                       >
1789 : 48              >            pha         ;use stack to load status
178a : 28              >            plp
                        
178b : a513                     lda zp1
178d : 08                       php         ;test stores do not alter flags
178e : 49c3                     eor #$c3
1790 : 28                       plp
1791 : 8d0302                   sta abst
1794 : 08                       php         ;flags after load/store sequence
1795 : 49c3                     eor #$c3
1797 : c9c3                     cmp #$c3    ;test result
                                trap_ne
1799 : d0fe            >        bne *           ;failed not equal (non zero)
                        
179b : 68                       pla         ;load status
                                eor_flag 0
179c : 4930            >            eor #0|fao         ;invert expected flags 
                        
179e : cd0d02                   cmp fLDx    ;test flags
                                trap_ne
17a1 : d0fe            >        bne *           ;failed not equal (non zero)
                        
                                set_stat 0
                       >            load_flag 0
17a3 : a900            >            lda #0             ;allow test to change I
                       >
17a5 : 48              >            pha         ;use stack to load status
17a6 : 28              >            plp
                        
17a7 : a514                     lda zp1+1
17a9 : 08                       php         ;test stores do not alter flags
17aa : 49c3                     eor #$c3
17ac : 28                       plp
17ad : 8d0402                   sta abst+1
17b0 : 08                       php         ;flags after load/store sequence
17b1 : 49c3                     eor #$c3
17b3 : c982                     cmp #$82    ;test result
                                trap_ne
17b5 : d0fe            >        bne *           ;failed not equal (non zero)
                        
17b7 : 68                       pla         ;load status
                                eor_flag 0
17b8 : 4930            >            eor #0|fao         ;invert expected flags 
                        
17ba : cd0e02                   cmp fLDx+1  ;test flags
                                trap_ne
17bd : d0fe            >        bne *           ;failed not equal (non zero)
                        
                                set_stat 0
                       >            load_flag 0
17bf : a900            >            lda #0             ;allow test to change I
                       >
17c1 : 48              >            pha         ;use stack to load status
17c2 : 28              >            plp
                        
17c3 : a515                     lda zp1+2
17c5 : 08                       php         ;test stores do not alter flags
17c6 : 49c3                     eor #$c3
17c8 : 28                       plp
17c9 : 8d0502                   sta abst+2
17cc : 08                       php         ;flags after load/store sequence
17cd : 49c3                     eor #$c3
17cf : c941                     cmp #$41    ;test result
                                trap_ne
17d1 : d0fe            >        bne *           ;failed not equal (non zero)
                        
17d3 : 68                       pla         ;load status
                                eor_flag 0
17d4 : 4930            >            eor #0|fao         ;invert expected flags 
                        
17d6 : cd0f02                   cmp fLDx+2  ;test flags
                                trap_ne
17d9 : d0fe            >        bne *           ;failed not equal (non zero)
                        
                                set_stat 0
                       >            load_flag 0
17db : a900            >            lda #0             ;allow test to change I
                       >
17dd : 48              >            pha         ;use stack to load status
17de : 28              >            plp
                        
17df : a516                     lda zp1+3
17e1 : 08                       php         ;test stores do not alter flags
17e2 : 49c3                     eor #$c3
17e4 : 28                       plp
17e5 : 8d0602                   sta abst+3
17e8 : 08                       php         ;flags after load/store sequence
17e9 : 49c3                     eor #$c3
17eb : c900                     cmp #0      ;test result
                                trap_ne
17ed : d0fe            >        bne *           ;failed not equal (non zero)
                        
17ef : 68                       pla         ;load status
                                eor_flag 0
17f0 : 4930            >            eor #0|fao         ;invert expected flags 
                        
17f2 : cd1002                   cmp fLDx+3  ;test flags
                                trap_ne
17f5 : d0fe            >        bne *           ;failed not equal (non zero)
                        
                                set_stat $ff
                       >            load_flag $ff
17f7 : a9ff            >            lda #$ff             ;allow test to change
                       >
17f9 : 48              >            pha         ;use stack to load status
17fa : 28              >            plp
                        
17fb : a513                     lda zp1  
17fd : 08                       php         ;test stores do not alter flags
17fe : 49c3                     eor #$c3
1800 : 28                       plp
1801 : 8d0302                   sta abst  
1804 : 08                       php         ;flags after load/store sequence
1805 : 49c3                     eor #$c3
1807 : c9c3                     cmp #$c3    ;test result
                                trap_ne
1809 : d0fe            >        bne *           ;failed not equal (non zero)
                        
180b : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
180c : 497d            >            eor #lo~fnz |fao         ;invert expected 
                        
180e : cd0d02                   cmp fLDx    ;test flags
                                trap_ne
1811 : d0fe            >        bne *           ;failed not equal (non zero)
                        
                                set_stat $ff
                       >            load_flag $ff
1813 : a9ff            >            lda #$ff             ;allow test to change
                       >
1815 : 48              >            pha         ;use stack to load status
1816 : 28              >            plp
                        
1817 : a514                     lda zp1+1
1819 : 08                       php         ;test stores do not alter flags
181a : 49c3                     eor #$c3
181c : 28                       plp
181d : 8d0402                   sta abst+1
1820 : 08                       php         ;flags after load/store sequence
1821 : 49c3                     eor #$c3
1823 : c982                     cmp #$82    ;test result
                                trap_ne
1825 : d0fe            >        bne *           ;failed not equal (non zero)
                        
1827 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1828 : 497d            >            eor #lo~fnz |fao         ;invert expected 
                        
182a : cd0e02                   cmp fLDx+1  ;test flags
                                trap_ne
182d : d0fe            >        bne *           ;failed not equal (non zero)
                        
                                set_stat $ff
                       >            load_flag $ff
182f : a9ff            >            lda #$ff             ;allow test to change
                       >
1831 : 48              >            pha         ;use stack to load status
1832 : 28              >            plp
                        
1833 : a515                     lda zp1+2
1835 : 08                       php         ;test stores do not alter flags
1836 : 49c3                     eor #$c3
1838 : 28                       plp
1839 : 8d0502                   sta abst+2
183c : 08                       php         ;flags after load/store sequence
183d : 49c3                     eor #$c3
183f : c941                     cmp #$41    ;test result
                                trap_ne
1841 : d0fe            >        bne *           ;failed not equal (non zero)
                        
1843 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1844 : 497d            >            eor #lo~fnz |fao         ;invert expected 
                        
1846 : cd0f02                   cmp fLDx+2  ;test flags
                                trap_ne
1849 : d0fe            >        bne *           ;failed not equal (non zero)
                        
                                set_stat $ff
                       >            load_flag $ff
184b : a9ff            >            lda #$ff             ;allow test to change
                       >
184d : 48              >            pha         ;use stack to load status
184e : 28              >            plp
                        
184f : a516                     lda zp1+3
1851 : 08                       php         ;test stores do not alter flags
1852 : 49c3                     eor #$c3
1854 : 28                       plp
1855 : 8d0602                   sta abst+3
1858 : 08                       php         ;flags after load/store sequence
1859 : 49c3                     eor #$c3
185b : c900                     cmp #0      ;test result
                                trap_ne
185d : d0fe            >        bne *           ;failed not equal (non zero)
                        
185f : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1860 : 497d            >            eor #lo~fnz |fao         ;invert expected 
                        
1862 : cd1002                   cmp fLDx+3  ;test flags
                                trap_ne
1865 : d0fe            >        bne *           ;failed not equal (non zero)
                        
                                set_stat 0
                       >            load_flag 0
1867 : a900            >            lda #0             ;allow test to change I
                       >
1869 : 48              >            pha         ;use stack to load status
186a : 28              >            plp
                        
186b : ad0802                   lda abs1  
186e : 08                       php         ;test stores do not alter flags
186f : 49c3                     eor #$c3
1871 : 28                       plp
1872 : 850c                     sta zpt  
1874 : 08                       php         ;flags after load/store sequence
1875 : 49c3                     eor #$c3
1877 : c513                     cmp zp1     ;test result
                                trap_ne
1879 : d0fe            >        bne *           ;failed not equal (non zero)
                        
187b : 68                       pla         ;load status
                                eor_flag 0
187c : 4930            >            eor #0|fao         ;invert expected flags 
                        
187e : cd0d02                   cmp fLDx    ;test flags
                                trap_ne
1881 : d0fe            >        bne *           ;failed not equal (non zero)
                        
                                set_stat 0
                       >            load_flag 0
1883 : a900            >            lda #0             ;allow test to change I
                       >
1885 : 48              >            pha         ;use stack to load status
1886 : 28              >            plp
                        
1887 : ad0902                   lda abs1+1
188a : 08                       php         ;test stores do not alter flags
188b : 49c3                     eor #$c3
188d : 28                       plp
188e : 850d                     sta zpt+1
1890 : 08                       php         ;flags after load/store sequence
1891 : 49c3                     eor #$c3
1893 : c514                     cmp zp1+1   ;test result
                                trap_ne
1895 : d0fe            >        bne *           ;failed not equal (non zero)
                        
1897 : 68                       pla         ;load status
                                eor_flag 0
1898 : 4930            >            eor #0|fao         ;invert expected flags 
                        
189a : cd0e02                   cmp fLDx+1  ;test flags
                                trap_ne
189d : d0fe            >        bne *           ;failed not equal (non zero)
                        
                                set_stat 0
                       >            load_flag 0
189f : a900            >            lda #0             ;allow test to change I
                       >
18a1 : 48              >            pha         ;use stack to load status
18a2 : 28              >            plp
                        
18a3 : ad0a02                   lda abs1+2
18a6 : 08                       php         ;test stores do not alter flags
18a7 : 49c3                     eor #$c3
18a9 : 28                       plp
18aa : 850e                     sta zpt+2
18ac : 08                       php         ;flags after load/store sequence
18ad : 49c3                     eor #$c3
18af : c515                     cmp zp1+2   ;test result
                                trap_ne
18b1 : d0fe            >        bne *           ;failed not equal (non zero)
                        
18b3 : 68                       pla         ;load status
                                eor_flag 0
18b4 : 4930            >            eor #0|fao         ;invert expected flags 
                        
18b6 : cd0f02                   cmp fLDx+2  ;test flags
                                trap_ne
18b9 : d0fe            >        bne *           ;failed not equal (non zero)
                        
                                set_stat 0
                       >            load_flag 0
18bb : a900            >            lda #0             ;allow test to change I
                       >
18bd : 48              >            pha         ;use stack to load status
18be : 28              >            plp
                        
18bf : ad0b02                   lda abs1+3
18c2 : 08                       php         ;test stores do not alter flags
18c3 : 49c3                     eor #$c3
18c5 : 28                       plp
18c6 : 850f                     sta zpt+3
18c8 : 08                       php         ;flags after load/store sequence
18c9 : 49c3                     eor #$c3
18cb : c516                     cmp zp1+3   ;test result
                                trap_ne
18cd : d0fe            >        bne *           ;failed not equal (non zero)
                        
18cf : 68                       pla         ;load status
                                eor_flag 0
18d0 : 4930            >            eor #0|fao         ;invert expected flags 
                        
18d2 : cd1002                   cmp fLDx+3  ;test flags
                                trap_ne
18d5 : d0fe            >        bne *           ;failed not equal (non zero)
                        
                                set_stat $ff
                       >            load_flag $ff
18d7 : a9ff            >            lda #$ff             ;allow test to change
                       >
18d9 : 48              >            pha         ;use stack to load status
18da : 28              >            plp
                        
18db : ad0802                   lda abs1  
18de : 08                       php         ;test stores do not alter flags
18df : 49c3                     eor #$c3
18e1 : 28                       plp
18e2 : 850c                     sta zpt  
18e4 : 08                       php         ;flags after load/store sequence
18e5 : 49c3                     eor #$c3
18e7 : c513                     cmp zp1     ;test result
                                trap_ne
18e9 : d0fe            >        bne *           ;failed not equal (non zero)
                        
18eb : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
18ec : 497d            >            eor #lo~fnz |fao         ;invert expected 
                        
18ee : cd0d02                   cmp fLDx    ;test flags
                                trap_ne
18f1 : d0fe            >        bne *           ;failed not equal (non zero)
                        
                                set_stat $ff
                       >            load_flag $ff
18f3 : a9ff            >            lda #$ff             ;allow test to change
                       >
18f5 : 48              >            pha         ;use stack to load status
18f6 : 28              >            plp
                        
18f7 : ad0902                   lda abs1+1
18fa : 08                       php         ;test stores do not alter flags
18fb : 49c3                     eor #$c3
18fd : 28                       plp
18fe : 850d                     sta zpt+1
1900 : 08                       php         ;flags after load/store sequence
1901 : 49c3                     eor #$c3
1903 : c514                     cmp zp1+1   ;test result
                                trap_ne
1905 : d0fe            >        bne *           ;failed not equal (non zero)
                        
1907 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1908 : 497d            >            eor #lo~fnz |fao         ;invert expected 
                        
190a : cd0e02                   cmp fLDx+1  ;test flags
                                trap_ne
190d : d0fe            >        bne *           ;failed not equal (non zero)
                        
                                set_stat $ff
                       >            load_flag $ff
190f : a9ff            >            lda #$ff             ;allow test to change
                       >
1911 : 48              >            pha         ;use stack to load status
1912 : 28              >            plp
                        
1913 : ad0a02                   lda abs1+2
1916 : 08                       php         ;test stores do not alter flags
1917 : 49c3                     eor #$c3
1919 : 28                       plp
191a : 850e                     sta zpt+2
191c : 08                       php         ;flags after load/store sequence
191d : 49c3                     eor #$c3
191f : c515                     cmp zp1+2   ;test result
                                trap_ne
1921 : d0fe            >        bne *           ;failed not equal (non zero)
                        
1923 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1924 : 497d            >            eor #lo~fnz |fao         ;invert expected 
                        
1926 : cd0f02                   cmp fLDx+2  ;test flags
                                trap_ne
1929 : d0fe            >        bne *           ;failed not equal (non zero)
                        
                                set_stat $ff
                       >            load_flag $ff
192b : a9ff            >            lda #$ff             ;allow test to change
                       >
192d : 48              >            pha         ;use stack to load status
192e : 28              >            plp
                        
192f : ad0b02                   lda abs1+3
1932 : 08                       php         ;test stores do not alter flags
1933 : 49c3                     eor #$c3
1935 : 28                       plp
1936 : 850f                     sta zpt+3
1938 : 08                       php         ;flags after load/store sequence
1939 : 49c3                     eor #$c3
193b : c516                     cmp zp1+3   ;test result
                                trap_ne
193d : d0fe            >        bne *           ;failed not equal (non zero)
                        
193f : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1940 : 497d            >            eor #lo~fnz |fao         ;invert expected 
                        
1942 : cd1002                   cmp fLDx+3  ;test flags
                                trap_ne
1945 : d0fe            >        bne *           ;failed not equal (non zero)
                        
                                set_stat 0  
                       >            load_flag 0  
1947 : a900            >            lda #0               ;allow test to change
                       >
1949 : 48              >            pha         ;use stack to load status
194a : 28              >            plp
                        
194b : a9c3                     lda #$c3
194d : 08                       php
194e : cd0802                   cmp abs1    ;test result
                                trap_ne
1951 : d0fe            >        bne *           ;failed not equal (non zero)
                        
1953 : 68                       pla         ;load status
                                eor_flag 0
1954 : 4930            >            eor #0|fao         ;invert expected flags 
                        
1956 : cd0d02                   cmp fLDx    ;test flags
                                trap_ne
1959 : d0fe            >        bne *           ;failed not equal (non zero)
                        
                                set_stat 0
                       >            load_flag 0
195b : a900            >            lda #0             ;allow test to change I
                       >
195d : 48              >            pha         ;use stack to load status
195e : 28              >            plp
                        
195f : a982                     lda #$82
1961 : 08                       php
1962 : cd0902                   cmp abs1+1  ;test result
                                trap_ne
1965 : d0fe            >        bne *           ;failed not equal (non zero)
                        
1967 : 68                       pla         ;load status
                                eor_flag 0
1968 : 4930            >            eor #0|fao         ;invert expected flags 
                        
196a : cd0e02                   cmp fLDx+1  ;test flags
                                trap_ne
196d : d0fe            >        bne *           ;failed not equal (non zero)
                        
                                set_stat 0
                       >            load_flag 0
196f : a900            >            lda #0             ;allow test to change I
                       >
1971 : 48              >            pha         ;use stack to load status
1972 : 28              >            plp
                        
1973 : a941                     lda #$41
1975 : 08                       php
1976 : cd0a02                   cmp abs1+2  ;test result
                                trap_ne
1979 : d0fe            >        bne *           ;failed not equal (non zero)
                        
197b : 68                       pla         ;load status
                                eor_flag 0
197c : 4930            >            eor #0|fao         ;invert expected flags 
                        
197e : cd0f02                   cmp fLDx+2  ;test flags
                                trap_ne
1981 : d0fe            >        bne *           ;failed not equal (non zero)
                        
                                set_stat 0
                       >            load_flag 0
1983 : a900            >            lda #0             ;allow test to change I
                       >
1985 : 48              >            pha         ;use stack to load status
1986 : 28              >            plp
                        
1987 : a900                     lda #0
1989 : 08                       php
198a : cd0b02                   cmp abs1+3  ;test result
                                trap_ne
198d : d0fe            >        bne *           ;failed not equal (non zero)
                        
198f : 68                       pla         ;load status
                                eor_flag 0
1990 : 4930            >            eor #0|fao         ;invert expected flags 
                        
1992 : cd1002                   cmp fLDx+3  ;test flags
                                trap_ne
1995 : d0fe            >        bne *           ;failed not equal (non zero)
                        
                        
                                set_stat $ff
                       >            load_flag $ff
1997 : a9ff            >            lda #$ff             ;allow test to change
                       >
1999 : 48              >            pha         ;use stack to load status
199a : 28              >            plp
                        
199b : a9c3                     lda #$c3  
199d : 08                       php
199e : cd0802                   cmp abs1    ;test result
                                trap_ne
19a1 : d0fe            >        bne *           ;failed not equal (non zero)
                        
19a3 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
19a4 : 497d            >            eor #lo~fnz |fao         ;invert expected 
                        
19a6 : cd0d02                   cmp fLDx    ;test flags
                                trap_ne
19a9 : d0fe            >        bne *           ;failed not equal (non zero)
                        
                                set_stat $ff
                       >            load_flag $ff
19ab : a9ff            >            lda #$ff             ;allow test to change
                       >
19ad : 48              >            pha         ;use stack to load status
19ae : 28              >            plp
                        
19af : a982                     lda #$82
19b1 : 08                       php
19b2 : cd0902                   cmp abs1+1  ;test result
                                trap_ne
19b5 : d0fe            >        bne *           ;failed not equal (non zero)
                        
19b7 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
19b8 : 497d            >            eor #lo~fnz |fao         ;invert expected 
                        
19ba : cd0e02                   cmp fLDx+1  ;test flags
                                trap_ne
19bd : d0fe            >        bne *           ;failed not equal (non zero)
                        
                                set_stat $ff
                       >            load_flag $ff
19bf : a9ff            >            lda #$ff             ;allow test to change
                       >
19c1 : 48              >            pha         ;use stack to load status
19c2 : 28              >            plp
                        
19c3 : a941                     lda #$41
19c5 : 08                       php
19c6 : cd0a02                   cmp abs1+2  ;test result
                                trap_ne
19c9 : d0fe            >        bne *           ;failed not equal (non zero)
                        
19cb : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
19cc : 497d            >            eor #lo~fnz |fao         ;invert expected 
                        
19ce : cd0f02                   cmp fLDx+2  ;test flags
                                trap_ne
19d1 : d0fe            >        bne *           ;failed not equal (non zero)
                        
                                set_stat $ff
                       >            load_flag $ff
19d3 : a9ff            >            lda #$ff             ;allow test to change
                       >
19d5 : 48              >            pha         ;use stack to load status
19d6 : 28              >            plp
                        
19d7 : a900                     lda #0
19d9 : 08                       php
19da : cd0b02                   cmp abs1+3  ;test result
                                trap_ne
19dd : d0fe            >        bne *           ;failed not equal (non zero)
                        
19df : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
19e0 : 497d            >            eor #lo~fnz |fao         ;invert expected 
                        
19e2 : cd1002                   cmp fLDx+3  ;test flags
                                trap_ne
19e5 : d0fe            >        bne *           ;failed not equal (non zero)
                        
                        
19e7 : a200                     ldx #0
19e9 : a50c                     lda zpt  
19eb : 49c3                     eor #$c3
19ed : c513                     cmp zp1  
                                trap_ne     ;store to zp data
19ef : d0fe            >        bne *           ;failed not equal (non zero)
                        
19f1 : 860c                     stx zpt     ;clear                
19f3 : ad0302                   lda abst  
19f6 : 49c3                     eor #$c3
19f8 : cd0802                   cmp abs1  
                                trap_ne     ;store to abs data
19fb : d0fe            >        bne *           ;failed not equal (non zero)
                        
19fd : 8e0302                   stx abst    ;clear                
1a00 : a50d                     lda zpt+1
1a02 : 49c3                     eor #$c3
1a04 : c514                     cmp zp1+1
                                trap_ne     ;store to zp data
1a06 : d0fe            >        bne *           ;failed not equal (non zero)
                        
1a08 : 860d                     stx zpt+1   ;clear                
1a0a : ad0402                   lda abst+1
1a0d : 49c3                     eor #$c3
1a0f : cd0902                   cmp abs1+1
                                trap_ne     ;store to abs data
1a12 : d0fe            >        bne *           ;failed not equal (non zero)
                        
1a14 : 8e0402                   stx abst+1  ;clear                
1a17 : a50e                     lda zpt+2
1a19 : 49c3                     eor #$c3
1a1b : c515                     cmp zp1+2
                                trap_ne     ;store to zp data
1a1d : d0fe            >        bne *           ;failed not equal (non zero)
                        
1a1f : 860e                     stx zpt+2   ;clear                
1a21 : ad0502                   lda abst+2
1a24 : 49c3                     eor #$c3
1a26 : cd0a02                   cmp abs1+2
                                trap_ne     ;store to abs data
1a29 : d0fe            >        bne *           ;failed not equal (non zero)
                        
1a2b : 8e0502                   stx abst+2  ;clear                
1a2e : a50f                     lda zpt+3
1a30 : 49c3                     eor #$c3
1a32 : c516                     cmp zp1+3
                                trap_ne     ;store to zp data
1a34 : d0fe            >        bne *           ;failed not equal (non zero)
                        
1a36 : 860f                     stx zpt+3   ;clear                
1a38 : ad0602                   lda abst+3
1a3b : 49c3                     eor #$c3
1a3d : cd0b02                   cmp abs1+3
                                trap_ne     ;store to abs data
1a40 : d0fe            >        bne *           ;failed not equal (non zero)
                        
1a42 : 8e0602                   stx abst+3  ;clear                
                                next_test
1a45 : ad0002          >            lda test_case   ;previous test
1a48 : c918            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
1a4a : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0019 =                 >test_num = test_num + 1
1a4c : a919            >            lda #test_num   ;*** this tests' number
1a4e : 8d0002          >            sta test_case
                       >            ;check_ram       ;uncomment to find altere
                        
                        
                        ; testing bit test & compares BIT CPX CPY CMP all addr
                        ; BIT - zp / abs
                                set_a $ff,0
                       >            load_flag 0
1a51 : a900            >            lda #0             ;allow test to change I
                       >
1a53 : 48              >            pha         ;use stack to load status
1a54 : a9ff            >            lda #$ff     ;precharge accu
1a56 : 28              >            plp
                        
1a57 : 2416                     bit zp1+3   ;00 - should set Z / clear  NV
                                tst_a $ff,fz 
1a59 : 08              >            php         ;save flags
1a5a : 08              >            php
1a5b : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
1a5d : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1a5f : 68              >            pla         ;load status
                       >            cmp_flag fz 
1a60 : c932            >            cmp #(fz |fao)&m8    ;expected flags + alw
                       >
                       >            trap_ne
1a62 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1a64 : 28              >            plp         ;restore status
                        
                                set_a 1,0
                       >            load_flag 0
1a65 : a900            >            lda #0             ;allow test to change I
                       >
1a67 : 48              >            pha         ;use stack to load status
1a68 : a901            >            lda #1     ;precharge accu
1a6a : 28              >            plp
                        
1a6b : 2415                     bit zp1+2   ;41 - should set V (M6) / clear NZ
                                tst_a 1,fv
1a6d : 08              >            php         ;save flags
1a6e : 08              >            php
1a6f : c901            >            cmp #1     ;test result
                       >            trap_ne
1a71 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1a73 : 68              >            pla         ;load status
                       >            cmp_flag fv
1a74 : c970            >            cmp #(fv|fao)&m8    ;expected flags + alwa
                       >
                       >            trap_ne
1a76 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1a78 : 28              >            plp         ;restore status
                        
                                set_a 1,0
                       >            load_flag 0
1a79 : a900            >            lda #0             ;allow test to change I
                       >
1a7b : 48              >            pha         ;use stack to load status
1a7c : a901            >            lda #1     ;precharge accu
1a7e : 28              >            plp
                        
1a7f : 2414                     bit zp1+1   ;82 - should set N (M7) & Z / clea
                                tst_a 1,fnz
1a81 : 08              >            php         ;save flags
1a82 : 08              >            php
1a83 : c901            >            cmp #1     ;test result
                       >            trap_ne
1a85 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1a87 : 68              >            pla         ;load status
                       >            cmp_flag fnz
1a88 : c9b2            >            cmp #(fnz|fao)&m8    ;expected flags + alw
                       >
                       >            trap_ne
1a8a : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1a8c : 28              >            plp         ;restore status
                        
                                set_a 1,0
                       >            load_flag 0
1a8d : a900            >            lda #0             ;allow test to change I
                       >
1a8f : 48              >            pha         ;use stack to load status
1a90 : a901            >            lda #1     ;precharge accu
1a92 : 28              >            plp
                        
1a93 : 2413                     bit zp1     ;c3 - should set N (M7) & V (M6) /
                                tst_a 1,fnv
1a95 : 08              >            php         ;save flags
1a96 : 08              >            php
1a97 : c901            >            cmp #1     ;test result
                       >            trap_ne
1a99 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1a9b : 68              >            pla         ;load status
                       >            cmp_flag fnv
1a9c : c9f0            >            cmp #(fnv|fao)&m8    ;expected flags + alw
                       >
                       >            trap_ne
1a9e : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1aa0 : 28              >            plp         ;restore status
                        
                                
                                set_a $ff,$ff
                       >            load_flag $ff
1aa1 : a9ff            >            lda #$ff             ;allow test to change
                       >
1aa3 : 48              >            pha         ;use stack to load status
1aa4 : a9ff            >            lda #$ff     ;precharge accu
1aa6 : 28              >            plp
                        
1aa7 : 2416                     bit zp1+3   ;00 - should set Z / clear  NV
                                tst_a $ff,~fnv 
1aa9 : 08              >            php         ;save flags
1aaa : 08              >            php
1aab : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
1aad : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1aaf : 68              >            pla         ;load status
                       >            cmp_flag ~fnv 
1ab0 : c93f            >            cmp #(~fnv |fao)&m8    ;expected flags + a
                       >
                       >            trap_ne
1ab2 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1ab4 : 28              >            plp         ;restore status
                        
                                set_a 1,$ff
                       >            load_flag $ff
1ab5 : a9ff            >            lda #$ff             ;allow test to change
                       >
1ab7 : 48              >            pha         ;use stack to load status
1ab8 : a901            >            lda #1     ;precharge accu
1aba : 28              >            plp
                        
1abb : 2415                     bit zp1+2   ;41 - should set V (M6) / clear NZ
                                tst_a 1,~fnz
1abd : 08              >            php         ;save flags
1abe : 08              >            php
1abf : c901            >            cmp #1     ;test result
                       >            trap_ne
1ac1 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1ac3 : 68              >            pla         ;load status
                       >            cmp_flag ~fnz
1ac4 : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + al
                       >
                       >            trap_ne
1ac6 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1ac8 : 28              >            plp         ;restore status
                        
                                set_a 1,$ff
                       >            load_flag $ff
1ac9 : a9ff            >            lda #$ff             ;allow test to change
                       >
1acb : 48              >            pha         ;use stack to load status
1acc : a901            >            lda #1     ;precharge accu
1ace : 28              >            plp
                        
1acf : 2414                     bit zp1+1   ;82 - should set N (M7) & Z / clea
                                tst_a 1,~fv
1ad1 : 08              >            php         ;save flags
1ad2 : 08              >            php
1ad3 : c901            >            cmp #1     ;test result
                       >            trap_ne
1ad5 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1ad7 : 68              >            pla         ;load status
                       >            cmp_flag ~fv
1ad8 : c9bf            >            cmp #(~fv|fao)&m8    ;expected flags + alw
                       >
                       >            trap_ne
1ada : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1adc : 28              >            plp         ;restore status
                        
                                set_a 1,$ff
                       >            load_flag $ff
1add : a9ff            >            lda #$ff             ;allow test to change
                       >
1adf : 48              >            pha         ;use stack to load status
1ae0 : a901            >            lda #1     ;precharge accu
1ae2 : 28              >            plp
                        
1ae3 : 2413                     bit zp1     ;c3 - should set N (M7) & V (M6) /
                                tst_a 1,~fz
1ae5 : 08              >            php         ;save flags
1ae6 : 08              >            php
1ae7 : c901            >            cmp #1     ;test result
                       >            trap_ne
1ae9 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1aeb : 68              >            pla         ;load status
                       >            cmp_flag ~fz
1aec : c9fd            >            cmp #(~fz|fao)&m8    ;expected flags + alw
                       >
                       >            trap_ne
1aee : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1af0 : 28              >            plp         ;restore status
                        
                                
                                set_a $ff,0
                       >            load_flag 0
1af1 : a900            >            lda #0             ;allow test to change I
                       >
1af3 : 48              >            pha         ;use stack to load status
1af4 : a9ff            >            lda #$ff     ;precharge accu
1af6 : 28              >            plp
                        
1af7 : 2c0b02                   bit abs1+3  ;00 - should set Z / clear  NV
                                tst_a $ff,fz 
1afa : 08              >            php         ;save flags
1afb : 08              >            php
1afc : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
1afe : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1b00 : 68              >            pla         ;load status
                       >            cmp_flag fz 
1b01 : c932            >            cmp #(fz |fao)&m8    ;expected flags + alw
                       >
                       >            trap_ne
1b03 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1b05 : 28              >            plp         ;restore status
                        
                                set_a 1,0
                       >            load_flag 0
1b06 : a900            >            lda #0             ;allow test to change I
                       >
1b08 : 48              >            pha         ;use stack to load status
1b09 : a901            >            lda #1     ;precharge accu
1b0b : 28              >            plp
                        
1b0c : 2c0a02                   bit abs1+2  ;41 - should set V (M6) / clear NZ
                                tst_a 1,fv
1b0f : 08              >            php         ;save flags
1b10 : 08              >            php
1b11 : c901            >            cmp #1     ;test result
                       >            trap_ne
1b13 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1b15 : 68              >            pla         ;load status
                       >            cmp_flag fv
1b16 : c970            >            cmp #(fv|fao)&m8    ;expected flags + alwa
                       >
                       >            trap_ne
1b18 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1b1a : 28              >            plp         ;restore status
                        
                                set_a 1,0
                       >            load_flag 0
1b1b : a900            >            lda #0             ;allow test to change I
                       >
1b1d : 48              >            pha         ;use stack to load status
1b1e : a901            >            lda #1     ;precharge accu
1b20 : 28              >            plp
                        
1b21 : 2c0902                   bit abs1+1  ;82 - should set N (M7) & Z / clea
                                tst_a 1,fnz
1b24 : 08              >            php         ;save flags
1b25 : 08              >            php
1b26 : c901            >            cmp #1     ;test result
                       >            trap_ne
1b28 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1b2a : 68              >            pla         ;load status
                       >            cmp_flag fnz
1b2b : c9b2            >            cmp #(fnz|fao)&m8    ;expected flags + alw
                       >
                       >            trap_ne
1b2d : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1b2f : 28              >            plp         ;restore status
                        
                                set_a 1,0
                       >            load_flag 0
1b30 : a900            >            lda #0             ;allow test to change I
                       >
1b32 : 48              >            pha         ;use stack to load status
1b33 : a901            >            lda #1     ;precharge accu
1b35 : 28              >            plp
                        
1b36 : 2c0802                   bit abs1    ;c3 - should set N (M7) & V (M6) /
                                tst_a 1,fnv
1b39 : 08              >            php         ;save flags
1b3a : 08              >            php
1b3b : c901            >            cmp #1     ;test result
                       >            trap_ne
1b3d : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1b3f : 68              >            pla         ;load status
                       >            cmp_flag fnv
1b40 : c9f0            >            cmp #(fnv|fao)&m8    ;expected flags + alw
                       >
                       >            trap_ne
1b42 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1b44 : 28              >            plp         ;restore status
                        
                                
                                set_a $ff,$ff
                       >            load_flag $ff
1b45 : a9ff            >            lda #$ff             ;allow test to change
                       >
1b47 : 48              >            pha         ;use stack to load status
1b48 : a9ff            >            lda #$ff     ;precharge accu
1b4a : 28              >            plp
                        
1b4b : 2c0b02                   bit abs1+3  ;00 - should set Z / clear  NV
                                tst_a $ff,~fnv 
1b4e : 08              >            php         ;save flags
1b4f : 08              >            php
1b50 : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
1b52 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1b54 : 68              >            pla         ;load status
                       >            cmp_flag ~fnv 
1b55 : c93f            >            cmp #(~fnv |fao)&m8    ;expected flags + a
                       >
                       >            trap_ne
1b57 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1b59 : 28              >            plp         ;restore status
                        
                                set_a 1,$ff
                       >            load_flag $ff
1b5a : a9ff            >            lda #$ff             ;allow test to change
                       >
1b5c : 48              >            pha         ;use stack to load status
1b5d : a901            >            lda #1     ;precharge accu
1b5f : 28              >            plp
                        
1b60 : 2c0a02                   bit abs1+2  ;41 - should set V (M6) / clear NZ
                                tst_a 1,~fnz
1b63 : 08              >            php         ;save flags
1b64 : 08              >            php
1b65 : c901            >            cmp #1     ;test result
                       >            trap_ne
1b67 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1b69 : 68              >            pla         ;load status
                       >            cmp_flag ~fnz
1b6a : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + al
                       >
                       >            trap_ne
1b6c : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1b6e : 28              >            plp         ;restore status
                        
                                set_a 1,$ff
                       >            load_flag $ff
1b6f : a9ff            >            lda #$ff             ;allow test to change
                       >
1b71 : 48              >            pha         ;use stack to load status
1b72 : a901            >            lda #1     ;precharge accu
1b74 : 28              >            plp
                        
1b75 : 2c0902                   bit abs1+1  ;82 - should set N (M7) & Z / clea
                                tst_a 1,~fv
1b78 : 08              >            php         ;save flags
1b79 : 08              >            php
1b7a : c901            >            cmp #1     ;test result
                       >            trap_ne
1b7c : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1b7e : 68              >            pla         ;load status
                       >            cmp_flag ~fv
1b7f : c9bf            >            cmp #(~fv|fao)&m8    ;expected flags + alw
                       >
                       >            trap_ne
1b81 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1b83 : 28              >            plp         ;restore status
                        
                                set_a 1,$ff
                       >            load_flag $ff
1b84 : a9ff            >            lda #$ff             ;allow test to change
                       >
1b86 : 48              >            pha         ;use stack to load status
1b87 : a901            >            lda #1     ;precharge accu
1b89 : 28              >            plp
                        
1b8a : 2c0802                   bit abs1    ;c3 - should set N (M7) & V (M6) /
                                tst_a 1,~fz
1b8d : 08              >            php         ;save flags
1b8e : 08              >            php
1b8f : c901            >            cmp #1     ;test result
                       >            trap_ne
1b91 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1b93 : 68              >            pla         ;load status
                       >            cmp_flag ~fz
1b94 : c9fd            >            cmp #(~fz|fao)&m8    ;expected flags + alw
                       >
                       >            trap_ne
1b96 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1b98 : 28              >            plp         ;restore status
                        
                                next_test
1b99 : ad0002          >            lda test_case   ;previous test
1b9c : c919            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
1b9e : d0fe            >        bne *           ;failed not equal (non zero)
                       >
001a =                 >test_num = test_num + 1
1ba0 : a91a            >            lda #test_num   ;*** this tests' number
1ba2 : 8d0002          >            sta test_case
                       >            ;check_ram       ;uncomment to find altere
                        
                                
                        ; CPX - zp / abs / #         
                                set_x $80,0
                       >            load_flag 0
1ba5 : a900            >            lda #0             ;allow test to change I
                       >
1ba7 : 48              >            pha         ;use stack to load status
1ba8 : a280            >            ldx #$80     ;precharge index x
1baa : 28              >            plp
                        
1bab : e417                     cpx zp7f
                                tst_stat fc
1bad : 08              >            php         ;save status
1bae : 08              >            php         ;use stack to retrieve status
1baf : 68              >            pla
                       >            cmp_flag fc
1bb0 : c931            >            cmp #(fc|fao)&m8    ;expected flags + alwa
                       >
                       >            trap_ne
1bb2 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1bb4 : 28              >            plp         ;restore status
                        
1bb5 : ca                       dex
1bb6 : e417                     cpx zp7f
                                tst_stat fzc
1bb8 : 08              >            php         ;save status
1bb9 : 08              >            php         ;use stack to retrieve status
1bba : 68              >            pla
                       >            cmp_flag fzc
1bbb : c933            >            cmp #(fzc|fao)&m8    ;expected flags + alw
                       >
                       >            trap_ne
1bbd : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1bbf : 28              >            plp         ;restore status
                        
1bc0 : ca                       dex
1bc1 : e417                     cpx zp7f
                                tst_x $7e,fn
1bc3 : 08              >            php         ;save flags
1bc4 : 08              >            php
1bc5 : e07e            >            cpx #$7e     ;test result
                       >            trap_ne
1bc7 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1bc9 : 68              >            pla         ;load status
                       >            cmp_flag fn
1bca : c9b0            >            cmp #(fn|fao)&m8    ;expected flags + alwa
                       >
                       >            trap_ne
1bcc : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1bce : 28              >            plp         ;restore status
                        
                                set_x $80,$ff
                       >            load_flag $ff
1bcf : a9ff            >            lda #$ff             ;allow test to change
                       >
1bd1 : 48              >            pha         ;use stack to load status
1bd2 : a280            >            ldx #$80     ;precharge index x
1bd4 : 28              >            plp
                        
1bd5 : e417                     cpx zp7f
                                tst_stat ~fnz
1bd7 : 08              >            php         ;save status
1bd8 : 08              >            php         ;use stack to retrieve status
1bd9 : 68              >            pla
                       >            cmp_flag ~fnz
1bda : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + al
                       >
                       >            trap_ne
1bdc : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1bde : 28              >            plp         ;restore status
                        
1bdf : ca                       dex
1be0 : e417                     cpx zp7f
                                tst_stat ~fn
1be2 : 08              >            php         ;save status
1be3 : 08              >            php         ;use stack to retrieve status
1be4 : 68              >            pla
                       >            cmp_flag ~fn
1be5 : c97f            >            cmp #(~fn|fao)&m8    ;expected flags + alw
                       >
                       >            trap_ne
1be7 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1be9 : 28              >            plp         ;restore status
                        
1bea : ca                       dex
1beb : e417                     cpx zp7f
                                tst_x $7e,~fzc
1bed : 08              >            php         ;save flags
1bee : 08              >            php
1bef : e07e            >            cpx #$7e     ;test result
                       >            trap_ne
1bf1 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1bf3 : 68              >            pla         ;load status
                       >            cmp_flag ~fzc
1bf4 : c9fc            >            cmp #(~fzc|fao)&m8    ;expected flags + al
                       >
                       >            trap_ne
1bf6 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1bf8 : 28              >            plp         ;restore status
                        
                        
                                set_x $80,0
                       >            load_flag 0
1bf9 : a900            >            lda #0             ;allow test to change I
                       >
1bfb : 48              >            pha         ;use stack to load status
1bfc : a280            >            ldx #$80     ;precharge index x
1bfe : 28              >            plp
                        
1bff : ec0c02                   cpx abs7f
                                tst_stat fc
1c02 : 08              >            php         ;save status
1c03 : 08              >            php         ;use stack to retrieve status
1c04 : 68              >            pla
                       >            cmp_flag fc
1c05 : c931            >            cmp #(fc|fao)&m8    ;expected flags + alwa
                       >
                       >            trap_ne
1c07 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1c09 : 28              >            plp         ;restore status
                        
1c0a : ca                       dex
1c0b : ec0c02                   cpx abs7f
                                tst_stat fzc
1c0e : 08              >            php         ;save status
1c0f : 08              >            php         ;use stack to retrieve status
1c10 : 68              >            pla
                       >            cmp_flag fzc
1c11 : c933            >            cmp #(fzc|fao)&m8    ;expected flags + alw
                       >
                       >            trap_ne
1c13 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1c15 : 28              >            plp         ;restore status
                        
1c16 : ca                       dex
1c17 : ec0c02                   cpx abs7f
                                tst_x $7e,fn
1c1a : 08              >            php         ;save flags
1c1b : 08              >            php
1c1c : e07e            >            cpx #$7e     ;test result
                       >            trap_ne
1c1e : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1c20 : 68              >            pla         ;load status
                       >            cmp_flag fn
1c21 : c9b0            >            cmp #(fn|fao)&m8    ;expected flags + alwa
                       >
                       >            trap_ne
1c23 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1c25 : 28              >            plp         ;restore status
                        
                                set_x $80,$ff
                       >            load_flag $ff
1c26 : a9ff            >            lda #$ff             ;allow test to change
                       >
1c28 : 48              >            pha         ;use stack to load status
1c29 : a280            >            ldx #$80     ;precharge index x
1c2b : 28              >            plp
                        
1c2c : ec0c02                   cpx abs7f
                                tst_stat ~fnz
1c2f : 08              >            php         ;save status
1c30 : 08              >            php         ;use stack to retrieve status
1c31 : 68              >            pla
                       >            cmp_flag ~fnz
1c32 : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + al
                       >
                       >            trap_ne
1c34 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1c36 : 28              >            plp         ;restore status
                        
1c37 : ca                       dex
1c38 : ec0c02                   cpx abs7f
                                tst_stat ~fn
1c3b : 08              >            php         ;save status
1c3c : 08              >            php         ;use stack to retrieve status
1c3d : 68              >            pla
                       >            cmp_flag ~fn
1c3e : c97f            >            cmp #(~fn|fao)&m8    ;expected flags + alw
                       >
                       >            trap_ne
1c40 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1c42 : 28              >            plp         ;restore status
                        
1c43 : ca                       dex
1c44 : ec0c02                   cpx abs7f
                                tst_x $7e,~fzc
1c47 : 08              >            php         ;save flags
1c48 : 08              >            php
1c49 : e07e            >            cpx #$7e     ;test result
                       >            trap_ne
1c4b : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1c4d : 68              >            pla         ;load status
                       >            cmp_flag ~fzc
1c4e : c9fc            >            cmp #(~fzc|fao)&m8    ;expected flags + al
                       >
                       >            trap_ne
1c50 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1c52 : 28              >            plp         ;restore status
                        
                        
                                set_x $80,0
                       >            load_flag 0
1c53 : a900            >            lda #0             ;allow test to change I
                       >
1c55 : 48              >            pha         ;use stack to load status
1c56 : a280            >            ldx #$80     ;precharge index x
1c58 : 28              >            plp
                        
1c59 : e07f                     cpx #$7f
                                tst_stat fc
1c5b : 08              >            php         ;save status
1c5c : 08              >            php         ;use stack to retrieve status
1c5d : 68              >            pla
                       >            cmp_flag fc
1c5e : c931            >            cmp #(fc|fao)&m8    ;expected flags + alwa
                       >
                       >            trap_ne
1c60 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1c62 : 28              >            plp         ;restore status
                        
1c63 : ca                       dex
1c64 : e07f                     cpx #$7f
                                tst_stat fzc
1c66 : 08              >            php         ;save status
1c67 : 08              >            php         ;use stack to retrieve status
1c68 : 68              >            pla
                       >            cmp_flag fzc
1c69 : c933            >            cmp #(fzc|fao)&m8    ;expected flags + alw
                       >
                       >            trap_ne
1c6b : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1c6d : 28              >            plp         ;restore status
                        
1c6e : ca                       dex
1c6f : e07f                     cpx #$7f
                                tst_x $7e,fn
1c71 : 08              >            php         ;save flags
1c72 : 08              >            php
1c73 : e07e            >            cpx #$7e     ;test result
                       >            trap_ne
1c75 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1c77 : 68              >            pla         ;load status
                       >            cmp_flag fn
1c78 : c9b0            >            cmp #(fn|fao)&m8    ;expected flags + alwa
                       >
                       >            trap_ne
1c7a : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1c7c : 28              >            plp         ;restore status
                        
                                set_x $80,$ff
                       >            load_flag $ff
1c7d : a9ff            >            lda #$ff             ;allow test to change
                       >
1c7f : 48              >            pha         ;use stack to load status
1c80 : a280            >            ldx #$80     ;precharge index x
1c82 : 28              >            plp
                        
1c83 : e07f                     cpx #$7f
                                tst_stat ~fnz
1c85 : 08              >            php         ;save status
1c86 : 08              >            php         ;use stack to retrieve status
1c87 : 68              >            pla
                       >            cmp_flag ~fnz
1c88 : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + al
                       >
                       >            trap_ne
1c8a : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1c8c : 28              >            plp         ;restore status
                        
1c8d : ca                       dex
1c8e : e07f                     cpx #$7f
                                tst_stat ~fn
1c90 : 08              >            php         ;save status
1c91 : 08              >            php         ;use stack to retrieve status
1c92 : 68              >            pla
                       >            cmp_flag ~fn
1c93 : c97f            >            cmp #(~fn|fao)&m8    ;expected flags + alw
                       >
                       >            trap_ne
1c95 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1c97 : 28              >            plp         ;restore status
                        
1c98 : ca                       dex
1c99 : e07f                     cpx #$7f
                                tst_x $7e,~fzc
1c9b : 08              >            php         ;save flags
1c9c : 08              >            php
1c9d : e07e            >            cpx #$7e     ;test result
                       >            trap_ne
1c9f : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1ca1 : 68              >            pla         ;load status
                       >            cmp_flag ~fzc
1ca2 : c9fc            >            cmp #(~fzc|fao)&m8    ;expected flags + al
                       >
                       >            trap_ne
1ca4 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1ca6 : 28              >            plp         ;restore status
                        
                                next_test
1ca7 : ad0002          >            lda test_case   ;previous test
1caa : c91a            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
1cac : d0fe            >        bne *           ;failed not equal (non zero)
                       >
001b =                 >test_num = test_num + 1
1cae : a91b            >            lda #test_num   ;*** this tests' number
1cb0 : 8d0002          >            sta test_case
                       >            ;check_ram       ;uncomment to find altere
                        
                        
                        ; CPY - zp / abs / #         
                                set_y $80,0
                       >            load_flag 0
1cb3 : a900            >            lda #0             ;allow test to change I
                       >
1cb5 : 48              >            pha         ;use stack to load status
1cb6 : a080            >            ldy #$80     ;precharge index y
1cb8 : 28              >            plp
                        
1cb9 : c417                     cpy zp7f
                                tst_stat fc
1cbb : 08              >            php         ;save status
1cbc : 08              >            php         ;use stack to retrieve status
1cbd : 68              >            pla
                       >            cmp_flag fc
1cbe : c931            >            cmp #(fc|fao)&m8    ;expected flags + alwa
                       >
                       >            trap_ne
1cc0 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1cc2 : 28              >            plp         ;restore status
                        
1cc3 : 88                       dey
1cc4 : c417                     cpy zp7f
                                tst_stat fzc
1cc6 : 08              >            php         ;save status
1cc7 : 08              >            php         ;use stack to retrieve status
1cc8 : 68              >            pla
                       >            cmp_flag fzc
1cc9 : c933            >            cmp #(fzc|fao)&m8    ;expected flags + alw
                       >
                       >            trap_ne
1ccb : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1ccd : 28              >            plp         ;restore status
                        
1cce : 88                       dey
1ccf : c417                     cpy zp7f
                                tst_y $7e,fn
1cd1 : 08              >            php         ;save flags
1cd2 : 08              >            php
1cd3 : c07e            >            cpy #$7e     ;test result
                       >            trap_ne
1cd5 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1cd7 : 68              >            pla         ;load status
                       >            cmp_flag fn
1cd8 : c9b0            >            cmp #(fn|fao)&m8    ;expected flags + alwa
                       >
                       >            trap_ne
1cda : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1cdc : 28              >            plp         ;restore status
                        
                                set_y $80,$ff
                       >            load_flag $ff
1cdd : a9ff            >            lda #$ff             ;allow test to change
                       >
1cdf : 48              >            pha         ;use stack to load status
1ce0 : a080            >            ldy #$80     ;precharge index y
1ce2 : 28              >            plp
                        
1ce3 : c417                     cpy zp7f
                                tst_stat ~fnz
1ce5 : 08              >            php         ;save status
1ce6 : 08              >            php         ;use stack to retrieve status
1ce7 : 68              >            pla
                       >            cmp_flag ~fnz
1ce8 : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + al
                       >
                       >            trap_ne
1cea : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1cec : 28              >            plp         ;restore status
                        
1ced : 88                       dey
1cee : c417                     cpy zp7f
                                tst_stat ~fn
1cf0 : 08              >            php         ;save status
1cf1 : 08              >            php         ;use stack to retrieve status
1cf2 : 68              >            pla
                       >            cmp_flag ~fn
1cf3 : c97f            >            cmp #(~fn|fao)&m8    ;expected flags + alw
                       >
                       >            trap_ne
1cf5 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1cf7 : 28              >            plp         ;restore status
                        
1cf8 : 88                       dey
1cf9 : c417                     cpy zp7f
                                tst_y $7e,~fzc
1cfb : 08              >            php         ;save flags
1cfc : 08              >            php
1cfd : c07e            >            cpy #$7e     ;test result
                       >            trap_ne
1cff : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1d01 : 68              >            pla         ;load status
                       >            cmp_flag ~fzc
1d02 : c9fc            >            cmp #(~fzc|fao)&m8    ;expected flags + al
                       >
                       >            trap_ne
1d04 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1d06 : 28              >            plp         ;restore status
                        
                        
                                set_y $80,0
                       >            load_flag 0
1d07 : a900            >            lda #0             ;allow test to change I
                       >
1d09 : 48              >            pha         ;use stack to load status
1d0a : a080            >            ldy #$80     ;precharge index y
1d0c : 28              >            plp
                        
1d0d : cc0c02                   cpy abs7f
                                tst_stat fc
1d10 : 08              >            php         ;save status
1d11 : 08              >            php         ;use stack to retrieve status
1d12 : 68              >            pla
                       >            cmp_flag fc
1d13 : c931            >            cmp #(fc|fao)&m8    ;expected flags + alwa
                       >
                       >            trap_ne
1d15 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1d17 : 28              >            plp         ;restore status
                        
1d18 : 88                       dey
1d19 : cc0c02                   cpy abs7f
                                tst_stat fzc
1d1c : 08              >            php         ;save status
1d1d : 08              >            php         ;use stack to retrieve status
1d1e : 68              >            pla
                       >            cmp_flag fzc
1d1f : c933            >            cmp #(fzc|fao)&m8    ;expected flags + alw
                       >
                       >            trap_ne
1d21 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1d23 : 28              >            plp         ;restore status
                        
1d24 : 88                       dey
1d25 : cc0c02                   cpy abs7f
                                tst_y $7e,fn
1d28 : 08              >            php         ;save flags
1d29 : 08              >            php
1d2a : c07e            >            cpy #$7e     ;test result
                       >            trap_ne
1d2c : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1d2e : 68              >            pla         ;load status
                       >            cmp_flag fn
1d2f : c9b0            >            cmp #(fn|fao)&m8    ;expected flags + alwa
                       >
                       >            trap_ne
1d31 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1d33 : 28              >            plp         ;restore status
                        
                                set_y $80,$ff
                       >            load_flag $ff
1d34 : a9ff            >            lda #$ff             ;allow test to change
                       >
1d36 : 48              >            pha         ;use stack to load status
1d37 : a080            >            ldy #$80     ;precharge index y
1d39 : 28              >            plp
                        
1d3a : cc0c02                   cpy abs7f
                                tst_stat ~fnz
1d3d : 08              >            php         ;save status
1d3e : 08              >            php         ;use stack to retrieve status
1d3f : 68              >            pla
                       >            cmp_flag ~fnz
1d40 : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + al
                       >
                       >            trap_ne
1d42 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1d44 : 28              >            plp         ;restore status
                        
1d45 : 88                       dey
1d46 : cc0c02                   cpy abs7f
                                tst_stat ~fn
1d49 : 08              >            php         ;save status
1d4a : 08              >            php         ;use stack to retrieve status
1d4b : 68              >            pla
                       >            cmp_flag ~fn
1d4c : c97f            >            cmp #(~fn|fao)&m8    ;expected flags + alw
                       >
                       >            trap_ne
1d4e : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1d50 : 28              >            plp         ;restore status
                        
1d51 : 88                       dey
1d52 : cc0c02                   cpy abs7f
                                tst_y $7e,~fzc
1d55 : 08              >            php         ;save flags
1d56 : 08              >            php
1d57 : c07e            >            cpy #$7e     ;test result
                       >            trap_ne
1d59 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1d5b : 68              >            pla         ;load status
                       >            cmp_flag ~fzc
1d5c : c9fc            >            cmp #(~fzc|fao)&m8    ;expected flags + al
                       >
                       >            trap_ne
1d5e : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1d60 : 28              >            plp         ;restore status
                        
                        
                                set_y $80,0
                       >            load_flag 0
1d61 : a900            >            lda #0             ;allow test to change I
                       >
1d63 : 48              >            pha         ;use stack to load status
1d64 : a080            >            ldy #$80     ;precharge index y
1d66 : 28              >            plp
                        
1d67 : c07f                     cpy #$7f
                                tst_stat fc
1d69 : 08              >            php         ;save status
1d6a : 08              >            php         ;use stack to retrieve status
1d6b : 68              >            pla
                       >            cmp_flag fc
1d6c : c931            >            cmp #(fc|fao)&m8    ;expected flags + alwa
                       >
                       >            trap_ne
1d6e : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1d70 : 28              >            plp         ;restore status
                        
1d71 : 88                       dey
1d72 : c07f                     cpy #$7f
                                tst_stat fzc
1d74 : 08              >            php         ;save status
1d75 : 08              >            php         ;use stack to retrieve status
1d76 : 68              >            pla
                       >            cmp_flag fzc
1d77 : c933            >            cmp #(fzc|fao)&m8    ;expected flags + alw
                       >
                       >            trap_ne
1d79 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1d7b : 28              >            plp         ;restore status
                        
1d7c : 88                       dey
1d7d : c07f                     cpy #$7f
                                tst_y $7e,fn
1d7f : 08              >            php         ;save flags
1d80 : 08              >            php
1d81 : c07e            >            cpy #$7e     ;test result
                       >            trap_ne
1d83 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1d85 : 68              >            pla         ;load status
                       >            cmp_flag fn
1d86 : c9b0            >            cmp #(fn|fao)&m8    ;expected flags + alwa
                       >
                       >            trap_ne
1d88 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1d8a : 28              >            plp         ;restore status
                        
                                set_y $80,$ff
                       >            load_flag $ff
1d8b : a9ff            >            lda #$ff             ;allow test to change
                       >
1d8d : 48              >            pha         ;use stack to load status
1d8e : a080            >            ldy #$80     ;precharge index y
1d90 : 28              >            plp
                        
1d91 : c07f                     cpy #$7f
                                tst_stat ~fnz
1d93 : 08              >            php         ;save status
1d94 : 08              >            php         ;use stack to retrieve status
1d95 : 68              >            pla
                       >            cmp_flag ~fnz
1d96 : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + al
                       >
                       >            trap_ne
1d98 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1d9a : 28              >            plp         ;restore status
                        
1d9b : 88                       dey
1d9c : c07f                     cpy #$7f
                                tst_stat ~fn
1d9e : 08              >            php         ;save status
1d9f : 08              >            php         ;use stack to retrieve status
1da0 : 68              >            pla
                       >            cmp_flag ~fn
1da1 : c97f            >            cmp #(~fn|fao)&m8    ;expected flags + alw
                       >
                       >            trap_ne
1da3 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1da5 : 28              >            plp         ;restore status
                        
1da6 : 88                       dey
1da7 : c07f                     cpy #$7f
                                tst_y $7e,~fzc
1da9 : 08              >            php         ;save flags
1daa : 08              >            php
1dab : c07e            >            cpy #$7e     ;test result
                       >            trap_ne
1dad : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1daf : 68              >            pla         ;load status
                       >            cmp_flag ~fzc
1db0 : c9fc            >            cmp #(~fzc|fao)&m8    ;expected flags + al
                       >
                       >            trap_ne
1db2 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1db4 : 28              >            plp         ;restore status
                        
                                next_test
1db5 : ad0002          >            lda test_case   ;previous test
1db8 : c91b            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
1dba : d0fe            >        bne *           ;failed not equal (non zero)
                       >
001c =                 >test_num = test_num + 1
1dbc : a91c            >            lda #test_num   ;*** this tests' number
1dbe : 8d0002          >            sta test_case
                       >            ;check_ram       ;uncomment to find altere
                        
                        
                        ; CMP - zp / abs / #         
                                set_a $80,0
                       >            load_flag 0
1dc1 : a900            >            lda #0             ;allow test to change I
                       >
1dc3 : 48              >            pha         ;use stack to load status
1dc4 : a980            >            lda #$80     ;precharge accu
1dc6 : 28              >            plp
                        
1dc7 : c517                     cmp zp7f
                                tst_a $80,fc
1dc9 : 08              >            php         ;save flags
1dca : 08              >            php
1dcb : c980            >            cmp #$80     ;test result
                       >            trap_ne
1dcd : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1dcf : 68              >            pla         ;load status
                       >            cmp_flag fc
1dd0 : c931            >            cmp #(fc|fao)&m8    ;expected flags + alwa
                       >
                       >            trap_ne
1dd2 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1dd4 : 28              >            plp         ;restore status
                        
                                set_a $7f,0
                       >            load_flag 0
1dd5 : a900            >            lda #0             ;allow test to change I
                       >
1dd7 : 48              >            pha         ;use stack to load status
1dd8 : a97f            >            lda #$7f     ;precharge accu
1dda : 28              >            plp
                        
1ddb : c517                     cmp zp7f
                                tst_a $7f,fzc
1ddd : 08              >            php         ;save flags
1dde : 08              >            php
1ddf : c97f            >            cmp #$7f     ;test result
                       >            trap_ne
1de1 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1de3 : 68              >            pla         ;load status
                       >            cmp_flag fzc
1de4 : c933            >            cmp #(fzc|fao)&m8    ;expected flags + alw
                       >
                       >            trap_ne
1de6 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1de8 : 28              >            plp         ;restore status
                        
                                set_a $7e,0
                       >            load_flag 0
1de9 : a900            >            lda #0             ;allow test to change I
                       >
1deb : 48              >            pha         ;use stack to load status
1dec : a97e            >            lda #$7e     ;precharge accu
1dee : 28              >            plp
                        
1def : c517                     cmp zp7f
                                tst_a $7e,fn
1df1 : 08              >            php         ;save flags
1df2 : 08              >            php
1df3 : c97e            >            cmp #$7e     ;test result
                       >            trap_ne
1df5 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1df7 : 68              >            pla         ;load status
                       >            cmp_flag fn
1df8 : c9b0            >            cmp #(fn|fao)&m8    ;expected flags + alwa
                       >
                       >            trap_ne
1dfa : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1dfc : 28              >            plp         ;restore status
                        
                                set_a $80,$ff
                       >            load_flag $ff
1dfd : a9ff            >            lda #$ff             ;allow test to change
                       >
1dff : 48              >            pha         ;use stack to load status
1e00 : a980            >            lda #$80     ;precharge accu
1e02 : 28              >            plp
                        
1e03 : c517                     cmp zp7f
                                tst_a $80,~fnz
1e05 : 08              >            php         ;save flags
1e06 : 08              >            php
1e07 : c980            >            cmp #$80     ;test result
                       >            trap_ne
1e09 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1e0b : 68              >            pla         ;load status
                       >            cmp_flag ~fnz
1e0c : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + al
                       >
                       >            trap_ne
1e0e : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1e10 : 28              >            plp         ;restore status
                        
                                set_a $7f,$ff
                       >            load_flag $ff
1e11 : a9ff            >            lda #$ff             ;allow test to change
                       >
1e13 : 48              >            pha         ;use stack to load status
1e14 : a97f            >            lda #$7f     ;precharge accu
1e16 : 28              >            plp
                        
1e17 : c517                     cmp zp7f
                                tst_a $7f,~fn
1e19 : 08              >            php         ;save flags
1e1a : 08              >            php
1e1b : c97f            >            cmp #$7f     ;test result
                       >            trap_ne
1e1d : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1e1f : 68              >            pla         ;load status
                       >            cmp_flag ~fn
1e20 : c97f            >            cmp #(~fn|fao)&m8    ;expected flags + alw
                       >
                       >            trap_ne
1e22 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1e24 : 28              >            plp         ;restore status
                        
                                set_a $7e,$ff
                       >            load_flag $ff
1e25 : a9ff            >            lda #$ff             ;allow test to change
                       >
1e27 : 48              >            pha         ;use stack to load status
1e28 : a97e            >            lda #$7e     ;precharge accu
1e2a : 28              >            plp
                        
1e2b : c517                     cmp zp7f
                                tst_a $7e,~fzc
1e2d : 08              >            php         ;save flags
1e2e : 08              >            php
1e2f : c97e            >            cmp #$7e     ;test result
                       >            trap_ne
1e31 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1e33 : 68              >            pla         ;load status
                       >            cmp_flag ~fzc
1e34 : c9fc            >            cmp #(~fzc|fao)&m8    ;expected flags + al
                       >
                       >            trap_ne
1e36 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1e38 : 28              >            plp         ;restore status
                        
                        
                                set_a $80,0
                       >            load_flag 0
1e39 : a900            >            lda #0             ;allow test to change I
                       >
1e3b : 48              >            pha         ;use stack to load status
1e3c : a980            >            lda #$80     ;precharge accu
1e3e : 28              >            plp
                        
1e3f : cd0c02                   cmp abs7f
                                tst_a $80,fc
1e42 : 08              >            php         ;save flags
1e43 : 08              >            php
1e44 : c980            >            cmp #$80     ;test result
                       >            trap_ne
1e46 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1e48 : 68              >            pla         ;load status
                       >            cmp_flag fc
1e49 : c931            >            cmp #(fc|fao)&m8    ;expected flags + alwa
                       >
                       >            trap_ne
1e4b : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1e4d : 28              >            plp         ;restore status
                        
                                set_a $7f,0
                       >            load_flag 0
1e4e : a900            >            lda #0             ;allow test to change I
                       >
1e50 : 48              >            pha         ;use stack to load status
1e51 : a97f            >            lda #$7f     ;precharge accu
1e53 : 28              >            plp
                        
1e54 : cd0c02                   cmp abs7f
                                tst_a $7f,fzc
1e57 : 08              >            php         ;save flags
1e58 : 08              >            php
1e59 : c97f            >            cmp #$7f     ;test result
                       >            trap_ne
1e5b : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1e5d : 68              >            pla         ;load status
                       >            cmp_flag fzc
1e5e : c933            >            cmp #(fzc|fao)&m8    ;expected flags + alw
                       >
                       >            trap_ne
1e60 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1e62 : 28              >            plp         ;restore status
                        
                                set_a $7e,0
                       >            load_flag 0
1e63 : a900            >            lda #0             ;allow test to change I
                       >
1e65 : 48              >            pha         ;use stack to load status
1e66 : a97e            >            lda #$7e     ;precharge accu
1e68 : 28              >            plp
                        
1e69 : cd0c02                   cmp abs7f
                                tst_a $7e,fn
1e6c : 08              >            php         ;save flags
1e6d : 08              >            php
1e6e : c97e            >            cmp #$7e     ;test result
                       >            trap_ne
1e70 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1e72 : 68              >            pla         ;load status
                       >            cmp_flag fn
1e73 : c9b0            >            cmp #(fn|fao)&m8    ;expected flags + alwa
                       >
                       >            trap_ne
1e75 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1e77 : 28              >            plp         ;restore status
                        
                                set_a $80,$ff
                       >            load_flag $ff
1e78 : a9ff            >            lda #$ff             ;allow test to change
                       >
1e7a : 48              >            pha         ;use stack to load status
1e7b : a980            >            lda #$80     ;precharge accu
1e7d : 28              >            plp
                        
1e7e : cd0c02                   cmp abs7f
                                tst_a $80,~fnz
1e81 : 08              >            php         ;save flags
1e82 : 08              >            php
1e83 : c980            >            cmp #$80     ;test result
                       >            trap_ne
1e85 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1e87 : 68              >            pla         ;load status
                       >            cmp_flag ~fnz
1e88 : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + al
                       >
                       >            trap_ne
1e8a : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1e8c : 28              >            plp         ;restore status
                        
                                set_a $7f,$ff
                       >            load_flag $ff
1e8d : a9ff            >            lda #$ff             ;allow test to change
                       >
1e8f : 48              >            pha         ;use stack to load status
1e90 : a97f            >            lda #$7f     ;precharge accu
1e92 : 28              >            plp
                        
1e93 : cd0c02                   cmp abs7f
                                tst_a $7f,~fn
1e96 : 08              >            php         ;save flags
1e97 : 08              >            php
1e98 : c97f            >            cmp #$7f     ;test result
                       >            trap_ne
1e9a : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1e9c : 68              >            pla         ;load status
                       >            cmp_flag ~fn
1e9d : c97f            >            cmp #(~fn|fao)&m8    ;expected flags + alw
                       >
                       >            trap_ne
1e9f : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1ea1 : 28              >            plp         ;restore status
                        
                                set_a $7e,$ff
                       >            load_flag $ff
1ea2 : a9ff            >            lda #$ff             ;allow test to change
                       >
1ea4 : 48              >            pha         ;use stack to load status
1ea5 : a97e            >            lda #$7e     ;precharge accu
1ea7 : 28              >            plp
                        
1ea8 : cd0c02                   cmp abs7f
                                tst_a $7e,~fzc
1eab : 08              >            php         ;save flags
1eac : 08              >            php
1ead : c97e            >            cmp #$7e     ;test result
                       >            trap_ne
1eaf : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1eb1 : 68              >            pla         ;load status
                       >            cmp_flag ~fzc
1eb2 : c9fc            >            cmp #(~fzc|fao)&m8    ;expected flags + al
                       >
                       >            trap_ne
1eb4 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1eb6 : 28              >            plp         ;restore status
                        
                        
                                set_a $80,0
                       >            load_flag 0
1eb7 : a900            >            lda #0             ;allow test to change I
                       >
1eb9 : 48              >            pha         ;use stack to load status
1eba : a980            >            lda #$80     ;precharge accu
1ebc : 28              >            plp
                        
1ebd : c97f                     cmp #$7f
                                tst_a $80,fc
1ebf : 08              >            php         ;save flags
1ec0 : 08              >            php
1ec1 : c980            >            cmp #$80     ;test result
                       >            trap_ne
1ec3 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1ec5 : 68              >            pla         ;load status
                       >            cmp_flag fc
1ec6 : c931            >            cmp #(fc|fao)&m8    ;expected flags + alwa
                       >
                       >            trap_ne
1ec8 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1eca : 28              >            plp         ;restore status
                        
                                set_a $7f,0
                       >            load_flag 0
1ecb : a900            >            lda #0             ;allow test to change I
                       >
1ecd : 48              >            pha         ;use stack to load status
1ece : a97f            >            lda #$7f     ;precharge accu
1ed0 : 28              >            plp
                        
1ed1 : c97f                     cmp #$7f
                                tst_a $7f,fzc
1ed3 : 08              >            php         ;save flags
1ed4 : 08              >            php
1ed5 : c97f            >            cmp #$7f     ;test result
                       >            trap_ne
1ed7 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1ed9 : 68              >            pla         ;load status
                       >            cmp_flag fzc
1eda : c933            >            cmp #(fzc|fao)&m8    ;expected flags + alw
                       >
                       >            trap_ne
1edc : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1ede : 28              >            plp         ;restore status
                        
                                set_a $7e,0
                       >            load_flag 0
1edf : a900            >            lda #0             ;allow test to change I
                       >
1ee1 : 48              >            pha         ;use stack to load status
1ee2 : a97e            >            lda #$7e     ;precharge accu
1ee4 : 28              >            plp
                        
1ee5 : c97f                     cmp #$7f
                                tst_a $7e,fn
1ee7 : 08              >            php         ;save flags
1ee8 : 08              >            php
1ee9 : c97e            >            cmp #$7e     ;test result
                       >            trap_ne
1eeb : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1eed : 68              >            pla         ;load status
                       >            cmp_flag fn
1eee : c9b0            >            cmp #(fn|fao)&m8    ;expected flags + alwa
                       >
                       >            trap_ne
1ef0 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1ef2 : 28              >            plp         ;restore status
                        
                                set_a $80,$ff
                       >            load_flag $ff
1ef3 : a9ff            >            lda #$ff             ;allow test to change
                       >
1ef5 : 48              >            pha         ;use stack to load status
1ef6 : a980            >            lda #$80     ;precharge accu
1ef8 : 28              >            plp
                        
1ef9 : c97f                     cmp #$7f
                                tst_a $80,~fnz
1efb : 08              >            php         ;save flags
1efc : 08              >            php
1efd : c980            >            cmp #$80     ;test result
                       >            trap_ne
1eff : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1f01 : 68              >            pla         ;load status
                       >            cmp_flag ~fnz
1f02 : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + al
                       >
                       >            trap_ne
1f04 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1f06 : 28              >            plp         ;restore status
                        
                                set_a $7f,$ff
                       >            load_flag $ff
1f07 : a9ff            >            lda #$ff             ;allow test to change
                       >
1f09 : 48              >            pha         ;use stack to load status
1f0a : a97f            >            lda #$7f     ;precharge accu
1f0c : 28              >            plp
                        
1f0d : c97f                     cmp #$7f
                                tst_a $7f,~fn
1f0f : 08              >            php         ;save flags
1f10 : 08              >            php
1f11 : c97f            >            cmp #$7f     ;test result
                       >            trap_ne
1f13 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1f15 : 68              >            pla         ;load status
                       >            cmp_flag ~fn
1f16 : c97f            >            cmp #(~fn|fao)&m8    ;expected flags + alw
                       >
                       >            trap_ne
1f18 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1f1a : 28              >            plp         ;restore status
                        
                                set_a $7e,$ff
                       >            load_flag $ff
1f1b : a9ff            >            lda #$ff             ;allow test to change
                       >
1f1d : 48              >            pha         ;use stack to load status
1f1e : a97e            >            lda #$7e     ;precharge accu
1f20 : 28              >            plp
                        
1f21 : c97f                     cmp #$7f
                                tst_a $7e,~fzc
1f23 : 08              >            php         ;save flags
1f24 : 08              >            php
1f25 : c97e            >            cmp #$7e     ;test result
                       >            trap_ne
1f27 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1f29 : 68              >            pla         ;load status
                       >            cmp_flag ~fzc
1f2a : c9fc            >            cmp #(~fzc|fao)&m8    ;expected flags + al
                       >
                       >            trap_ne
1f2c : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1f2e : 28              >            plp         ;restore status
                        
                        
1f2f : a204                     ldx #4          ;with indexing by X
                                set_a $80,0
                       >            load_flag 0
1f31 : a900            >            lda #0             ;allow test to change I
                       >
1f33 : 48              >            pha         ;use stack to load status
1f34 : a980            >            lda #$80     ;precharge accu
1f36 : 28              >            plp
                        
1f37 : d513                     cmp zp1,x
                                tst_a $80,fc
1f39 : 08              >            php         ;save flags
1f3a : 08              >            php
1f3b : c980            >            cmp #$80     ;test result
                       >            trap_ne
1f3d : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1f3f : 68              >            pla         ;load status
                       >            cmp_flag fc
1f40 : c931            >            cmp #(fc|fao)&m8    ;expected flags + alwa
                       >
                       >            trap_ne
1f42 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1f44 : 28              >            plp         ;restore status
                        
                                set_a $7f,0
                       >            load_flag 0
1f45 : a900            >            lda #0             ;allow test to change I
                       >
1f47 : 48              >            pha         ;use stack to load status
1f48 : a97f            >            lda #$7f     ;precharge accu
1f4a : 28              >            plp
                        
1f4b : d513                     cmp zp1,x
                                tst_a $7f,fzc
1f4d : 08              >            php         ;save flags
1f4e : 08              >            php
1f4f : c97f            >            cmp #$7f     ;test result
                       >            trap_ne
1f51 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1f53 : 68              >            pla         ;load status
                       >            cmp_flag fzc
1f54 : c933            >            cmp #(fzc|fao)&m8    ;expected flags + alw
                       >
                       >            trap_ne
1f56 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1f58 : 28              >            plp         ;restore status
                        
                                set_a $7e,0
                       >            load_flag 0
1f59 : a900            >            lda #0             ;allow test to change I
                       >
1f5b : 48              >            pha         ;use stack to load status
1f5c : a97e            >            lda #$7e     ;precharge accu
1f5e : 28              >            plp
                        
1f5f : d513                     cmp zp1,x
                                tst_a $7e,fn
1f61 : 08              >            php         ;save flags
1f62 : 08              >            php
1f63 : c97e            >            cmp #$7e     ;test result
                       >            trap_ne
1f65 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1f67 : 68              >            pla         ;load status
                       >            cmp_flag fn
1f68 : c9b0            >            cmp #(fn|fao)&m8    ;expected flags + alwa
                       >
                       >            trap_ne
1f6a : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1f6c : 28              >            plp         ;restore status
                        
                                set_a $80,$ff
                       >            load_flag $ff
1f6d : a9ff            >            lda #$ff             ;allow test to change
                       >
1f6f : 48              >            pha         ;use stack to load status
1f70 : a980            >            lda #$80     ;precharge accu
1f72 : 28              >            plp
                        
1f73 : d513                     cmp zp1,x
                                tst_a $80,~fnz
1f75 : 08              >            php         ;save flags
1f76 : 08              >            php
1f77 : c980            >            cmp #$80     ;test result
                       >            trap_ne
1f79 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1f7b : 68              >            pla         ;load status
                       >            cmp_flag ~fnz
1f7c : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + al
                       >
                       >            trap_ne
1f7e : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1f80 : 28              >            plp         ;restore status
                        
                                set_a $7f,$ff
                       >            load_flag $ff
1f81 : a9ff            >            lda #$ff             ;allow test to change
                       >
1f83 : 48              >            pha         ;use stack to load status
1f84 : a97f            >            lda #$7f     ;precharge accu
1f86 : 28              >            plp
                        
1f87 : d513                     cmp zp1,x
                                tst_a $7f,~fn
1f89 : 08              >            php         ;save flags
1f8a : 08              >            php
1f8b : c97f            >            cmp #$7f     ;test result
                       >            trap_ne
1f8d : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1f8f : 68              >            pla         ;load status
                       >            cmp_flag ~fn
1f90 : c97f            >            cmp #(~fn|fao)&m8    ;expected flags + alw
                       >
                       >            trap_ne
1f92 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1f94 : 28              >            plp         ;restore status
                        
                                set_a $7e,$ff
                       >            load_flag $ff
1f95 : a9ff            >            lda #$ff             ;allow test to change
                       >
1f97 : 48              >            pha         ;use stack to load status
1f98 : a97e            >            lda #$7e     ;precharge accu
1f9a : 28              >            plp
                        
1f9b : d513                     cmp zp1,x
                                tst_a $7e,~fzc
1f9d : 08              >            php         ;save flags
1f9e : 08              >            php
1f9f : c97e            >            cmp #$7e     ;test result
                       >            trap_ne
1fa1 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1fa3 : 68              >            pla         ;load status
                       >            cmp_flag ~fzc
1fa4 : c9fc            >            cmp #(~fzc|fao)&m8    ;expected flags + al
                       >
                       >            trap_ne
1fa6 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1fa8 : 28              >            plp         ;restore status
                        
                        
                                set_a $80,0
                       >            load_flag 0
1fa9 : a900            >            lda #0             ;allow test to change I
                       >
1fab : 48              >            pha         ;use stack to load status
1fac : a980            >            lda #$80     ;precharge accu
1fae : 28              >            plp
                        
1faf : dd0802                   cmp abs1,x
                                tst_a $80,fc
1fb2 : 08              >            php         ;save flags
1fb3 : 08              >            php
1fb4 : c980            >            cmp #$80     ;test result
                       >            trap_ne
1fb6 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1fb8 : 68              >            pla         ;load status
                       >            cmp_flag fc
1fb9 : c931            >            cmp #(fc|fao)&m8    ;expected flags + alwa
                       >
                       >            trap_ne
1fbb : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1fbd : 28              >            plp         ;restore status
                        
                                set_a $7f,0
                       >            load_flag 0
1fbe : a900            >            lda #0             ;allow test to change I
                       >
1fc0 : 48              >            pha         ;use stack to load status
1fc1 : a97f            >            lda #$7f     ;precharge accu
1fc3 : 28              >            plp
                        
1fc4 : dd0802                   cmp abs1,x
                                tst_a $7f,fzc
1fc7 : 08              >            php         ;save flags
1fc8 : 08              >            php
1fc9 : c97f            >            cmp #$7f     ;test result
                       >            trap_ne
1fcb : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1fcd : 68              >            pla         ;load status
                       >            cmp_flag fzc
1fce : c933            >            cmp #(fzc|fao)&m8    ;expected flags + alw
                       >
                       >            trap_ne
1fd0 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1fd2 : 28              >            plp         ;restore status
                        
                                set_a $7e,0
                       >            load_flag 0
1fd3 : a900            >            lda #0             ;allow test to change I
                       >
1fd5 : 48              >            pha         ;use stack to load status
1fd6 : a97e            >            lda #$7e     ;precharge accu
1fd8 : 28              >            plp
                        
1fd9 : dd0802                   cmp abs1,x
                                tst_a $7e,fn
1fdc : 08              >            php         ;save flags
1fdd : 08              >            php
1fde : c97e            >            cmp #$7e     ;test result
                       >            trap_ne
1fe0 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1fe2 : 68              >            pla         ;load status
                       >            cmp_flag fn
1fe3 : c9b0            >            cmp #(fn|fao)&m8    ;expected flags + alwa
                       >
                       >            trap_ne
1fe5 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1fe7 : 28              >            plp         ;restore status
                        
                                set_a $80,$ff
                       >            load_flag $ff
1fe8 : a9ff            >            lda #$ff             ;allow test to change
                       >
1fea : 48              >            pha         ;use stack to load status
1feb : a980            >            lda #$80     ;precharge accu
1fed : 28              >            plp
                        
1fee : dd0802                   cmp abs1,x
                                tst_a $80,~fnz
1ff1 : 08              >            php         ;save flags
1ff2 : 08              >            php
1ff3 : c980            >            cmp #$80     ;test result
                       >            trap_ne
1ff5 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1ff7 : 68              >            pla         ;load status
                       >            cmp_flag ~fnz
1ff8 : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + al
                       >
                       >            trap_ne
1ffa : d0fe            >        bne *           ;failed not equal (non zero)
                       >
1ffc : 28              >            plp         ;restore status
                        
                                set_a $7f,$ff
                       >            load_flag $ff
1ffd : a9ff            >            lda #$ff             ;allow test to change
                       >
1fff : 48              >            pha         ;use stack to load status
2000 : a97f            >            lda #$7f     ;precharge accu
2002 : 28              >            plp
                        
2003 : dd0802                   cmp abs1,x
                                tst_a $7f,~fn
2006 : 08              >            php         ;save flags
2007 : 08              >            php
2008 : c97f            >            cmp #$7f     ;test result
                       >            trap_ne
200a : d0fe            >        bne *           ;failed not equal (non zero)
                       >
200c : 68              >            pla         ;load status
                       >            cmp_flag ~fn
200d : c97f            >            cmp #(~fn|fao)&m8    ;expected flags + alw
                       >
                       >            trap_ne
200f : d0fe            >        bne *           ;failed not equal (non zero)
                       >
2011 : 28              >            plp         ;restore status
                        
                                set_a $7e,$ff
                       >            load_flag $ff
2012 : a9ff            >            lda #$ff             ;allow test to change
                       >
2014 : 48              >            pha         ;use stack to load status
2015 : a97e            >            lda #$7e     ;precharge accu
2017 : 28              >            plp
                        
2018 : dd0802                   cmp abs1,x
                                tst_a $7e,~fzc
201b : 08              >            php         ;save flags
201c : 08              >            php
201d : c97e            >            cmp #$7e     ;test result
                       >            trap_ne
201f : d0fe            >        bne *           ;failed not equal (non zero)
                       >
2021 : 68              >            pla         ;load status
                       >            cmp_flag ~fzc
2022 : c9fc            >            cmp #(~fzc|fao)&m8    ;expected flags + al
                       >
                       >            trap_ne
2024 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
2026 : 28              >            plp         ;restore status
                        
                        
2027 : a004                     ldy #4          ;with indexing by Y
2029 : a208                     ldx #8          ;with indexed indirect
                                set_a $80,0
                       >            load_flag 0
202b : a900            >            lda #0             ;allow test to change I
                       >
202d : 48              >            pha         ;use stack to load status
202e : a980            >            lda #$80     ;precharge accu
2030 : 28              >            plp
                        
2031 : d90802                   cmp abs1,y
                                tst_a $80,fc
2034 : 08              >            php         ;save flags
2035 : 08              >            php
2036 : c980            >            cmp #$80     ;test result
                       >            trap_ne
2038 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
203a : 68              >            pla         ;load status
                       >            cmp_flag fc
203b : c931            >            cmp #(fc|fao)&m8    ;expected flags + alwa
                       >
                       >            trap_ne
203d : d0fe            >        bne *           ;failed not equal (non zero)
                       >
203f : 28              >            plp         ;restore status
                        
                                set_a $7f,0
                       >            load_flag 0
2040 : a900            >            lda #0             ;allow test to change I
                       >
2042 : 48              >            pha         ;use stack to load status
2043 : a97f            >            lda #$7f     ;precharge accu
2045 : 28              >            plp
                        
2046 : d90802                   cmp abs1,y
                                tst_a $7f,fzc
2049 : 08              >            php         ;save flags
204a : 08              >            php
204b : c97f            >            cmp #$7f     ;test result
                       >            trap_ne
204d : d0fe            >        bne *           ;failed not equal (non zero)
                       >
204f : 68              >            pla         ;load status
                       >            cmp_flag fzc
2050 : c933            >            cmp #(fzc|fao)&m8    ;expected flags + alw
                       >
                       >            trap_ne
2052 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
2054 : 28              >            plp         ;restore status
                        
                                set_a $7e,0
                       >            load_flag 0
2055 : a900            >            lda #0             ;allow test to change I
                       >
2057 : 48              >            pha         ;use stack to load status
2058 : a97e            >            lda #$7e     ;precharge accu
205a : 28              >            plp
                        
205b : d90802                   cmp abs1,y
                                tst_a $7e,fn
205e : 08              >            php         ;save flags
205f : 08              >            php
2060 : c97e            >            cmp #$7e     ;test result
                       >            trap_ne
2062 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
2064 : 68              >            pla         ;load status
                       >            cmp_flag fn
2065 : c9b0            >            cmp #(fn|fao)&m8    ;expected flags + alwa
                       >
                       >            trap_ne
2067 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
2069 : 28              >            plp         ;restore status
                        
                                set_a $80,$ff
                       >            load_flag $ff
206a : a9ff            >            lda #$ff             ;allow test to change
                       >
206c : 48              >            pha         ;use stack to load status
206d : a980            >            lda #$80     ;precharge accu
206f : 28              >            plp
                        
2070 : d90802                   cmp abs1,y
                                tst_a $80,~fnz
2073 : 08              >            php         ;save flags
2074 : 08              >            php
2075 : c980            >            cmp #$80     ;test result
                       >            trap_ne
2077 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
2079 : 68              >            pla         ;load status
                       >            cmp_flag ~fnz
207a : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + al
                       >
                       >            trap_ne
207c : d0fe            >        bne *           ;failed not equal (non zero)
                       >
207e : 28              >            plp         ;restore status
                        
                                set_a $7f,$ff
                       >            load_flag $ff
207f : a9ff            >            lda #$ff             ;allow test to change
                       >
2081 : 48              >            pha         ;use stack to load status
2082 : a97f            >            lda #$7f     ;precharge accu
2084 : 28              >            plp
                        
2085 : d90802                   cmp abs1,y
                                tst_a $7f,~fn
2088 : 08              >            php         ;save flags
2089 : 08              >            php
208a : c97f            >            cmp #$7f     ;test result
                       >            trap_ne
208c : d0fe            >        bne *           ;failed not equal (non zero)
                       >
208e : 68              >            pla         ;load status
                       >            cmp_flag ~fn
208f : c97f            >            cmp #(~fn|fao)&m8    ;expected flags + alw
                       >
                       >            trap_ne
2091 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
2093 : 28              >            plp         ;restore status
                        
                                set_a $7e,$ff
                       >            load_flag $ff
2094 : a9ff            >            lda #$ff             ;allow test to change
                       >
2096 : 48              >            pha         ;use stack to load status
2097 : a97e            >            lda #$7e     ;precharge accu
2099 : 28              >            plp
                        
209a : d90802                   cmp abs1,y
                                tst_a $7e,~fzc
209d : 08              >            php         ;save flags
209e : 08              >            php
209f : c97e            >            cmp #$7e     ;test result
                       >            trap_ne
20a1 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
20a3 : 68              >            pla         ;load status
                       >            cmp_flag ~fzc
20a4 : c9fc            >            cmp #(~fzc|fao)&m8    ;expected flags + al
                       >
                       >            trap_ne
20a6 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
20a8 : 28              >            plp         ;restore status
                        
                        
                                set_a $80,0
                       >            load_flag 0
20a9 : a900            >            lda #0             ;allow test to change I
                       >
20ab : 48              >            pha         ;use stack to load status
20ac : a980            >            lda #$80     ;precharge accu
20ae : 28              >            plp
                        
20af : c124                     cmp (ind1,x)
                                tst_a $80,fc
20b1 : 08              >            php         ;save flags
20b2 : 08              >            php
20b3 : c980            >            cmp #$80     ;test result
                       >            trap_ne
20b5 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
20b7 : 68              >            pla         ;load status
                       >            cmp_flag fc
20b8 : c931            >            cmp #(fc|fao)&m8    ;expected flags + alwa
                       >
                       >            trap_ne
20ba : d0fe            >        bne *           ;failed not equal (non zero)
                       >
20bc : 28              >            plp         ;restore status
                        
                                set_a $7f,0
                       >            load_flag 0
20bd : a900            >            lda #0             ;allow test to change I
                       >
20bf : 48              >            pha         ;use stack to load status
20c0 : a97f            >            lda #$7f     ;precharge accu
20c2 : 28              >            plp
                        
20c3 : c124                     cmp (ind1,x)
                                tst_a $7f,fzc
20c5 : 08              >            php         ;save flags
20c6 : 08              >            php
20c7 : c97f            >            cmp #$7f     ;test result
                       >            trap_ne
20c9 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
20cb : 68              >            pla         ;load status
                       >            cmp_flag fzc
20cc : c933            >            cmp #(fzc|fao)&m8    ;expected flags + alw
                       >
                       >            trap_ne
20ce : d0fe            >        bne *           ;failed not equal (non zero)
                       >
20d0 : 28              >            plp         ;restore status
                        
                                set_a $7e,0
                       >            load_flag 0
20d1 : a900            >            lda #0             ;allow test to change I
                       >
20d3 : 48              >            pha         ;use stack to load status
20d4 : a97e            >            lda #$7e     ;precharge accu
20d6 : 28              >            plp
                        
20d7 : c124                     cmp (ind1,x)
                                tst_a $7e,fn
20d9 : 08              >            php         ;save flags
20da : 08              >            php
20db : c97e            >            cmp #$7e     ;test result
                       >            trap_ne
20dd : d0fe            >        bne *           ;failed not equal (non zero)
                       >
20df : 68              >            pla         ;load status
                       >            cmp_flag fn
20e0 : c9b0            >            cmp #(fn|fao)&m8    ;expected flags + alwa
                       >
                       >            trap_ne
20e2 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
20e4 : 28              >            plp         ;restore status
                        
                                set_a $80,$ff
                       >            load_flag $ff
20e5 : a9ff            >            lda #$ff             ;allow test to change
                       >
20e7 : 48              >            pha         ;use stack to load status
20e8 : a980            >            lda #$80     ;precharge accu
20ea : 28              >            plp
                        
20eb : c124                     cmp (ind1,x)
                                tst_a $80,~fnz
20ed : 08              >            php         ;save flags
20ee : 08              >            php
20ef : c980            >            cmp #$80     ;test result
                       >            trap_ne
20f1 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
20f3 : 68              >            pla         ;load status
                       >            cmp_flag ~fnz
20f4 : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + al
                       >
                       >            trap_ne
20f6 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
20f8 : 28              >            plp         ;restore status
                        
                                set_a $7f,$ff
                       >            load_flag $ff
20f9 : a9ff            >            lda #$ff             ;allow test to change
                       >
20fb : 48              >            pha         ;use stack to load status
20fc : a97f            >            lda #$7f     ;precharge accu
20fe : 28              >            plp
                        
20ff : c124                     cmp (ind1,x)
                                tst_a $7f,~fn
2101 : 08              >            php         ;save flags
2102 : 08              >            php
2103 : c97f            >            cmp #$7f     ;test result
                       >            trap_ne
2105 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
2107 : 68              >            pla         ;load status
                       >            cmp_flag ~fn
2108 : c97f            >            cmp #(~fn|fao)&m8    ;expected flags + alw
                       >
                       >            trap_ne
210a : d0fe            >        bne *           ;failed not equal (non zero)
                       >
210c : 28              >            plp         ;restore status
                        
                                set_a $7e,$ff
                       >            load_flag $ff
210d : a9ff            >            lda #$ff             ;allow test to change
                       >
210f : 48              >            pha         ;use stack to load status
2110 : a97e            >            lda #$7e     ;precharge accu
2112 : 28              >            plp
                        
2113 : c124                     cmp (ind1,x)
                                tst_a $7e,~fzc
2115 : 08              >            php         ;save flags
2116 : 08              >            php
2117 : c97e            >            cmp #$7e     ;test result
                       >            trap_ne
2119 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
211b : 68              >            pla         ;load status
                       >            cmp_flag ~fzc
211c : c9fc            >            cmp #(~fzc|fao)&m8    ;expected flags + al
                       >
                       >            trap_ne
211e : d0fe            >        bne *           ;failed not equal (non zero)
                       >
2120 : 28              >            plp         ;restore status
                        
                        
                                set_a $80,0
                       >            load_flag 0
2121 : a900            >            lda #0             ;allow test to change I
                       >
2123 : 48              >            pha         ;use stack to load status
2124 : a980            >            lda #$80     ;precharge accu
2126 : 28              >            plp
                        
2127 : d124                     cmp (ind1),y
                                tst_a $80,fc
2129 : 08              >            php         ;save flags
212a : 08              >            php
212b : c980            >            cmp #$80     ;test result
                       >            trap_ne
212d : d0fe            >        bne *           ;failed not equal (non zero)
                       >
212f : 68              >            pla         ;load status
                       >            cmp_flag fc
2130 : c931            >            cmp #(fc|fao)&m8    ;expected flags + alwa
                       >
                       >            trap_ne
2132 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
2134 : 28              >            plp         ;restore status
                        
                                set_a $7f,0
                       >            load_flag 0
2135 : a900            >            lda #0             ;allow test to change I
                       >
2137 : 48              >            pha         ;use stack to load status
2138 : a97f            >            lda #$7f     ;precharge accu
213a : 28              >            plp
                        
213b : d124                     cmp (ind1),y
                                tst_a $7f,fzc
213d : 08              >            php         ;save flags
213e : 08              >            php
213f : c97f            >            cmp #$7f     ;test result
                       >            trap_ne
2141 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
2143 : 68              >            pla         ;load status
                       >            cmp_flag fzc
2144 : c933            >            cmp #(fzc|fao)&m8    ;expected flags + alw
                       >
                       >            trap_ne
2146 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
2148 : 28              >            plp         ;restore status
                        
                                set_a $7e,0
                       >            load_flag 0
2149 : a900            >            lda #0             ;allow test to change I
                       >
214b : 48              >            pha         ;use stack to load status
214c : a97e            >            lda #$7e     ;precharge accu
214e : 28              >            plp
                        
214f : d124                     cmp (ind1),y
                                tst_a $7e,fn
2151 : 08              >            php         ;save flags
2152 : 08              >            php
2153 : c97e            >            cmp #$7e     ;test result
                       >            trap_ne
2155 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
2157 : 68              >            pla         ;load status
                       >            cmp_flag fn
2158 : c9b0            >            cmp #(fn|fao)&m8    ;expected flags + alwa
                       >
                       >            trap_ne
215a : d0fe            >        bne *           ;failed not equal (non zero)
                       >
215c : 28              >            plp         ;restore status
                        
                                set_a $80,$ff
                       >            load_flag $ff
215d : a9ff            >            lda #$ff             ;allow test to change
                       >
215f : 48              >            pha         ;use stack to load status
2160 : a980            >            lda #$80     ;precharge accu
2162 : 28              >            plp
                        
2163 : d124                     cmp (ind1),y
                                tst_a $80,~fnz
2165 : 08              >            php         ;save flags
2166 : 08              >            php
2167 : c980            >            cmp #$80     ;test result
                       >            trap_ne
2169 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
216b : 68              >            pla         ;load status
                       >            cmp_flag ~fnz
216c : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + al
                       >
                       >            trap_ne
216e : d0fe            >        bne *           ;failed not equal (non zero)
                       >
2170 : 28              >            plp         ;restore status
                        
                                set_a $7f,$ff
                       >            load_flag $ff
2171 : a9ff            >            lda #$ff             ;allow test to change
                       >
2173 : 48              >            pha         ;use stack to load status
2174 : a97f            >            lda #$7f     ;precharge accu
2176 : 28              >            plp
                        
2177 : d124                     cmp (ind1),y
                                tst_a $7f,~fn
2179 : 08              >            php         ;save flags
217a : 08              >            php
217b : c97f            >            cmp #$7f     ;test result
                       >            trap_ne
217d : d0fe            >        bne *           ;failed not equal (non zero)
                       >
217f : 68              >            pla         ;load status
                       >            cmp_flag ~fn
2180 : c97f            >            cmp #(~fn|fao)&m8    ;expected flags + alw
                       >
                       >            trap_ne
2182 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
2184 : 28              >            plp         ;restore status
                        
                                set_a $7e,$ff
                       >            load_flag $ff
2185 : a9ff            >            lda #$ff             ;allow test to change
                       >
2187 : 48              >            pha         ;use stack to load status
2188 : a97e            >            lda #$7e     ;precharge accu
218a : 28              >            plp
                        
218b : d124                     cmp (ind1),y
                                tst_a $7e,~fzc
218d : 08              >            php         ;save flags
218e : 08              >            php
218f : c97e            >            cmp #$7e     ;test result
                       >            trap_ne
2191 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
2193 : 68              >            pla         ;load status
                       >            cmp_flag ~fzc
2194 : c9fc            >            cmp #(~fzc|fao)&m8    ;expected flags + al
                       >
                       >            trap_ne
2196 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
2198 : 28              >            plp         ;restore status
                        
                                next_test
2199 : ad0002          >            lda test_case   ;previous test
219c : c91c            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
219e : d0fe            >        bne *           ;failed not equal (non zero)
                       >
001d =                 >test_num = test_num + 1
21a0 : a91d            >            lda #test_num   ;*** this tests' number
21a2 : 8d0002          >            sta test_case
                       >            ;check_ram       ;uncomment to find altere
                        
                        
                        ; testing shifts - ASL LSR ROL ROR all addressing mode
                        ; shifts - accumulator
21a5 : a203                     ldx #3
21a7 :                  tasl
                                set_ax zp1,0
                       >            load_flag 0
21a7 : a900            >            lda #0             ;allow test to change I
                       >
21a9 : 48              >            pha         ;use stack to load status
21aa : b513            >            lda zp1,x    ;precharge accu
21ac : 28              >            plp
                        
21ad : 0a                       asl a
                                tst_ax rASL,fASL,0
21ae : 08              >            php         ;save flags
21af : dd1102          >            cmp rASL,x    ;test result
                       >            trap_ne
21b2 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
21b4 : 68              >            pla         ;load status
                       >            eor_flag 0
21b5 : 4930            >            eor #0|fao         ;invert expected flags 
                       >
21b7 : dd2102          >            cmp fASL,x    ;test flags
                       >            trap_ne     ;
21ba : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
21bc : ca                       dex
21bd : 10e8                     bpl tasl
21bf : a203                     ldx #3
21c1 :                  tasl1
                                set_ax zp1,$ff
                       >            load_flag $ff
21c1 : a9ff            >            lda #$ff             ;allow test to change
                       >
21c3 : 48              >            pha         ;use stack to load status
21c4 : b513            >            lda zp1,x    ;precharge accu
21c6 : 28              >            plp
                        
21c7 : 0a                       asl a
                                tst_ax rASL,fASL,$ff-fnzc
21c8 : 08              >            php         ;save flags
21c9 : dd1102          >            cmp rASL,x    ;test result
                       >            trap_ne
21cc : d0fe            >        bne *           ;failed not equal (non zero)
                       >
21ce : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
21cf : 497c            >            eor #$ff-fnzc|fao         ;invert expected
                       >
21d1 : dd2102          >            cmp fASL,x    ;test flags
                       >            trap_ne     ;
21d4 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
21d6 : ca                       dex
21d7 : 10e8                     bpl tasl1
                        
21d9 : a203                     ldx #3
21db :                  tlsr
                                set_ax zp1,0
                       >            load_flag 0
21db : a900            >            lda #0             ;allow test to change I
                       >
21dd : 48              >            pha         ;use stack to load status
21de : b513            >            lda zp1,x    ;precharge accu
21e0 : 28              >            plp
                        
21e1 : 4a                       lsr a
                                tst_ax rLSR,fLSR,0
21e2 : 08              >            php         ;save flags
21e3 : dd1902          >            cmp rLSR,x    ;test result
                       >            trap_ne
21e6 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
21e8 : 68              >            pla         ;load status
                       >            eor_flag 0
21e9 : 4930            >            eor #0|fao         ;invert expected flags 
                       >
21eb : dd2902          >            cmp fLSR,x    ;test flags
                       >            trap_ne     ;
21ee : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
21f0 : ca                       dex
21f1 : 10e8                     bpl tlsr
21f3 : a203                     ldx #3
21f5 :                  tlsr1
                                set_ax zp1,$ff
                       >            load_flag $ff
21f5 : a9ff            >            lda #$ff             ;allow test to change
                       >
21f7 : 48              >            pha         ;use stack to load status
21f8 : b513            >            lda zp1,x    ;precharge accu
21fa : 28              >            plp
                        
21fb : 4a                       lsr a
                                tst_ax rLSR,fLSR,$ff-fnzc
21fc : 08              >            php         ;save flags
21fd : dd1902          >            cmp rLSR,x    ;test result
                       >            trap_ne
2200 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
2202 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
2203 : 497c            >            eor #$ff-fnzc|fao         ;invert expected
                       >
2205 : dd2902          >            cmp fLSR,x    ;test flags
                       >            trap_ne     ;
2208 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
220a : ca                       dex
220b : 10e8                     bpl tlsr1
                        
220d : a203                     ldx #3
220f :                  trol
                                set_ax zp1,0
                       >            load_flag 0
220f : a900            >            lda #0             ;allow test to change I
                       >
2211 : 48              >            pha         ;use stack to load status
2212 : b513            >            lda zp1,x    ;precharge accu
2214 : 28              >            plp
                        
2215 : 2a                       rol a
                                tst_ax rROL,fROL,0
2216 : 08              >            php         ;save flags
2217 : dd1102          >            cmp rROL,x    ;test result
                       >            trap_ne
221a : d0fe            >        bne *           ;failed not equal (non zero)
                       >
221c : 68              >            pla         ;load status
                       >            eor_flag 0
221d : 4930            >            eor #0|fao         ;invert expected flags 
                       >
221f : dd2102          >            cmp fROL,x    ;test flags
                       >            trap_ne     ;
2222 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
2224 : ca                       dex
2225 : 10e8                     bpl trol
2227 : a203                     ldx #3
2229 :                  trol1
                                set_ax zp1,$ff-fc
                       >            load_flag $ff-fc
2229 : a9fe            >            lda #$ff-fc             ;allow test to cha
                       >
222b : 48              >            pha         ;use stack to load status
222c : b513            >            lda zp1,x    ;precharge accu
222e : 28              >            plp
                        
222f : 2a                       rol a
                                tst_ax rROL,fROL,$ff-fnzc
2230 : 08              >            php         ;save flags
2231 : dd1102          >            cmp rROL,x    ;test result
                       >            trap_ne
2234 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
2236 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
2237 : 497c            >            eor #$ff-fnzc|fao         ;invert expected
                       >
2239 : dd2102          >            cmp fROL,x    ;test flags
                       >            trap_ne     ;
223c : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
223e : ca                       dex
223f : 10e8                     bpl trol1
                        
2241 : a203                     ldx #3
2243 :                  trolc
                                set_ax zp1,fc
                       >            load_flag fc
2243 : a901            >            lda #fc             ;allow test to change 
                       >
2245 : 48              >            pha         ;use stack to load status
2246 : b513            >            lda zp1,x    ;precharge accu
2248 : 28              >            plp
                        
2249 : 2a                       rol a
                                tst_ax rROLc,fROLc,0
224a : 08              >            php         ;save flags
224b : dd1502          >            cmp rROLc,x    ;test result
                       >            trap_ne
224e : d0fe            >        bne *           ;failed not equal (non zero)
                       >
2250 : 68              >            pla         ;load status
                       >            eor_flag 0
2251 : 4930            >            eor #0|fao         ;invert expected flags 
                       >
2253 : dd2502          >            cmp fROLc,x    ;test flags
                       >            trap_ne     ;
2256 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
2258 : ca                       dex
2259 : 10e8                     bpl trolc
225b : a203                     ldx #3
225d :                  trolc1
                                set_ax zp1,$ff
                       >            load_flag $ff
225d : a9ff            >            lda #$ff             ;allow test to change
                       >
225f : 48              >            pha         ;use stack to load status
2260 : b513            >            lda zp1,x    ;precharge accu
2262 : 28              >            plp
                        
2263 : 2a                       rol a
                                tst_ax rROLc,fROLc,$ff-fnzc
2264 : 08              >            php         ;save flags
2265 : dd1502          >            cmp rROLc,x    ;test result
                       >            trap_ne
2268 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
226a : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
226b : 497c            >            eor #$ff-fnzc|fao         ;invert expected
                       >
226d : dd2502          >            cmp fROLc,x    ;test flags
                       >            trap_ne     ;
2270 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
2272 : ca                       dex
2273 : 10e8                     bpl trolc1
                        
2275 : a203                     ldx #3
2277 :                  tror
                                set_ax zp1,0
                       >            load_flag 0
2277 : a900            >            lda #0             ;allow test to change I
                       >
2279 : 48              >            pha         ;use stack to load status
227a : b513            >            lda zp1,x    ;precharge accu
227c : 28              >            plp
                        
227d : 6a                       ror a
                                tst_ax rROR,fROR,0
227e : 08              >            php         ;save flags
227f : dd1902          >            cmp rROR,x    ;test result
                       >            trap_ne
2282 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
2284 : 68              >            pla         ;load status
                       >            eor_flag 0
2285 : 4930            >            eor #0|fao         ;invert expected flags 
                       >
2287 : dd2902          >            cmp fROR,x    ;test flags
                       >            trap_ne     ;
228a : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
228c : ca                       dex
228d : 10e8                     bpl tror
228f : a203                     ldx #3
2291 :                  tror1
                                set_ax zp1,$ff-fc
                       >            load_flag $ff-fc
2291 : a9fe            >            lda #$ff-fc             ;allow test to cha
                       >
2293 : 48              >            pha         ;use stack to load status
2294 : b513            >            lda zp1,x    ;precharge accu
2296 : 28              >            plp
                        
2297 : 6a                       ror a
                                tst_ax rROR,fROR,$ff-fnzc
2298 : 08              >            php         ;save flags
2299 : dd1902          >            cmp rROR,x    ;test result
                       >            trap_ne
229c : d0fe            >        bne *           ;failed not equal (non zero)
                       >
229e : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
229f : 497c            >            eor #$ff-fnzc|fao         ;invert expected
                       >
22a1 : dd2902          >            cmp fROR,x    ;test flags
                       >            trap_ne     ;
22a4 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
22a6 : ca                       dex
22a7 : 10e8                     bpl tror1
                        
22a9 : a203                     ldx #3
22ab :                  trorc
                                set_ax zp1,fc
                       >            load_flag fc
22ab : a901            >            lda #fc             ;allow test to change 
                       >
22ad : 48              >            pha         ;use stack to load status
22ae : b513            >            lda zp1,x    ;precharge accu
22b0 : 28              >            plp
                        
22b1 : 6a                       ror a
                                tst_ax rRORc,fRORc,0
22b2 : 08              >            php         ;save flags
22b3 : dd1d02          >            cmp rRORc,x    ;test result
                       >            trap_ne
22b6 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
22b8 : 68              >            pla         ;load status
                       >            eor_flag 0
22b9 : 4930            >            eor #0|fao         ;invert expected flags 
                       >
22bb : dd2d02          >            cmp fRORc,x    ;test flags
                       >            trap_ne     ;
22be : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
22c0 : ca                       dex
22c1 : 10e8                     bpl trorc
22c3 : a203                     ldx #3
22c5 :                  trorc1
                                set_ax zp1,$ff
                       >            load_flag $ff
22c5 : a9ff            >            lda #$ff             ;allow test to change
                       >
22c7 : 48              >            pha         ;use stack to load status
22c8 : b513            >            lda zp1,x    ;precharge accu
22ca : 28              >            plp
                        
22cb : 6a                       ror a
                                tst_ax rRORc,fRORc,$ff-fnzc
22cc : 08              >            php         ;save flags
22cd : dd1d02          >            cmp rRORc,x    ;test result
                       >            trap_ne
22d0 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
22d2 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
22d3 : 497c            >            eor #$ff-fnzc|fao         ;invert expected
                       >
22d5 : dd2d02          >            cmp fRORc,x    ;test flags
                       >            trap_ne     ;
22d8 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
22da : ca                       dex
22db : 10e8                     bpl trorc1
                                next_test
22dd : ad0002          >            lda test_case   ;previous test
22e0 : c91d            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
22e2 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
001e =                 >test_num = test_num + 1
22e4 : a91e            >            lda #test_num   ;*** this tests' number
22e6 : 8d0002          >            sta test_case
                       >            ;check_ram       ;uncomment to find altere
                        
                        
                        ; shifts - zeropage
22e9 : a203                     ldx #3
22eb :                  tasl2
                                set_z zp1,0
                       >            load_flag 0
22eb : a900            >            lda #0             ;allow test to change I
                       >
22ed : 48              >            pha         ;use stack to load status
22ee : b513            >            lda zp1,x    ;load to zeropage
22f0 : 850c            >            sta zpt
22f2 : 28              >            plp
                        
22f3 : 060c                     asl zpt
                                tst_z rASL,fASL,0
22f5 : 08              >            php         ;save flags
22f6 : a50c            >            lda zpt
22f8 : dd1102          >            cmp rASL,x    ;test result
                       >            trap_ne
22fb : d0fe            >        bne *           ;failed not equal (non zero)
                       >
22fd : 68              >            pla         ;load status
                       >            eor_flag 0
22fe : 4930            >            eor #0|fao         ;invert expected flags 
                       >
2300 : dd2102          >            cmp fASL,x    ;test flags
                       >            trap_ne
2303 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
2305 : ca                       dex
2306 : 10e3                     bpl tasl2
2308 : a203                     ldx #3
230a :                  tasl3
                                set_z zp1,$ff
                       >            load_flag $ff
230a : a9ff            >            lda #$ff             ;allow test to change
                       >
230c : 48              >            pha         ;use stack to load status
230d : b513            >            lda zp1,x    ;load to zeropage
230f : 850c            >            sta zpt
2311 : 28              >            plp
                        
2312 : 060c                     asl zpt
                                tst_z rASL,fASL,$ff-fnzc
2314 : 08              >            php         ;save flags
2315 : a50c            >            lda zpt
2317 : dd1102          >            cmp rASL,x    ;test result
                       >            trap_ne
231a : d0fe            >        bne *           ;failed not equal (non zero)
                       >
231c : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
231d : 497c            >            eor #$ff-fnzc|fao         ;invert expected
                       >
231f : dd2102          >            cmp fASL,x    ;test flags
                       >            trap_ne
2322 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
2324 : ca                       dex
2325 : 10e3                     bpl tasl3
                        
2327 : a203                     ldx #3
2329 :                  tlsr2
                                set_z zp1,0
                       >            load_flag 0
2329 : a900            >            lda #0             ;allow test to change I
                       >
232b : 48              >            pha         ;use stack to load status
232c : b513            >            lda zp1,x    ;load to zeropage
232e : 850c            >            sta zpt
2330 : 28              >            plp
                        
2331 : 460c                     lsr zpt
                                tst_z rLSR,fLSR,0
2333 : 08              >            php         ;save flags
2334 : a50c            >            lda zpt
2336 : dd1902          >            cmp rLSR,x    ;test result
                       >            trap_ne
2339 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
233b : 68              >            pla         ;load status
                       >            eor_flag 0
233c : 4930            >            eor #0|fao         ;invert expected flags 
                       >
233e : dd2902          >            cmp fLSR,x    ;test flags
                       >            trap_ne
2341 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
2343 : ca                       dex
2344 : 10e3                     bpl tlsr2
2346 : a203                     ldx #3
2348 :                  tlsr3
                                set_z zp1,$ff
                       >            load_flag $ff
2348 : a9ff            >            lda #$ff             ;allow test to change
                       >
234a : 48              >            pha         ;use stack to load status
234b : b513            >            lda zp1,x    ;load to zeropage
234d : 850c            >            sta zpt
234f : 28              >            plp
                        
2350 : 460c                     lsr zpt
                                tst_z rLSR,fLSR,$ff-fnzc
2352 : 08              >            php         ;save flags
2353 : a50c            >            lda zpt
2355 : dd1902          >            cmp rLSR,x    ;test result
                       >            trap_ne
2358 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
235a : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
235b : 497c            >            eor #$ff-fnzc|fao         ;invert expected
                       >
235d : dd2902          >            cmp fLSR,x    ;test flags
                       >            trap_ne
2360 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
2362 : ca                       dex
2363 : 10e3                     bpl tlsr3
                        
2365 : a203                     ldx #3
2367 :                  trol2
                                set_z zp1,0
                       >            load_flag 0
2367 : a900            >            lda #0             ;allow test to change I
                       >
2369 : 48              >            pha         ;use stack to load status
236a : b513            >            lda zp1,x    ;load to zeropage
236c : 850c            >            sta zpt
236e : 28              >            plp
                        
236f : 260c                     rol zpt
                                tst_z rROL,fROL,0
2371 : 08              >            php         ;save flags
2372 : a50c            >            lda zpt
2374 : dd1102          >            cmp rROL,x    ;test result
                       >            trap_ne
2377 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
2379 : 68              >            pla         ;load status
                       >            eor_flag 0
237a : 4930            >            eor #0|fao         ;invert expected flags 
                       >
237c : dd2102          >            cmp fROL,x    ;test flags
                       >            trap_ne
237f : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
2381 : ca                       dex
2382 : 10e3                     bpl trol2
2384 : a203                     ldx #3
2386 :                  trol3
                                set_z zp1,$ff-fc
                       >            load_flag $ff-fc
2386 : a9fe            >            lda #$ff-fc             ;allow test to cha
                       >
2388 : 48              >            pha         ;use stack to load status
2389 : b513            >            lda zp1,x    ;load to zeropage
238b : 850c            >            sta zpt
238d : 28              >            plp
                        
238e : 260c                     rol zpt
                                tst_z rROL,fROL,$ff-fnzc
2390 : 08              >            php         ;save flags
2391 : a50c            >            lda zpt
2393 : dd1102          >            cmp rROL,x    ;test result
                       >            trap_ne
2396 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
2398 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
2399 : 497c            >            eor #$ff-fnzc|fao         ;invert expected
                       >
239b : dd2102          >            cmp fROL,x    ;test flags
                       >            trap_ne
239e : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
23a0 : ca                       dex
23a1 : 10e3                     bpl trol3
                        
23a3 : a203                     ldx #3
23a5 :                  trolc2
                                set_z zp1,fc
                       >            load_flag fc
23a5 : a901            >            lda #fc             ;allow test to change 
                       >
23a7 : 48              >            pha         ;use stack to load status
23a8 : b513            >            lda zp1,x    ;load to zeropage
23aa : 850c            >            sta zpt
23ac : 28              >            plp
                        
23ad : 260c                     rol zpt
                                tst_z rROLc,fROLc,0
23af : 08              >            php         ;save flags
23b0 : a50c            >            lda zpt
23b2 : dd1502          >            cmp rROLc,x    ;test result
                       >            trap_ne
23b5 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
23b7 : 68              >            pla         ;load status
                       >            eor_flag 0
23b8 : 4930            >            eor #0|fao         ;invert expected flags 
                       >
23ba : dd2502          >            cmp fROLc,x    ;test flags
                       >            trap_ne
23bd : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
23bf : ca                       dex
23c0 : 10e3                     bpl trolc2
23c2 : a203                     ldx #3
23c4 :                  trolc3
                                set_z zp1,$ff
                       >            load_flag $ff
23c4 : a9ff            >            lda #$ff             ;allow test to change
                       >
23c6 : 48              >            pha         ;use stack to load status
23c7 : b513            >            lda zp1,x    ;load to zeropage
23c9 : 850c            >            sta zpt
23cb : 28              >            plp
                        
23cc : 260c                     rol zpt
                                tst_z rROLc,fROLc,$ff-fnzc
23ce : 08              >            php         ;save flags
23cf : a50c            >            lda zpt
23d1 : dd1502          >            cmp rROLc,x    ;test result
                       >            trap_ne
23d4 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
23d6 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
23d7 : 497c            >            eor #$ff-fnzc|fao         ;invert expected
                       >
23d9 : dd2502          >            cmp fROLc,x    ;test flags
                       >            trap_ne
23dc : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
23de : ca                       dex
23df : 10e3                     bpl trolc3
                        
23e1 : a203                     ldx #3
23e3 :                  tror2
                                set_z zp1,0
                       >            load_flag 0
23e3 : a900            >            lda #0             ;allow test to change I
                       >
23e5 : 48              >            pha         ;use stack to load status
23e6 : b513            >            lda zp1,x    ;load to zeropage
23e8 : 850c            >            sta zpt
23ea : 28              >            plp
                        
23eb : 660c                     ror zpt
                                tst_z rROR,fROR,0
23ed : 08              >            php         ;save flags
23ee : a50c            >            lda zpt
23f0 : dd1902          >            cmp rROR,x    ;test result
                       >            trap_ne
23f3 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
23f5 : 68              >            pla         ;load status
                       >            eor_flag 0
23f6 : 4930            >            eor #0|fao         ;invert expected flags 
                       >
23f8 : dd2902          >            cmp fROR,x    ;test flags
                       >            trap_ne
23fb : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
23fd : ca                       dex
23fe : 10e3                     bpl tror2
2400 : a203                     ldx #3
2402 :                  tror3
                                set_z zp1,$ff-fc
                       >            load_flag $ff-fc
2402 : a9fe            >            lda #$ff-fc             ;allow test to cha
                       >
2404 : 48              >            pha         ;use stack to load status
2405 : b513            >            lda zp1,x    ;load to zeropage
2407 : 850c            >            sta zpt
2409 : 28              >            plp
                        
240a : 660c                     ror zpt
                                tst_z rROR,fROR,$ff-fnzc
240c : 08              >            php         ;save flags
240d : a50c            >            lda zpt
240f : dd1902          >            cmp rROR,x    ;test result
                       >            trap_ne
2412 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
2414 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
2415 : 497c            >            eor #$ff-fnzc|fao         ;invert expected
                       >
2417 : dd2902          >            cmp fROR,x    ;test flags
                       >            trap_ne
241a : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
241c : ca                       dex
241d : 10e3                     bpl tror3
                        
241f : a203                     ldx #3
2421 :                  trorc2
                                set_z zp1,fc
                       >            load_flag fc
2421 : a901            >            lda #fc             ;allow test to change 
                       >
2423 : 48              >            pha         ;use stack to load status
2424 : b513            >            lda zp1,x    ;load to zeropage
2426 : 850c            >            sta zpt
2428 : 28              >            plp
                        
2429 : 660c                     ror zpt
                                tst_z rRORc,fRORc,0
242b : 08              >            php         ;save flags
242c : a50c            >            lda zpt
242e : dd1d02          >            cmp rRORc,x    ;test result
                       >            trap_ne
2431 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
2433 : 68              >            pla         ;load status
                       >            eor_flag 0
2434 : 4930            >            eor #0|fao         ;invert expected flags 
                       >
2436 : dd2d02          >            cmp fRORc,x    ;test flags
                       >            trap_ne
2439 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
243b : ca                       dex
243c : 10e3                     bpl trorc2
243e : a203                     ldx #3
2440 :                  trorc3
                                set_z zp1,$ff
                       >            load_flag $ff
2440 : a9ff            >            lda #$ff             ;allow test to change
                       >
2442 : 48              >            pha         ;use stack to load status
2443 : b513            >            lda zp1,x    ;load to zeropage
2445 : 850c            >            sta zpt
2447 : 28              >            plp
                        
2448 : 660c                     ror zpt
                                tst_z rRORc,fRORc,$ff-fnzc
244a : 08              >            php         ;save flags
244b : a50c            >            lda zpt
244d : dd1d02          >            cmp rRORc,x    ;test result
                       >            trap_ne
2450 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
2452 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
2453 : 497c            >            eor #$ff-fnzc|fao         ;invert expected
                       >
2455 : dd2d02          >            cmp fRORc,x    ;test flags
                       >            trap_ne
2458 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
245a : ca                       dex
245b : 10e3                     bpl trorc3
                                next_test
245d : ad0002          >            lda test_case   ;previous test
2460 : c91e            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
2462 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
001f =                 >test_num = test_num + 1
2464 : a91f            >            lda #test_num   ;*** this tests' number
2466 : 8d0002          >            sta test_case
                       >            ;check_ram       ;uncomment to find altere
                        
                        
                        ; shifts - absolute
2469 : a203                     ldx #3
246b :                  tasl4
                                set_abs zp1,0
                       >            load_flag 0
246b : a900            >            lda #0             ;allow test to change I
                       >
246d : 48              >            pha         ;use stack to load status
246e : b513            >            lda zp1,x    ;load to memory
2470 : 8d0302          >            sta abst
2473 : 28              >            plp
                        
2474 : 0e0302                   asl abst
                                tst_abs rASL,fASL,0
2477 : 08              >            php         ;save flags
2478 : ad0302          >            lda abst
247b : dd1102          >            cmp rASL,x    ;test result
                       >            trap_ne
247e : d0fe            >        bne *           ;failed not equal (non zero)
                       >
2480 : 68              >            pla         ;load status
                       >            eor_flag 0
2481 : 4930            >            eor #0|fao         ;invert expected flags 
                       >
2483 : dd2102          >            cmp fASL,x    ;test flags
                       >            trap_ne
2486 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
2488 : ca                       dex
2489 : 10e0                     bpl tasl4
248b : a203                     ldx #3
248d :                  tasl5
                                set_abs zp1,$ff
                       >            load_flag $ff
248d : a9ff            >            lda #$ff             ;allow test to change
                       >
248f : 48              >            pha         ;use stack to load status
2490 : b513            >            lda zp1,x    ;load to memory
2492 : 8d0302          >            sta abst
2495 : 28              >            plp
                        
2496 : 0e0302                   asl abst
                                tst_abs rASL,fASL,$ff-fnzc
2499 : 08              >            php         ;save flags
249a : ad0302          >            lda abst
249d : dd1102          >            cmp rASL,x    ;test result
                       >            trap_ne
24a0 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
24a2 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
24a3 : 497c            >            eor #$ff-fnzc|fao         ;invert expected
                       >
24a5 : dd2102          >            cmp fASL,x    ;test flags
                       >            trap_ne
24a8 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
24aa : ca                       dex
24ab : 10e0                     bpl tasl5
                        
24ad : a203                     ldx #3
24af :                  tlsr4
                                set_abs zp1,0
                       >            load_flag 0
24af : a900            >            lda #0             ;allow test to change I
                       >
24b1 : 48              >            pha         ;use stack to load status
24b2 : b513            >            lda zp1,x    ;load to memory
24b4 : 8d0302          >            sta abst
24b7 : 28              >            plp
                        
24b8 : 4e0302                   lsr abst
                                tst_abs rLSR,fLSR,0
24bb : 08              >            php         ;save flags
24bc : ad0302          >            lda abst
24bf : dd1902          >            cmp rLSR,x    ;test result
                       >            trap_ne
24c2 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
24c4 : 68              >            pla         ;load status
                       >            eor_flag 0
24c5 : 4930            >            eor #0|fao         ;invert expected flags 
                       >
24c7 : dd2902          >            cmp fLSR,x    ;test flags
                       >            trap_ne
24ca : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
24cc : ca                       dex
24cd : 10e0                     bpl tlsr4
24cf : a203                     ldx #3
24d1 :                  tlsr5
                                set_abs zp1,$ff
                       >            load_flag $ff
24d1 : a9ff            >            lda #$ff             ;allow test to change
                       >
24d3 : 48              >            pha         ;use stack to load status
24d4 : b513            >            lda zp1,x    ;load to memory
24d6 : 8d0302          >            sta abst
24d9 : 28              >            plp
                        
24da : 4e0302                   lsr abst
                                tst_abs rLSR,fLSR,$ff-fnzc
24dd : 08              >            php         ;save flags
24de : ad0302          >            lda abst
24e1 : dd1902          >            cmp rLSR,x    ;test result
                       >            trap_ne
24e4 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
24e6 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
24e7 : 497c            >            eor #$ff-fnzc|fao         ;invert expected
                       >
24e9 : dd2902          >            cmp fLSR,x    ;test flags
                       >            trap_ne
24ec : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
24ee : ca                       dex
24ef : 10e0                     bpl tlsr5
                        
24f1 : a203                     ldx #3
24f3 :                  trol4
                                set_abs zp1,0
                       >            load_flag 0
24f3 : a900            >            lda #0             ;allow test to change I
                       >
24f5 : 48              >            pha         ;use stack to load status
24f6 : b513            >            lda zp1,x    ;load to memory
24f8 : 8d0302          >            sta abst
24fb : 28              >            plp
                        
24fc : 2e0302                   rol abst
                                tst_abs rROL,fROL,0
24ff : 08              >            php         ;save flags
2500 : ad0302          >            lda abst
2503 : dd1102          >            cmp rROL,x    ;test result
                       >            trap_ne
2506 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
2508 : 68              >            pla         ;load status
                       >            eor_flag 0
2509 : 4930            >            eor #0|fao         ;invert expected flags 
                       >
250b : dd2102          >            cmp fROL,x    ;test flags
                       >            trap_ne
250e : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
2510 : ca                       dex
2511 : 10e0                     bpl trol4
2513 : a203                     ldx #3
2515 :                  trol5
                                set_abs zp1,$ff-fc
                       >            load_flag $ff-fc
2515 : a9fe            >            lda #$ff-fc             ;allow test to cha
                       >
2517 : 48              >            pha         ;use stack to load status
2518 : b513            >            lda zp1,x    ;load to memory
251a : 8d0302          >            sta abst
251d : 28              >            plp
                        
251e : 2e0302                   rol abst
                                tst_abs rROL,fROL,$ff-fnzc
2521 : 08              >            php         ;save flags
2522 : ad0302          >            lda abst
2525 : dd1102          >            cmp rROL,x    ;test result
                       >            trap_ne
2528 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
252a : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
252b : 497c            >            eor #$ff-fnzc|fao         ;invert expected
                       >
252d : dd2102          >            cmp fROL,x    ;test flags
                       >            trap_ne
2530 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
2532 : ca                       dex
2533 : 10e0                     bpl trol5
                        
2535 : a203                     ldx #3
2537 :                  trolc4
                                set_abs zp1,fc
                       >            load_flag fc
2537 : a901            >            lda #fc             ;allow test to change 
                       >
2539 : 48              >            pha         ;use stack to load status
253a : b513            >            lda zp1,x    ;load to memory
253c : 8d0302          >            sta abst
253f : 28              >            plp
                        
2540 : 2e0302                   rol abst
                                tst_abs rROLc,fROLc,0
2543 : 08              >            php         ;save flags
2544 : ad0302          >            lda abst
2547 : dd1502          >            cmp rROLc,x    ;test result
                       >            trap_ne
254a : d0fe            >        bne *           ;failed not equal (non zero)
                       >
254c : 68              >            pla         ;load status
                       >            eor_flag 0
254d : 4930            >            eor #0|fao         ;invert expected flags 
                       >
254f : dd2502          >            cmp fROLc,x    ;test flags
                       >            trap_ne
2552 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
2554 : ca                       dex
2555 : 10e0                     bpl trolc4
2557 : a203                     ldx #3
2559 :                  trolc5
                                set_abs zp1,$ff
                       >            load_flag $ff
2559 : a9ff            >            lda #$ff             ;allow test to change
                       >
255b : 48              >            pha         ;use stack to load status
255c : b513            >            lda zp1,x    ;load to memory
255e : 8d0302          >            sta abst
2561 : 28              >            plp
                        
2562 : 2e0302                   rol abst
                                tst_abs rROLc,fROLc,$ff-fnzc
2565 : 08              >            php         ;save flags
2566 : ad0302          >            lda abst
2569 : dd1502          >            cmp rROLc,x    ;test result
                       >            trap_ne
256c : d0fe            >        bne *           ;failed not equal (non zero)
                       >
256e : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
256f : 497c            >            eor #$ff-fnzc|fao         ;invert expected
                       >
2571 : dd2502          >            cmp fROLc,x    ;test flags
                       >            trap_ne
2574 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
2576 : ca                       dex
2577 : 10e0                     bpl trolc5
                        
2579 : a203                     ldx #3
257b :                  tror4
                                set_abs zp1,0
                       >            load_flag 0
257b : a900            >            lda #0             ;allow test to change I
                       >
257d : 48              >            pha         ;use stack to load status
257e : b513            >            lda zp1,x    ;load to memory
2580 : 8d0302          >            sta abst
2583 : 28              >            plp
                        
2584 : 6e0302                   ror abst
                                tst_abs rROR,fROR,0
2587 : 08              >            php         ;save flags
2588 : ad0302          >            lda abst
258b : dd1902          >            cmp rROR,x    ;test result
                       >            trap_ne
258e : d0fe            >        bne *           ;failed not equal (non zero)
                       >
2590 : 68              >            pla         ;load status
                       >            eor_flag 0
2591 : 4930            >            eor #0|fao         ;invert expected flags 
                       >
2593 : dd2902          >            cmp fROR,x    ;test flags
                       >            trap_ne
2596 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
2598 : ca                       dex
2599 : 10e0                     bpl tror4
259b : a203                     ldx #3
259d :                  tror5
                                set_abs zp1,$ff-fc
                       >            load_flag $ff-fc
259d : a9fe            >            lda #$ff-fc             ;allow test to cha
                       >
259f : 48              >            pha         ;use stack to load status
25a0 : b513            >            lda zp1,x    ;load to memory
25a2 : 8d0302          >            sta abst
25a5 : 28              >            plp
                        
25a6 : 6e0302                   ror abst
                                tst_abs rROR,fROR,$ff-fnzc
25a9 : 08              >            php         ;save flags
25aa : ad0302          >            lda abst
25ad : dd1902          >            cmp rROR,x    ;test result
                       >            trap_ne
25b0 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
25b2 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
25b3 : 497c            >            eor #$ff-fnzc|fao         ;invert expected
                       >
25b5 : dd2902          >            cmp fROR,x    ;test flags
                       >            trap_ne
25b8 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
25ba : ca                       dex
25bb : 10e0                     bpl tror5
                        
25bd : a203                     ldx #3
25bf :                  trorc4
                                set_abs zp1,fc
                       >            load_flag fc
25bf : a901            >            lda #fc             ;allow test to change 
                       >
25c1 : 48              >            pha         ;use stack to load status
25c2 : b513            >            lda zp1,x    ;load to memory
25c4 : 8d0302          >            sta abst
25c7 : 28              >            plp
                        
25c8 : 6e0302                   ror abst
                                tst_abs rRORc,fRORc,0
25cb : 08              >            php         ;save flags
25cc : ad0302          >            lda abst
25cf : dd1d02          >            cmp rRORc,x    ;test result
                       >            trap_ne
25d2 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
25d4 : 68              >            pla         ;load status
                       >            eor_flag 0
25d5 : 4930            >            eor #0|fao         ;invert expected flags 
                       >
25d7 : dd2d02          >            cmp fRORc,x    ;test flags
                       >            trap_ne
25da : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
25dc : ca                       dex
25dd : 10e0                     bpl trorc4
25df : a203                     ldx #3
25e1 :                  trorc5
                                set_abs zp1,$ff
                       >            load_flag $ff
25e1 : a9ff            >            lda #$ff             ;allow test to change
                       >
25e3 : 48              >            pha         ;use stack to load status
25e4 : b513            >            lda zp1,x    ;load to memory
25e6 : 8d0302          >            sta abst
25e9 : 28              >            plp
                        
25ea : 6e0302                   ror abst
                                tst_abs rRORc,fRORc,$ff-fnzc
25ed : 08              >            php         ;save flags
25ee : ad0302          >            lda abst
25f1 : dd1d02          >            cmp rRORc,x    ;test result
                       >            trap_ne
25f4 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
25f6 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
25f7 : 497c            >            eor #$ff-fnzc|fao         ;invert expected
                       >
25f9 : dd2d02          >            cmp fRORc,x    ;test flags
                       >            trap_ne
25fc : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
25fe : ca                       dex
25ff : 10e0                     bpl trorc5
                                next_test
2601 : ad0002          >            lda test_case   ;previous test
2604 : c91f            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
2606 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0020 =                 >test_num = test_num + 1
2608 : a920            >            lda #test_num   ;*** this tests' number
260a : 8d0002          >            sta test_case
                       >            ;check_ram       ;uncomment to find altere
                        
                        
                        ; shifts - zp indexed
260d : a203                     ldx #3
260f :                  tasl6
                                set_zx zp1,0
                       >            load_flag 0
260f : a900            >            lda #0             ;allow test to change I
                       >
2611 : 48              >            pha         ;use stack to load status
2612 : b513            >            lda zp1,x    ;load to indexed zeropage
2614 : 950c            >            sta zpt,x
2616 : 28              >            plp
                        
2617 : 160c                     asl zpt,x
                                tst_zx rASL,fASL,0
2619 : 08              >            php         ;save flags
261a : b50c            >            lda zpt,x
261c : dd1102          >            cmp rASL,x    ;test result
                       >            trap_ne
261f : d0fe            >        bne *           ;failed not equal (non zero)
                       >
2621 : 68              >            pla         ;load status
                       >            eor_flag 0
2622 : 4930            >            eor #0|fao         ;invert expected flags 
                       >
2624 : dd2102          >            cmp fASL,x    ;test flags
                       >            trap_ne
2627 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
2629 : ca                       dex
262a : 10e3                     bpl tasl6
262c : a203                     ldx #3
262e :                  tasl7
                                set_zx zp1,$ff
                       >            load_flag $ff
262e : a9ff            >            lda #$ff             ;allow test to change
                       >
2630 : 48              >            pha         ;use stack to load status
2631 : b513            >            lda zp1,x    ;load to indexed zeropage
2633 : 950c            >            sta zpt,x
2635 : 28              >            plp
                        
2636 : 160c                     asl zpt,x
                                tst_zx rASL,fASL,$ff-fnzc
2638 : 08              >            php         ;save flags
2639 : b50c            >            lda zpt,x
263b : dd1102          >            cmp rASL,x    ;test result
                       >            trap_ne
263e : d0fe            >        bne *           ;failed not equal (non zero)
                       >
2640 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
2641 : 497c            >            eor #$ff-fnzc|fao         ;invert expected
                       >
2643 : dd2102          >            cmp fASL,x    ;test flags
                       >            trap_ne
2646 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
2648 : ca                       dex
2649 : 10e3                     bpl tasl7
                        
264b : a203                     ldx #3
264d :                  tlsr6
                                set_zx zp1,0
                       >            load_flag 0
264d : a900            >            lda #0             ;allow test to change I
                       >
264f : 48              >            pha         ;use stack to load status
2650 : b513            >            lda zp1,x    ;load to indexed zeropage
2652 : 950c            >            sta zpt,x
2654 : 28              >            plp
                        
2655 : 560c                     lsr zpt,x
                                tst_zx rLSR,fLSR,0
2657 : 08              >            php         ;save flags
2658 : b50c            >            lda zpt,x
265a : dd1902          >            cmp rLSR,x    ;test result
                       >            trap_ne
265d : d0fe            >        bne *           ;failed not equal (non zero)
                       >
265f : 68              >            pla         ;load status
                       >            eor_flag 0
2660 : 4930            >            eor #0|fao         ;invert expected flags 
                       >
2662 : dd2902          >            cmp fLSR,x    ;test flags
                       >            trap_ne
2665 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
2667 : ca                       dex
2668 : 10e3                     bpl tlsr6
266a : a203                     ldx #3
266c :                  tlsr7
                                set_zx zp1,$ff
                       >            load_flag $ff
266c : a9ff            >            lda #$ff             ;allow test to change
                       >
266e : 48              >            pha         ;use stack to load status
266f : b513            >            lda zp1,x    ;load to indexed zeropage
2671 : 950c            >            sta zpt,x
2673 : 28              >            plp
                        
2674 : 560c                     lsr zpt,x
                                tst_zx rLSR,fLSR,$ff-fnzc
2676 : 08              >            php         ;save flags
2677 : b50c            >            lda zpt,x
2679 : dd1902          >            cmp rLSR,x    ;test result
                       >            trap_ne
267c : d0fe            >        bne *           ;failed not equal (non zero)
                       >
267e : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
267f : 497c            >            eor #$ff-fnzc|fao         ;invert expected
                       >
2681 : dd2902          >            cmp fLSR,x    ;test flags
                       >            trap_ne
2684 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
2686 : ca                       dex
2687 : 10e3                     bpl tlsr7
                        
2689 : a203                     ldx #3
268b :                  trol6
                                set_zx zp1,0
                       >            load_flag 0
268b : a900            >            lda #0             ;allow test to change I
                       >
268d : 48              >            pha         ;use stack to load status
268e : b513            >            lda zp1,x    ;load to indexed zeropage
2690 : 950c            >            sta zpt,x
2692 : 28              >            plp
                        
2693 : 360c                     rol zpt,x
                                tst_zx rROL,fROL,0
2695 : 08              >            php         ;save flags
2696 : b50c            >            lda zpt,x
2698 : dd1102          >            cmp rROL,x    ;test result
                       >            trap_ne
269b : d0fe            >        bne *           ;failed not equal (non zero)
                       >
269d : 68              >            pla         ;load status
                       >            eor_flag 0
269e : 4930            >            eor #0|fao         ;invert expected flags 
                       >
26a0 : dd2102          >            cmp fROL,x    ;test flags
                       >            trap_ne
26a3 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
26a5 : ca                       dex
26a6 : 10e3                     bpl trol6
26a8 : a203                     ldx #3
26aa :                  trol7
                                set_zx zp1,$ff-fc
                       >            load_flag $ff-fc
26aa : a9fe            >            lda #$ff-fc             ;allow test to cha
                       >
26ac : 48              >            pha         ;use stack to load status
26ad : b513            >            lda zp1,x    ;load to indexed zeropage
26af : 950c            >            sta zpt,x
26b1 : 28              >            plp
                        
26b2 : 360c                     rol zpt,x
                                tst_zx rROL,fROL,$ff-fnzc
26b4 : 08              >            php         ;save flags
26b5 : b50c            >            lda zpt,x
26b7 : dd1102          >            cmp rROL,x    ;test result
                       >            trap_ne
26ba : d0fe            >        bne *           ;failed not equal (non zero)
                       >
26bc : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
26bd : 497c            >            eor #$ff-fnzc|fao         ;invert expected
                       >
26bf : dd2102          >            cmp fROL,x    ;test flags
                       >            trap_ne
26c2 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
26c4 : ca                       dex
26c5 : 10e3                     bpl trol7
                        
26c7 : a203                     ldx #3
26c9 :                  trolc6
                                set_zx zp1,fc
                       >            load_flag fc
26c9 : a901            >            lda #fc             ;allow test to change 
                       >
26cb : 48              >            pha         ;use stack to load status
26cc : b513            >            lda zp1,x    ;load to indexed zeropage
26ce : 950c            >            sta zpt,x
26d0 : 28              >            plp
                        
26d1 : 360c                     rol zpt,x
                                tst_zx rROLc,fROLc,0
26d3 : 08              >            php         ;save flags
26d4 : b50c            >            lda zpt,x
26d6 : dd1502          >            cmp rROLc,x    ;test result
                       >            trap_ne
26d9 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
26db : 68              >            pla         ;load status
                       >            eor_flag 0
26dc : 4930            >            eor #0|fao         ;invert expected flags 
                       >
26de : dd2502          >            cmp fROLc,x    ;test flags
                       >            trap_ne
26e1 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
26e3 : ca                       dex
26e4 : 10e3                     bpl trolc6
26e6 : a203                     ldx #3
26e8 :                  trolc7
                                set_zx zp1,$ff
                       >            load_flag $ff
26e8 : a9ff            >            lda #$ff             ;allow test to change
                       >
26ea : 48              >            pha         ;use stack to load status
26eb : b513            >            lda zp1,x    ;load to indexed zeropage
26ed : 950c            >            sta zpt,x
26ef : 28              >            plp
                        
26f0 : 360c                     rol zpt,x
                                tst_zx rROLc,fROLc,$ff-fnzc
26f2 : 08              >            php         ;save flags
26f3 : b50c            >            lda zpt,x
26f5 : dd1502          >            cmp rROLc,x    ;test result
                       >            trap_ne
26f8 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
26fa : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
26fb : 497c            >            eor #$ff-fnzc|fao         ;invert expected
                       >
26fd : dd2502          >            cmp fROLc,x    ;test flags
                       >            trap_ne
2700 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
2702 : ca                       dex
2703 : 10e3                     bpl trolc7
                        
2705 : a203                     ldx #3
2707 :                  tror6
                                set_zx zp1,0
                       >            load_flag 0
2707 : a900            >            lda #0             ;allow test to change I
                       >
2709 : 48              >            pha         ;use stack to load status
270a : b513            >            lda zp1,x    ;load to indexed zeropage
270c : 950c            >            sta zpt,x
270e : 28              >            plp
                        
270f : 760c                     ror zpt,x
                                tst_zx rROR,fROR,0
2711 : 08              >            php         ;save flags
2712 : b50c            >            lda zpt,x
2714 : dd1902          >            cmp rROR,x    ;test result
                       >            trap_ne
2717 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
2719 : 68              >            pla         ;load status
                       >            eor_flag 0
271a : 4930            >            eor #0|fao         ;invert expected flags 
                       >
271c : dd2902          >            cmp fROR,x    ;test flags
                       >            trap_ne
271f : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
2721 : ca                       dex
2722 : 10e3                     bpl tror6
2724 : a203                     ldx #3
2726 :                  tror7
                                set_zx zp1,$ff-fc
                       >            load_flag $ff-fc
2726 : a9fe            >            lda #$ff-fc             ;allow test to cha
                       >
2728 : 48              >            pha         ;use stack to load status
2729 : b513            >            lda zp1,x    ;load to indexed zeropage
272b : 950c            >            sta zpt,x
272d : 28              >            plp
                        
272e : 760c                     ror zpt,x
                                tst_zx rROR,fROR,$ff-fnzc
2730 : 08              >            php         ;save flags
2731 : b50c            >            lda zpt,x
2733 : dd1902          >            cmp rROR,x    ;test result
                       >            trap_ne
2736 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
2738 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
2739 : 497c            >            eor #$ff-fnzc|fao         ;invert expected
                       >
273b : dd2902          >            cmp fROR,x    ;test flags
                       >            trap_ne
273e : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
2740 : ca                       dex
2741 : 10e3                     bpl tror7
                        
2743 : a203                     ldx #3
2745 :                  trorc6
                                set_zx zp1,fc
                       >            load_flag fc
2745 : a901            >            lda #fc             ;allow test to change 
                       >
2747 : 48              >            pha         ;use stack to load status
2748 : b513            >            lda zp1,x    ;load to indexed zeropage
274a : 950c            >            sta zpt,x
274c : 28              >            plp
                        
274d : 760c                     ror zpt,x
                                tst_zx rRORc,fRORc,0
274f : 08              >            php         ;save flags
2750 : b50c            >            lda zpt,x
2752 : dd1d02          >            cmp rRORc,x    ;test result
                       >            trap_ne
2755 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
2757 : 68              >            pla         ;load status
                       >            eor_flag 0
2758 : 4930            >            eor #0|fao         ;invert expected flags 
                       >
275a : dd2d02          >            cmp fRORc,x    ;test flags
                       >            trap_ne
275d : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
275f : ca                       dex
2760 : 10e3                     bpl trorc6
2762 : a203                     ldx #3
2764 :                  trorc7
                                set_zx zp1,$ff
                       >            load_flag $ff
2764 : a9ff            >            lda #$ff             ;allow test to change
                       >
2766 : 48              >            pha         ;use stack to load status
2767 : b513            >            lda zp1,x    ;load to indexed zeropage
2769 : 950c            >            sta zpt,x
276b : 28              >            plp
                        
276c : 760c                     ror zpt,x
                                tst_zx rRORc,fRORc,$ff-fnzc
276e : 08              >            php         ;save flags
276f : b50c            >            lda zpt,x
2771 : dd1d02          >            cmp rRORc,x    ;test result
                       >            trap_ne
2774 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
2776 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
2777 : 497c            >            eor #$ff-fnzc|fao         ;invert expected
                       >
2779 : dd2d02          >            cmp fRORc,x    ;test flags
                       >            trap_ne
277c : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
277e : ca                       dex
277f : 10e3                     bpl trorc7
                                next_test
2781 : ad0002          >            lda test_case   ;previous test
2784 : c920            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
2786 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0021 =                 >test_num = test_num + 1
2788 : a921            >            lda #test_num   ;*** this tests' number
278a : 8d0002          >            sta test_case
                       >            ;check_ram       ;uncomment to find altere
                        
                                
                        ; shifts - abs indexed
278d : a203                     ldx #3
278f :                  tasl8
                                set_absx zp1,0
                       >            load_flag 0
278f : a900            >            lda #0             ;allow test to change I
                       >
2791 : 48              >            pha         ;use stack to load status
2792 : b513            >            lda zp1,x    ;load to indexed memory
2794 : 9d0302          >            sta abst,x
2797 : 28              >            plp
                        
2798 : 1e0302                   asl abst,x
                                tst_absx rASL,fASL,0
279b : 08              >            php         ;save flags
279c : bd0302          >            lda abst,x
279f : dd1102          >            cmp rASL,x    ;test result
                       >            trap_ne
27a2 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
27a4 : 68              >            pla         ;load status
                       >            eor_flag 0
27a5 : 4930            >            eor #0|fao         ;invert expected flags 
                       >
27a7 : dd2102          >            cmp fASL,x    ;test flags
                       >            trap_ne
27aa : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
27ac : ca                       dex
27ad : 10e0                     bpl tasl8
27af : a203                     ldx #3
27b1 :                  tasl9
                                set_absx zp1,$ff
                       >            load_flag $ff
27b1 : a9ff            >            lda #$ff             ;allow test to change
                       >
27b3 : 48              >            pha         ;use stack to load status
27b4 : b513            >            lda zp1,x    ;load to indexed memory
27b6 : 9d0302          >            sta abst,x
27b9 : 28              >            plp
                        
27ba : 1e0302                   asl abst,x
                                tst_absx rASL,fASL,$ff-fnzc
27bd : 08              >            php         ;save flags
27be : bd0302          >            lda abst,x
27c1 : dd1102          >            cmp rASL,x    ;test result
                       >            trap_ne
27c4 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
27c6 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
27c7 : 497c            >            eor #$ff-fnzc|fao         ;invert expected
                       >
27c9 : dd2102          >            cmp fASL,x    ;test flags
                       >            trap_ne
27cc : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
27ce : ca                       dex
27cf : 10e0                     bpl tasl9
                        
27d1 : a203                     ldx #3
27d3 :                  tlsr8
                                set_absx zp1,0
                       >            load_flag 0
27d3 : a900            >            lda #0             ;allow test to change I
                       >
27d5 : 48              >            pha         ;use stack to load status
27d6 : b513            >            lda zp1,x    ;load to indexed memory
27d8 : 9d0302          >            sta abst,x
27db : 28              >            plp
                        
27dc : 5e0302                   lsr abst,x
                                tst_absx rLSR,fLSR,0
27df : 08              >            php         ;save flags
27e0 : bd0302          >            lda abst,x
27e3 : dd1902          >            cmp rLSR,x    ;test result
                       >            trap_ne
27e6 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
27e8 : 68              >            pla         ;load status
                       >            eor_flag 0
27e9 : 4930            >            eor #0|fao         ;invert expected flags 
                       >
27eb : dd2902          >            cmp fLSR,x    ;test flags
                       >            trap_ne
27ee : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
27f0 : ca                       dex
27f1 : 10e0                     bpl tlsr8
27f3 : a203                     ldx #3
27f5 :                  tlsr9
                                set_absx zp1,$ff
                       >            load_flag $ff
27f5 : a9ff            >            lda #$ff             ;allow test to change
                       >
27f7 : 48              >            pha         ;use stack to load status
27f8 : b513            >            lda zp1,x    ;load to indexed memory
27fa : 9d0302          >            sta abst,x
27fd : 28              >            plp
                        
27fe : 5e0302                   lsr abst,x
                                tst_absx rLSR,fLSR,$ff-fnzc
2801 : 08              >            php         ;save flags
2802 : bd0302          >            lda abst,x
2805 : dd1902          >            cmp rLSR,x    ;test result
                       >            trap_ne
2808 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
280a : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
280b : 497c            >            eor #$ff-fnzc|fao         ;invert expected
                       >
280d : dd2902          >            cmp fLSR,x    ;test flags
                       >            trap_ne
2810 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
2812 : ca                       dex
2813 : 10e0                     bpl tlsr9
                        
2815 : a203                     ldx #3
2817 :                  trol8
                                set_absx zp1,0
                       >            load_flag 0
2817 : a900            >            lda #0             ;allow test to change I
                       >
2819 : 48              >            pha         ;use stack to load status
281a : b513            >            lda zp1,x    ;load to indexed memory
281c : 9d0302          >            sta abst,x
281f : 28              >            plp
                        
2820 : 3e0302                   rol abst,x
                                tst_absx rROL,fROL,0
2823 : 08              >            php         ;save flags
2824 : bd0302          >            lda abst,x
2827 : dd1102          >            cmp rROL,x    ;test result
                       >            trap_ne
282a : d0fe            >        bne *           ;failed not equal (non zero)
                       >
282c : 68              >            pla         ;load status
                       >            eor_flag 0
282d : 4930            >            eor #0|fao         ;invert expected flags 
                       >
282f : dd2102          >            cmp fROL,x    ;test flags
                       >            trap_ne
2832 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
2834 : ca                       dex
2835 : 10e0                     bpl trol8
2837 : a203                     ldx #3
2839 :                  trol9
                                set_absx zp1,$ff-fc
                       >            load_flag $ff-fc
2839 : a9fe            >            lda #$ff-fc             ;allow test to cha
                       >
283b : 48              >            pha         ;use stack to load status
283c : b513            >            lda zp1,x    ;load to indexed memory
283e : 9d0302          >            sta abst,x
2841 : 28              >            plp
                        
2842 : 3e0302                   rol abst,x
                                tst_absx rROL,fROL,$ff-fnzc
2845 : 08              >            php         ;save flags
2846 : bd0302          >            lda abst,x
2849 : dd1102          >            cmp rROL,x    ;test result
                       >            trap_ne
284c : d0fe            >        bne *           ;failed not equal (non zero)
                       >
284e : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
284f : 497c            >            eor #$ff-fnzc|fao         ;invert expected
                       >
2851 : dd2102          >            cmp fROL,x    ;test flags
                       >            trap_ne
2854 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
2856 : ca                       dex
2857 : 10e0                     bpl trol9
                        
2859 : a203                     ldx #3
285b :                  trolc8
                                set_absx zp1,fc
                       >            load_flag fc
285b : a901            >            lda #fc             ;allow test to change 
                       >
285d : 48              >            pha         ;use stack to load status
285e : b513            >            lda zp1,x    ;load to indexed memory
2860 : 9d0302          >            sta abst,x
2863 : 28              >            plp
                        
2864 : 3e0302                   rol abst,x
                                tst_absx rROLc,fROLc,0
2867 : 08              >            php         ;save flags
2868 : bd0302          >            lda abst,x
286b : dd1502          >            cmp rROLc,x    ;test result
                       >            trap_ne
286e : d0fe            >        bne *           ;failed not equal (non zero)
                       >
2870 : 68              >            pla         ;load status
                       >            eor_flag 0
2871 : 4930            >            eor #0|fao         ;invert expected flags 
                       >
2873 : dd2502          >            cmp fROLc,x    ;test flags
                       >            trap_ne
2876 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
2878 : ca                       dex
2879 : 10e0                     bpl trolc8
287b : a203                     ldx #3
287d :                  trolc9
                                set_absx zp1,$ff
                       >            load_flag $ff
287d : a9ff            >            lda #$ff             ;allow test to change
                       >
287f : 48              >            pha         ;use stack to load status
2880 : b513            >            lda zp1,x    ;load to indexed memory
2882 : 9d0302          >            sta abst,x
2885 : 28              >            plp
                        
2886 : 3e0302                   rol abst,x
                                tst_absx rROLc,fROLc,$ff-fnzc
2889 : 08              >            php         ;save flags
288a : bd0302          >            lda abst,x
288d : dd1502          >            cmp rROLc,x    ;test result
                       >            trap_ne
2890 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
2892 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
2893 : 497c            >            eor #$ff-fnzc|fao         ;invert expected
                       >
2895 : dd2502          >            cmp fROLc,x    ;test flags
                       >            trap_ne
2898 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
289a : ca                       dex
289b : 10e0                     bpl trolc9
                        
289d : a203                     ldx #3
289f :                  tror8
                                set_absx zp1,0
                       >            load_flag 0
289f : a900            >            lda #0             ;allow test to change I
                       >
28a1 : 48              >            pha         ;use stack to load status
28a2 : b513            >            lda zp1,x    ;load to indexed memory
28a4 : 9d0302          >            sta abst,x
28a7 : 28              >            plp
                        
28a8 : 7e0302                   ror abst,x
                                tst_absx rROR,fROR,0
28ab : 08              >            php         ;save flags
28ac : bd0302          >            lda abst,x
28af : dd1902          >            cmp rROR,x    ;test result
                       >            trap_ne
28b2 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
28b4 : 68              >            pla         ;load status
                       >            eor_flag 0
28b5 : 4930            >            eor #0|fao         ;invert expected flags 
                       >
28b7 : dd2902          >            cmp fROR,x    ;test flags
                       >            trap_ne
28ba : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
28bc : ca                       dex
28bd : 10e0                     bpl tror8
28bf : a203                     ldx #3
28c1 :                  tror9
                                set_absx zp1,$ff-fc
                       >            load_flag $ff-fc
28c1 : a9fe            >            lda #$ff-fc             ;allow test to cha
                       >
28c3 : 48              >            pha         ;use stack to load status
28c4 : b513            >            lda zp1,x    ;load to indexed memory
28c6 : 9d0302          >            sta abst,x
28c9 : 28              >            plp
                        
28ca : 7e0302                   ror abst,x
                                tst_absx rROR,fROR,$ff-fnzc
28cd : 08              >            php         ;save flags
28ce : bd0302          >            lda abst,x
28d1 : dd1902          >            cmp rROR,x    ;test result
                       >            trap_ne
28d4 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
28d6 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
28d7 : 497c            >            eor #$ff-fnzc|fao         ;invert expected
                       >
28d9 : dd2902          >            cmp fROR,x    ;test flags
                       >            trap_ne
28dc : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
28de : ca                       dex
28df : 10e0                     bpl tror9
                        
28e1 : a203                     ldx #3
28e3 :                  trorc8
                                set_absx zp1,fc
                       >            load_flag fc
28e3 : a901            >            lda #fc             ;allow test to change 
                       >
28e5 : 48              >            pha         ;use stack to load status
28e6 : b513            >            lda zp1,x    ;load to indexed memory
28e8 : 9d0302          >            sta abst,x
28eb : 28              >            plp
                        
28ec : 7e0302                   ror abst,x
                                tst_absx rRORc,fRORc,0
28ef : 08              >            php         ;save flags
28f0 : bd0302          >            lda abst,x
28f3 : dd1d02          >            cmp rRORc,x    ;test result
                       >            trap_ne
28f6 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
28f8 : 68              >            pla         ;load status
                       >            eor_flag 0
28f9 : 4930            >            eor #0|fao         ;invert expected flags 
                       >
28fb : dd2d02          >            cmp fRORc,x    ;test flags
                       >            trap_ne
28fe : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
2900 : ca                       dex
2901 : 10e0                     bpl trorc8
2903 : a203                     ldx #3
2905 :                  trorc9
                                set_absx zp1,$ff
                       >            load_flag $ff
2905 : a9ff            >            lda #$ff             ;allow test to change
                       >
2907 : 48              >            pha         ;use stack to load status
2908 : b513            >            lda zp1,x    ;load to indexed memory
290a : 9d0302          >            sta abst,x
290d : 28              >            plp
                        
290e : 7e0302                   ror abst,x
                                tst_absx rRORc,fRORc,$ff-fnzc
2911 : 08              >            php         ;save flags
2912 : bd0302          >            lda abst,x
2915 : dd1d02          >            cmp rRORc,x    ;test result
                       >            trap_ne
2918 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
291a : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
291b : 497c            >            eor #$ff-fnzc|fao         ;invert expected
                       >
291d : dd2d02          >            cmp fRORc,x    ;test flags
                       >            trap_ne
2920 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
2922 : ca                       dex
2923 : 10e0                     bpl trorc9
                                next_test
2925 : ad0002          >            lda test_case   ;previous test
2928 : c921            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
292a : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0022 =                 >test_num = test_num + 1
292c : a922            >            lda #test_num   ;*** this tests' number
292e : 8d0002          >            sta test_case
                       >            ;check_ram       ;uncomment to find altere
                        
                        
                        ; testing memory increment/decrement - INC DEC all add
                        ; zeropage
2931 : a200                     ldx #0
2933 : a97e                     lda #$7e
2935 : 850c                     sta zpt
2937 :                  tinc    
                                set_stat 0
                       >            load_flag 0
2937 : a900            >            lda #0             ;allow test to change I
                       >
2939 : 48              >            pha         ;use stack to load status
293a : 28              >            plp
                        
293b : e60c                     inc zpt
                                tst_z rINC,fINC,0
293d : 08              >            php         ;save flags
293e : a50c            >            lda zpt
2940 : dd3102          >            cmp rINC,x    ;test result
                       >            trap_ne
2943 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
2945 : 68              >            pla         ;load status
                       >            eor_flag 0
2946 : 4930            >            eor #0|fao         ;invert expected flags 
                       >
2948 : dd3602          >            cmp fINC,x    ;test flags
                       >            trap_ne
294b : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
294d : e8                       inx
294e : e002                     cpx #2
2950 : d004                     bne tinc1
2952 : a9fe                     lda #$fe
2954 : 850c                     sta zpt
2956 : e005             tinc1   cpx #5
2958 : d0dd                     bne tinc
295a : ca                       dex
295b : e60c                     inc zpt
295d :                  tdec    
                                set_stat 0
                       >            load_flag 0
295d : a900            >            lda #0             ;allow test to change I
                       >
295f : 48              >            pha         ;use stack to load status
2960 : 28              >            plp
                        
2961 : c60c                     dec zpt
                                tst_z rINC,fINC,0
2963 : 08              >            php         ;save flags
2964 : a50c            >            lda zpt
2966 : dd3102          >            cmp rINC,x    ;test result
                       >            trap_ne
2969 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
296b : 68              >            pla         ;load status
                       >            eor_flag 0
296c : 4930            >            eor #0|fao         ;invert expected flags 
                       >
296e : dd3602          >            cmp fINC,x    ;test flags
                       >            trap_ne
2971 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
2973 : ca                       dex
2974 : 300a                     bmi tdec1
2976 : e001                     cpx #1
2978 : d0e3                     bne tdec
297a : a981                     lda #$81
297c : 850c                     sta zpt
297e : d0dd                     bne tdec
2980 :                  tdec1
2980 : a200                     ldx #0
2982 : a97e                     lda #$7e
2984 : 850c                     sta zpt
2986 :                  tinc10    
                                set_stat $ff
                       >            load_flag $ff
2986 : a9ff            >            lda #$ff             ;allow test to change
                       >
2988 : 48              >            pha         ;use stack to load status
2989 : 28              >            plp
                        
298a : e60c                     inc zpt
                                tst_z rINC,fINC,$ff-fnz
298c : 08              >            php         ;save flags
298d : a50c            >            lda zpt
298f : dd3102          >            cmp rINC,x    ;test result
                       >            trap_ne
2992 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
2994 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
2995 : 497d            >            eor #$ff-fnz|fao         ;invert expected 
                       >
2997 : dd3602          >            cmp fINC,x    ;test flags
                       >            trap_ne
299a : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
299c : e8                       inx
299d : e002                     cpx #2
299f : d004                     bne tinc11
29a1 : a9fe                     lda #$fe
29a3 : 850c                     sta zpt
29a5 : e005             tinc11  cpx #5
29a7 : d0dd                     bne tinc10
29a9 : ca                       dex
29aa : e60c                     inc zpt
29ac :                  tdec10    
                                set_stat $ff
                       >            load_flag $ff
29ac : a9ff            >            lda #$ff             ;allow test to change
                       >
29ae : 48              >            pha         ;use stack to load status
29af : 28              >            plp
                        
29b0 : c60c                     dec zpt
                                tst_z rINC,fINC,$ff-fnz
29b2 : 08              >            php         ;save flags
29b3 : a50c            >            lda zpt
29b5 : dd3102          >            cmp rINC,x    ;test result
                       >            trap_ne
29b8 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
29ba : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
29bb : 497d            >            eor #$ff-fnz|fao         ;invert expected 
                       >
29bd : dd3602          >            cmp fINC,x    ;test flags
                       >            trap_ne
29c0 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
29c2 : ca                       dex
29c3 : 300a                     bmi tdec11
29c5 : e001                     cpx #1
29c7 : d0e3                     bne tdec10
29c9 : a981                     lda #$81
29cb : 850c                     sta zpt
29cd : d0dd                     bne tdec10
29cf :                  tdec11
                                next_test
29cf : ad0002          >            lda test_case   ;previous test
29d2 : c922            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
29d4 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0023 =                 >test_num = test_num + 1
29d6 : a923            >            lda #test_num   ;*** this tests' number
29d8 : 8d0002          >            sta test_case
                       >            ;check_ram       ;uncomment to find altere
                        
                        
                        ; absolute memory
29db : a200                     ldx #0
29dd : a97e                     lda #$7e
29df : 8d0302                   sta abst
29e2 :                  tinc2    
                                set_stat 0
                       >            load_flag 0
29e2 : a900            >            lda #0             ;allow test to change I
                       >
29e4 : 48              >            pha         ;use stack to load status
29e5 : 28              >            plp
                        
29e6 : ee0302                   inc abst
                                tst_abs rINC,fINC,0
29e9 : 08              >            php         ;save flags
29ea : ad0302          >            lda abst
29ed : dd3102          >            cmp rINC,x    ;test result
                       >            trap_ne
29f0 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
29f2 : 68              >            pla         ;load status
                       >            eor_flag 0
29f3 : 4930            >            eor #0|fao         ;invert expected flags 
                       >
29f5 : dd3602          >            cmp fINC,x    ;test flags
                       >            trap_ne
29f8 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
29fa : e8                       inx
29fb : e002                     cpx #2
29fd : d005                     bne tinc3
29ff : a9fe                     lda #$fe
2a01 : 8d0302                   sta abst
2a04 : e005             tinc3   cpx #5
2a06 : d0da                     bne tinc2
2a08 : ca                       dex
2a09 : ee0302                   inc abst
2a0c :                  tdec2    
                                set_stat 0
                       >            load_flag 0
2a0c : a900            >            lda #0             ;allow test to change I
                       >
2a0e : 48              >            pha         ;use stack to load status
2a0f : 28              >            plp
                        
2a10 : ce0302                   dec abst
                                tst_abs rINC,fINC,0
2a13 : 08              >            php         ;save flags
2a14 : ad0302          >            lda abst
2a17 : dd3102          >            cmp rINC,x    ;test result
                       >            trap_ne
2a1a : d0fe            >        bne *           ;failed not equal (non zero)
                       >
2a1c : 68              >            pla         ;load status
                       >            eor_flag 0
2a1d : 4930            >            eor #0|fao         ;invert expected flags 
                       >
2a1f : dd3602          >            cmp fINC,x    ;test flags
                       >            trap_ne
2a22 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
2a24 : ca                       dex
2a25 : 300b                     bmi tdec3
2a27 : e001                     cpx #1
2a29 : d0e1                     bne tdec2
2a2b : a981                     lda #$81
2a2d : 8d0302                   sta abst
2a30 : d0da                     bne tdec2
2a32 :                  tdec3
2a32 : a200                     ldx #0
2a34 : a97e                     lda #$7e
2a36 : 8d0302                   sta abst
2a39 :                  tinc12    
                                set_stat $ff
                       >            load_flag $ff
2a39 : a9ff            >            lda #$ff             ;allow test to change
                       >
2a3b : 48              >            pha         ;use stack to load status
2a3c : 28              >            plp
                        
2a3d : ee0302                   inc abst
                                tst_abs rINC,fINC,$ff-fnz
2a40 : 08              >            php         ;save flags
2a41 : ad0302          >            lda abst
2a44 : dd3102          >            cmp rINC,x    ;test result
                       >            trap_ne
2a47 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
2a49 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
2a4a : 497d            >            eor #$ff-fnz|fao         ;invert expected 
                       >
2a4c : dd3602          >            cmp fINC,x    ;test flags
                       >            trap_ne
2a4f : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
2a51 : e8                       inx
2a52 : e002                     cpx #2
2a54 : d005                     bne tinc13
2a56 : a9fe                     lda #$fe
2a58 : 8d0302                   sta abst
2a5b : e005             tinc13   cpx #5
2a5d : d0da                     bne tinc12
2a5f : ca                       dex
2a60 : ee0302                   inc abst
2a63 :                  tdec12    
                                set_stat $ff
                       >            load_flag $ff
2a63 : a9ff            >            lda #$ff             ;allow test to change
                       >
2a65 : 48              >            pha         ;use stack to load status
2a66 : 28              >            plp
                        
2a67 : ce0302                   dec abst
                                tst_abs rINC,fINC,$ff-fnz
2a6a : 08              >            php         ;save flags
2a6b : ad0302          >            lda abst
2a6e : dd3102          >            cmp rINC,x    ;test result
                       >            trap_ne
2a71 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
2a73 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
2a74 : 497d            >            eor #$ff-fnz|fao         ;invert expected 
                       >
2a76 : dd3602          >            cmp fINC,x    ;test flags
                       >            trap_ne
2a79 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
2a7b : ca                       dex
2a7c : 300b                     bmi tdec13
2a7e : e001                     cpx #1
2a80 : d0e1                     bne tdec12
2a82 : a981                     lda #$81
2a84 : 8d0302                   sta abst
2a87 : d0da                     bne tdec12
2a89 :                  tdec13
                                next_test
2a89 : ad0002          >            lda test_case   ;previous test
2a8c : c923            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
2a8e : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0024 =                 >test_num = test_num + 1
2a90 : a924            >            lda #test_num   ;*** this tests' number
2a92 : 8d0002          >            sta test_case
                       >            ;check_ram       ;uncomment to find altere
                        
                        
                        ; zeropage indexed
2a95 : a200                     ldx #0
2a97 : a97e                     lda #$7e
2a99 : 950c             tinc4   sta zpt,x
                                set_stat 0
                       >            load_flag 0
2a9b : a900            >            lda #0             ;allow test to change I
                       >
2a9d : 48              >            pha         ;use stack to load status
2a9e : 28              >            plp
                        
2a9f : f60c                     inc zpt,x
                                tst_zx rINC,fINC,0
2aa1 : 08              >            php         ;save flags
2aa2 : b50c            >            lda zpt,x
2aa4 : dd3102          >            cmp rINC,x    ;test result
                       >            trap_ne
2aa7 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
2aa9 : 68              >            pla         ;load status
                       >            eor_flag 0
2aaa : 4930            >            eor #0|fao         ;invert expected flags 
                       >
2aac : dd3602          >            cmp fINC,x    ;test flags
                       >            trap_ne
2aaf : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
2ab1 : b50c                     lda zpt,x
2ab3 : e8                       inx
2ab4 : e002                     cpx #2
2ab6 : d002                     bne tinc5
2ab8 : a9fe                     lda #$fe
2aba : e005             tinc5   cpx #5
2abc : d0db                     bne tinc4
2abe : ca                       dex
2abf : a902                     lda #2
2ac1 : 950c             tdec4   sta zpt,x 
                                set_stat 0
                       >            load_flag 0
2ac3 : a900            >            lda #0             ;allow test to change I
                       >
2ac5 : 48              >            pha         ;use stack to load status
2ac6 : 28              >            plp
                        
2ac7 : d60c                     dec zpt,x
                                tst_zx rINC,fINC,0
2ac9 : 08              >            php         ;save flags
2aca : b50c            >            lda zpt,x
2acc : dd3102          >            cmp rINC,x    ;test result
                       >            trap_ne
2acf : d0fe            >        bne *           ;failed not equal (non zero)
                       >
2ad1 : 68              >            pla         ;load status
                       >            eor_flag 0
2ad2 : 4930            >            eor #0|fao         ;invert expected flags 
                       >
2ad4 : dd3602          >            cmp fINC,x    ;test flags
                       >            trap_ne
2ad7 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
2ad9 : b50c                     lda zpt,x
2adb : ca                       dex
2adc : 3008                     bmi tdec5
2ade : e001                     cpx #1
2ae0 : d0df                     bne tdec4
2ae2 : a981                     lda #$81
2ae4 : d0db                     bne tdec4
2ae6 :                  tdec5
2ae6 : a200                     ldx #0
2ae8 : a97e                     lda #$7e
2aea : 950c             tinc14  sta zpt,x
                                set_stat $ff
                       >            load_flag $ff
2aec : a9ff            >            lda #$ff             ;allow test to change
                       >
2aee : 48              >            pha         ;use stack to load status
2aef : 28              >            plp
                        
2af0 : f60c                     inc zpt,x
                                tst_zx rINC,fINC,$ff-fnz
2af2 : 08              >            php         ;save flags
2af3 : b50c            >            lda zpt,x
2af5 : dd3102          >            cmp rINC,x    ;test result
                       >            trap_ne
2af8 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
2afa : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
2afb : 497d            >            eor #$ff-fnz|fao         ;invert expected 
                       >
2afd : dd3602          >            cmp fINC,x    ;test flags
                       >            trap_ne
2b00 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
2b02 : b50c                     lda zpt,x
2b04 : e8                       inx
2b05 : e002                     cpx #2
2b07 : d002                     bne tinc15
2b09 : a9fe                     lda #$fe
2b0b : e005             tinc15  cpx #5
2b0d : d0db                     bne tinc14
2b0f : ca                       dex
2b10 : a902                     lda #2
2b12 : 950c             tdec14  sta zpt,x 
                                set_stat $ff
                       >            load_flag $ff
2b14 : a9ff            >            lda #$ff             ;allow test to change
                       >
2b16 : 48              >            pha         ;use stack to load status
2b17 : 28              >            plp
                        
2b18 : d60c                     dec zpt,x
                                tst_zx rINC,fINC,$ff-fnz
2b1a : 08              >            php         ;save flags
2b1b : b50c            >            lda zpt,x
2b1d : dd3102          >            cmp rINC,x    ;test result
                       >            trap_ne
2b20 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
2b22 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
2b23 : 497d            >            eor #$ff-fnz|fao         ;invert expected 
                       >
2b25 : dd3602          >            cmp fINC,x    ;test flags
                       >            trap_ne
2b28 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
2b2a : b50c                     lda zpt,x
2b2c : ca                       dex
2b2d : 3008                     bmi tdec15
2b2f : e001                     cpx #1
2b31 : d0df                     bne tdec14
2b33 : a981                     lda #$81
2b35 : d0db                     bne tdec14
2b37 :                  tdec15
                                next_test
2b37 : ad0002          >            lda test_case   ;previous test
2b3a : c924            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
2b3c : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0025 =                 >test_num = test_num + 1
2b3e : a925            >            lda #test_num   ;*** this tests' number
2b40 : 8d0002          >            sta test_case
                       >            ;check_ram       ;uncomment to find altere
                        
                        
                        ; memory indexed
2b43 : a200                     ldx #0
2b45 : a97e                     lda #$7e
2b47 : 9d0302           tinc6   sta abst,x
                                set_stat 0
                       >            load_flag 0
2b4a : a900            >            lda #0             ;allow test to change I
                       >
2b4c : 48              >            pha         ;use stack to load status
2b4d : 28              >            plp
                        
2b4e : fe0302                   inc abst,x
                                tst_absx rINC,fINC,0
2b51 : 08              >            php         ;save flags
2b52 : bd0302          >            lda abst,x
2b55 : dd3102          >            cmp rINC,x    ;test result
                       >            trap_ne
2b58 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
2b5a : 68              >            pla         ;load status
                       >            eor_flag 0
2b5b : 4930            >            eor #0|fao         ;invert expected flags 
                       >
2b5d : dd3602          >            cmp fINC,x    ;test flags
                       >            trap_ne
2b60 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
2b62 : bd0302                   lda abst,x
2b65 : e8                       inx
2b66 : e002                     cpx #2
2b68 : d002                     bne tinc7
2b6a : a9fe                     lda #$fe
2b6c : e005             tinc7   cpx #5
2b6e : d0d7                     bne tinc6
2b70 : ca                       dex
2b71 : a902                     lda #2
2b73 : 9d0302           tdec6   sta abst,x 
                                set_stat 0
                       >            load_flag 0
2b76 : a900            >            lda #0             ;allow test to change I
                       >
2b78 : 48              >            pha         ;use stack to load status
2b79 : 28              >            plp
                        
2b7a : de0302                   dec abst,x
                                tst_absx rINC,fINC,0
2b7d : 08              >            php         ;save flags
2b7e : bd0302          >            lda abst,x
2b81 : dd3102          >            cmp rINC,x    ;test result
                       >            trap_ne
2b84 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
2b86 : 68              >            pla         ;load status
                       >            eor_flag 0
2b87 : 4930            >            eor #0|fao         ;invert expected flags 
                       >
2b89 : dd3602          >            cmp fINC,x    ;test flags
                       >            trap_ne
2b8c : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
2b8e : bd0302                   lda abst,x
2b91 : ca                       dex
2b92 : 3008                     bmi tdec7
2b94 : e001                     cpx #1
2b96 : d0db                     bne tdec6
2b98 : a981                     lda #$81
2b9a : d0d7                     bne tdec6
2b9c :                  tdec7
2b9c : a200                     ldx #0
2b9e : a97e                     lda #$7e
2ba0 : 9d0302           tinc16  sta abst,x
                                set_stat $ff
                       >            load_flag $ff
2ba3 : a9ff            >            lda #$ff             ;allow test to change
                       >
2ba5 : 48              >            pha         ;use stack to load status
2ba6 : 28              >            plp
                        
2ba7 : fe0302                   inc abst,x
                                tst_absx rINC,fINC,$ff-fnz
2baa : 08              >            php         ;save flags
2bab : bd0302          >            lda abst,x
2bae : dd3102          >            cmp rINC,x    ;test result
                       >            trap_ne
2bb1 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
2bb3 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
2bb4 : 497d            >            eor #$ff-fnz|fao         ;invert expected 
                       >
2bb6 : dd3602          >            cmp fINC,x    ;test flags
                       >            trap_ne
2bb9 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
2bbb : bd0302                   lda abst,x
2bbe : e8                       inx
2bbf : e002                     cpx #2
2bc1 : d002                     bne tinc17
2bc3 : a9fe                     lda #$fe
2bc5 : e005             tinc17  cpx #5
2bc7 : d0d7                     bne tinc16
2bc9 : ca                       dex
2bca : a902                     lda #2
2bcc : 9d0302           tdec16  sta abst,x 
                                set_stat $ff
                       >            load_flag $ff
2bcf : a9ff            >            lda #$ff             ;allow test to change
                       >
2bd1 : 48              >            pha         ;use stack to load status
2bd2 : 28              >            plp
                        
2bd3 : de0302                   dec abst,x
                                tst_absx rINC,fINC,$ff-fnz
2bd6 : 08              >            php         ;save flags
2bd7 : bd0302          >            lda abst,x
2bda : dd3102          >            cmp rINC,x    ;test result
                       >            trap_ne
2bdd : d0fe            >        bne *           ;failed not equal (non zero)
                       >
2bdf : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
2be0 : 497d            >            eor #$ff-fnz|fao         ;invert expected 
                       >
2be2 : dd3602          >            cmp fINC,x    ;test flags
                       >            trap_ne
2be5 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
2be7 : bd0302                   lda abst,x
2bea : ca                       dex
2beb : 3008                     bmi tdec17
2bed : e001                     cpx #1
2bef : d0db                     bne tdec16
2bf1 : a981                     lda #$81
2bf3 : d0d7                     bne tdec16
2bf5 :                  tdec17
                                next_test
2bf5 : ad0002          >            lda test_case   ;previous test
2bf8 : c925            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
2bfa : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0026 =                 >test_num = test_num + 1
2bfc : a926            >            lda #test_num   ;*** this tests' number
2bfe : 8d0002          >            sta test_case
                       >            ;check_ram       ;uncomment to find altere
                        
                        
                        ; testing logical instructions - AND EOR ORA all addre
                        ; AND
2c01 : a203                     ldx #3      ;immediate - self modifying code
2c03 : b51c             tand    lda zpAN,x
2c05 : 8d102c                   sta tandi1
                                set_ax  absANa,0
                       >            load_flag 0
2c08 : a900            >            lda #0             ;allow test to change I
                       >
2c0a : 48              >            pha         ;use stack to load status
2c0b : bd4b02          >            lda absANa,x    ;precharge accu
2c0e : 28              >            plp
                        
2c10 =                  tandi1  equ *+1     ;target for immediate operand
2c0f : 2963                     and #99
                                tst_ax  absrlo,absflo,0
2c11 : 08              >            php         ;save flags
2c12 : dd5302          >            cmp absrlo,x    ;test result
                       >            trap_ne
2c15 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
2c17 : 68              >            pla         ;load status
                       >            eor_flag 0
2c18 : 4930            >            eor #0|fao         ;invert expected flags 
                       >
2c1a : dd5702          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
2c1d : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
2c1f : ca                       dex
2c20 : 10e1                     bpl tand
2c22 : a203                     ldx #3
2c24 : b51c             tand1   lda zpAN,x
2c26 : 8d312c                   sta tandi2
                                set_ax  absANa,$ff
                       >            load_flag $ff
2c29 : a9ff            >            lda #$ff             ;allow test to change
                       >
2c2b : 48              >            pha         ;use stack to load status
2c2c : bd4b02          >            lda absANa,x    ;precharge accu
2c2f : 28              >            plp
                        
2c31 =                  tandi2  equ *+1     ;target for immediate operand
2c30 : 2963                     and #99
                                tst_ax  absrlo,absflo,$ff-fnz
2c32 : 08              >            php         ;save flags
2c33 : dd5302          >            cmp absrlo,x    ;test result
                       >            trap_ne
2c36 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
2c38 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
2c39 : 497d            >            eor #$ff-fnz|fao         ;invert expected 
                       >
2c3b : dd5702          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
2c3e : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
2c40 : ca                       dex
2c41 : 10e1                     bpl tand1
                        
2c43 : a203                     ldx #3      ;zp
2c45 : b51c             tand2    lda zpAN,x
2c47 : 850c                     sta zpt
                                set_ax  absANa,0
                       >            load_flag 0
2c49 : a900            >            lda #0             ;allow test to change I
                       >
2c4b : 48              >            pha         ;use stack to load status
2c4c : bd4b02          >            lda absANa,x    ;precharge accu
2c4f : 28              >            plp
                        
2c50 : 250c                     and zpt
                                tst_ax  absrlo,absflo,0
2c52 : 08              >            php         ;save flags
2c53 : dd5302          >            cmp absrlo,x    ;test result
                       >            trap_ne
2c56 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
2c58 : 68              >            pla         ;load status
                       >            eor_flag 0
2c59 : 4930            >            eor #0|fao         ;invert expected flags 
                       >
2c5b : dd5702          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
2c5e : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
2c60 : ca                       dex
2c61 : 10e2                     bpl tand2
2c63 : a203                     ldx #3
2c65 : b51c             tand3   lda zpAN,x
2c67 : 850c                     sta zpt
                                set_ax  absANa,$ff
                       >            load_flag $ff
2c69 : a9ff            >            lda #$ff             ;allow test to change
                       >
2c6b : 48              >            pha         ;use stack to load status
2c6c : bd4b02          >            lda absANa,x    ;precharge accu
2c6f : 28              >            plp
                        
2c70 : 250c                     and zpt
                                tst_ax  absrlo,absflo,$ff-fnz
2c72 : 08              >            php         ;save flags
2c73 : dd5302          >            cmp absrlo,x    ;test result
                       >            trap_ne
2c76 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
2c78 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
2c79 : 497d            >            eor #$ff-fnz|fao         ;invert expected 
                       >
2c7b : dd5702          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
2c7e : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
2c80 : ca                       dex
2c81 : 10e2                     bpl tand3
                        
2c83 : a203                     ldx #3      ;abs
2c85 : b51c             tand4   lda zpAN,x
2c87 : 8d0302                   sta abst
                                set_ax  absANa,0
                       >            load_flag 0
2c8a : a900            >            lda #0             ;allow test to change I
                       >
2c8c : 48              >            pha         ;use stack to load status
2c8d : bd4b02          >            lda absANa,x    ;precharge accu
2c90 : 28              >            plp
                        
2c91 : 2d0302                   and abst
                                tst_ax  absrlo,absflo,0
2c94 : 08              >            php         ;save flags
2c95 : dd5302          >            cmp absrlo,x    ;test result
                       >            trap_ne
2c98 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
2c9a : 68              >            pla         ;load status
                       >            eor_flag 0
2c9b : 4930            >            eor #0|fao         ;invert expected flags 
                       >
2c9d : dd5702          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
2ca0 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
2ca2 : ca                       dex
2ca3 : 10e0                     bpl tand4
2ca5 : a203                     ldx #3
2ca7 : b51c             tand5   lda zpAN,x
2ca9 : 8d0302                   sta abst
                                set_ax  absANa,$ff
                       >            load_flag $ff
2cac : a9ff            >            lda #$ff             ;allow test to change
                       >
2cae : 48              >            pha         ;use stack to load status
2caf : bd4b02          >            lda absANa,x    ;precharge accu
2cb2 : 28              >            plp
                        
2cb3 : 2d0302                   and abst
                                tst_ax  absrlo,absflo,$ff-fnz
2cb6 : 08              >            php         ;save flags
2cb7 : dd5302          >            cmp absrlo,x    ;test result
                       >            trap_ne
2cba : d0fe            >        bne *           ;failed not equal (non zero)
                       >
2cbc : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
2cbd : 497d            >            eor #$ff-fnz|fao         ;invert expected 
                       >
2cbf : dd5702          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
2cc2 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
2cc4 : ca                       dex
2cc5 : 1002                     bpl tand6
                        
2cc7 : a203                     ldx #3      ;zp,x
2cc9 :                  tand6
                                set_ax  absANa,0
                       >            load_flag 0
2cc9 : a900            >            lda #0             ;allow test to change I
                       >
2ccb : 48              >            pha         ;use stack to load status
2ccc : bd4b02          >            lda absANa,x    ;precharge accu
2ccf : 28              >            plp
                        
2cd0 : 351c                     and zpAN,x
                                tst_ax  absrlo,absflo,0
2cd2 : 08              >            php         ;save flags
2cd3 : dd5302          >            cmp absrlo,x    ;test result
                       >            trap_ne
2cd6 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
2cd8 : 68              >            pla         ;load status
                       >            eor_flag 0
2cd9 : 4930            >            eor #0|fao         ;invert expected flags 
                       >
2cdb : dd5702          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
2cde : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
2ce0 : ca                       dex
2ce1 : 10e6                     bpl tand6
2ce3 : a203                     ldx #3
2ce5 :                  tand7
                                set_ax  absANa,$ff
                       >            load_flag $ff
2ce5 : a9ff            >            lda #$ff             ;allow test to change
                       >
2ce7 : 48              >            pha         ;use stack to load status
2ce8 : bd4b02          >            lda absANa,x    ;precharge accu
2ceb : 28              >            plp
                        
2cec : 351c                     and zpAN,x
                                tst_ax  absrlo,absflo,$ff-fnz
2cee : 08              >            php         ;save flags
2cef : dd5302          >            cmp absrlo,x    ;test result
                       >            trap_ne
2cf2 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
2cf4 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
2cf5 : 497d            >            eor #$ff-fnz|fao         ;invert expected 
                       >
2cf7 : dd5702          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
2cfa : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
2cfc : ca                       dex
2cfd : 10e6                     bpl tand7
                        
2cff : a203                     ldx #3      ;abs,x
2d01 :                  tand8
                                set_ax  absANa,0
                       >            load_flag 0
2d01 : a900            >            lda #0             ;allow test to change I
                       >
2d03 : 48              >            pha         ;use stack to load status
2d04 : bd4b02          >            lda absANa,x    ;precharge accu
2d07 : 28              >            plp
                        
2d08 : 3d3f02                   and absAN,x
                                tst_ax  absrlo,absflo,0
2d0b : 08              >            php         ;save flags
2d0c : dd5302          >            cmp absrlo,x    ;test result
                       >            trap_ne
2d0f : d0fe            >        bne *           ;failed not equal (non zero)
                       >
2d11 : 68              >            pla         ;load status
                       >            eor_flag 0
2d12 : 4930            >            eor #0|fao         ;invert expected flags 
                       >
2d14 : dd5702          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
2d17 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
2d19 : ca                       dex
2d1a : 10e5                     bpl tand8
2d1c : a203                     ldx #3
2d1e :                  tand9
                                set_ax  absANa,$ff
                       >            load_flag $ff
2d1e : a9ff            >            lda #$ff             ;allow test to change
                       >
2d20 : 48              >            pha         ;use stack to load status
2d21 : bd4b02          >            lda absANa,x    ;precharge accu
2d24 : 28              >            plp
                        
2d25 : 3d3f02                   and absAN,x
                                tst_ax  absrlo,absflo,$ff-fnz
2d28 : 08              >            php         ;save flags
2d29 : dd5302          >            cmp absrlo,x    ;test result
                       >            trap_ne
2d2c : d0fe            >        bne *           ;failed not equal (non zero)
                       >
2d2e : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
2d2f : 497d            >            eor #$ff-fnz|fao         ;invert expected 
                       >
2d31 : dd5702          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
2d34 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
2d36 : ca                       dex
2d37 : 10e5                     bpl tand9
                        
2d39 : a003                     ldy #3      ;abs,y
2d3b :                  tand10
                                set_ay  absANa,0
                       >            load_flag 0
2d3b : a900            >            lda #0             ;allow test to change I
                       >
2d3d : 48              >            pha         ;use stack to load status
2d3e : b94b02          >            lda absANa,y    ;precharge accu
2d41 : 28              >            plp
                        
2d42 : 393f02                   and absAN,y
                                tst_ay  absrlo,absflo,0
2d45 : 08              >            php         ;save flags
2d46 : d95302          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
2d49 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
2d4b : 68              >            pla         ;load status
                       >            eor_flag 0
2d4c : 4930            >            eor #0|fao         ;invert expected flags 
                       >
2d4e : d95702          >            cmp absflo,y    ;test flags
                       >            trap_ne
2d51 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
2d53 : 88                       dey
2d54 : 10e5                     bpl tand10
2d56 : a003                     ldy #3
2d58 :                  tand11
                                set_ay  absANa,$ff
                       >            load_flag $ff
2d58 : a9ff            >            lda #$ff             ;allow test to change
                       >
2d5a : 48              >            pha         ;use stack to load status
2d5b : b94b02          >            lda absANa,y    ;precharge accu
2d5e : 28              >            plp
                        
2d5f : 393f02                   and absAN,y
                                tst_ay  absrlo,absflo,$ff-fnz
2d62 : 08              >            php         ;save flags
2d63 : d95302          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
2d66 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
2d68 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
2d69 : 497d            >            eor #$ff-fnz|fao         ;invert expected 
                       >
2d6b : d95702          >            cmp absflo,y    ;test flags
                       >            trap_ne
2d6e : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
2d70 : 88                       dey
2d71 : 10e5                     bpl tand11
                        
2d73 : a206                     ldx #6      ;(zp,x)
2d75 : a003                     ldy #3
2d77 :                  tand12
                                set_ay  absANa,0
                       >            load_flag 0
2d77 : a900            >            lda #0             ;allow test to change I
                       >
2d79 : 48              >            pha         ;use stack to load status
2d7a : b94b02          >            lda absANa,y    ;precharge accu
2d7d : 28              >            plp
                        
2d7e : 213a                     and (indAN,x)
                                tst_ay  absrlo,absflo,0
2d80 : 08              >            php         ;save flags
2d81 : d95302          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
2d84 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
2d86 : 68              >            pla         ;load status
                       >            eor_flag 0
2d87 : 4930            >            eor #0|fao         ;invert expected flags 
                       >
2d89 : d95702          >            cmp absflo,y    ;test flags
                       >            trap_ne
2d8c : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
2d8e : ca                       dex
2d8f : ca                       dex
2d90 : 88                       dey
2d91 : 10e4                     bpl tand12
2d93 : a206                     ldx #6
2d95 : a003                     ldy #3
2d97 :                  tand13
                                set_ay  absANa,$ff
                       >            load_flag $ff
2d97 : a9ff            >            lda #$ff             ;allow test to change
                       >
2d99 : 48              >            pha         ;use stack to load status
2d9a : b94b02          >            lda absANa,y    ;precharge accu
2d9d : 28              >            plp
                        
2d9e : 213a                     and (indAN,x)
                                tst_ay  absrlo,absflo,$ff-fnz
2da0 : 08              >            php         ;save flags
2da1 : d95302          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
2da4 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
2da6 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
2da7 : 497d            >            eor #$ff-fnz|fao         ;invert expected 
                       >
2da9 : d95702          >            cmp absflo,y    ;test flags
                       >            trap_ne
2dac : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
2dae : ca                       dex
2daf : ca                       dex
2db0 : 88                       dey
2db1 : 10e4                     bpl tand13
                        
2db3 : a003                     ldy #3      ;(zp),y
2db5 :                  tand14
                                set_ay  absANa,0
                       >            load_flag 0
2db5 : a900            >            lda #0             ;allow test to change I
                       >
2db7 : 48              >            pha         ;use stack to load status
2db8 : b94b02          >            lda absANa,y    ;precharge accu
2dbb : 28              >            plp
                        
2dbc : 313a                     and (indAN),y
                                tst_ay  absrlo,absflo,0
2dbe : 08              >            php         ;save flags
2dbf : d95302          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
2dc2 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
2dc4 : 68              >            pla         ;load status
                       >            eor_flag 0
2dc5 : 4930            >            eor #0|fao         ;invert expected flags 
                       >
2dc7 : d95702          >            cmp absflo,y    ;test flags
                       >            trap_ne
2dca : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
2dcc : 88                       dey
2dcd : 10e6                     bpl tand14
2dcf : a003                     ldy #3
2dd1 :                  tand15
                                set_ay  absANa,$ff
                       >            load_flag $ff
2dd1 : a9ff            >            lda #$ff             ;allow test to change
                       >
2dd3 : 48              >            pha         ;use stack to load status
2dd4 : b94b02          >            lda absANa,y    ;precharge accu
2dd7 : 28              >            plp
                        
2dd8 : 313a                     and (indAN),y
                                tst_ay  absrlo,absflo,$ff-fnz
2dda : 08              >            php         ;save flags
2ddb : d95302          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
2dde : d0fe            >        bne *           ;failed not equal (non zero)
                       >
2de0 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
2de1 : 497d            >            eor #$ff-fnz|fao         ;invert expected 
                       >
2de3 : d95702          >            cmp absflo,y    ;test flags
                       >            trap_ne
2de6 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
2de8 : 88                       dey
2de9 : 10e6                     bpl tand15
                                next_test
2deb : ad0002          >            lda test_case   ;previous test
2dee : c926            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
2df0 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0027 =                 >test_num = test_num + 1
2df2 : a927            >            lda #test_num   ;*** this tests' number
2df4 : 8d0002          >            sta test_case
                       >            ;check_ram       ;uncomment to find altere
                        
                        
                        ; EOR
2df7 : a203                     ldx #3      ;immediate - self modifying code
2df9 : b520             teor    lda zpEO,x
2dfb : 8d062e                   sta teori1
                                set_ax  absEOa,0
                       >            load_flag 0
2dfe : a900            >            lda #0             ;allow test to change I
                       >
2e00 : 48              >            pha         ;use stack to load status
2e01 : bd4f02          >            lda absEOa,x    ;precharge accu
2e04 : 28              >            plp
                        
2e06 =                  teori1  equ *+1     ;target for immediate operand
2e05 : 4963                     eor #99
                                tst_ax  absrlo,absflo,0
2e07 : 08              >            php         ;save flags
2e08 : dd5302          >            cmp absrlo,x    ;test result
                       >            trap_ne
2e0b : d0fe            >        bne *           ;failed not equal (non zero)
                       >
2e0d : 68              >            pla         ;load status
                       >            eor_flag 0
2e0e : 4930            >            eor #0|fao         ;invert expected flags 
                       >
2e10 : dd5702          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
2e13 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
2e15 : ca                       dex
2e16 : 10e1                     bpl teor
2e18 : a203                     ldx #3
2e1a : b520             teor1   lda zpEO,x
2e1c : 8d272e                   sta teori2
                                set_ax  absEOa,$ff
                       >            load_flag $ff
2e1f : a9ff            >            lda #$ff             ;allow test to change
                       >
2e21 : 48              >            pha         ;use stack to load status
2e22 : bd4f02          >            lda absEOa,x    ;precharge accu
2e25 : 28              >            plp
                        
2e27 =                  teori2  equ *+1     ;target for immediate operand
2e26 : 4963                     eor #99
                                tst_ax  absrlo,absflo,$ff-fnz
2e28 : 08              >            php         ;save flags
2e29 : dd5302          >            cmp absrlo,x    ;test result
                       >            trap_ne
2e2c : d0fe            >        bne *           ;failed not equal (non zero)
                       >
2e2e : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
2e2f : 497d            >            eor #$ff-fnz|fao         ;invert expected 
                       >
2e31 : dd5702          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
2e34 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
2e36 : ca                       dex
2e37 : 10e1                     bpl teor1
                        
2e39 : a203                     ldx #3      ;zp
2e3b : b520             teor2    lda zpEO,x
2e3d : 850c                     sta zpt
                                set_ax  absEOa,0
                       >            load_flag 0
2e3f : a900            >            lda #0             ;allow test to change I
                       >
2e41 : 48              >            pha         ;use stack to load status
2e42 : bd4f02          >            lda absEOa,x    ;precharge accu
2e45 : 28              >            plp
                        
2e46 : 450c                     eor zpt
                                tst_ax  absrlo,absflo,0
2e48 : 08              >            php         ;save flags
2e49 : dd5302          >            cmp absrlo,x    ;test result
                       >            trap_ne
2e4c : d0fe            >        bne *           ;failed not equal (non zero)
                       >
2e4e : 68              >            pla         ;load status
                       >            eor_flag 0
2e4f : 4930            >            eor #0|fao         ;invert expected flags 
                       >
2e51 : dd5702          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
2e54 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
2e56 : ca                       dex
2e57 : 10e2                     bpl teor2
2e59 : a203                     ldx #3
2e5b : b520             teor3   lda zpEO,x
2e5d : 850c                     sta zpt
                                set_ax  absEOa,$ff
                       >            load_flag $ff
2e5f : a9ff            >            lda #$ff             ;allow test to change
                       >
2e61 : 48              >            pha         ;use stack to load status
2e62 : bd4f02          >            lda absEOa,x    ;precharge accu
2e65 : 28              >            plp
                        
2e66 : 450c                     eor zpt
                                tst_ax  absrlo,absflo,$ff-fnz
2e68 : 08              >            php         ;save flags
2e69 : dd5302          >            cmp absrlo,x    ;test result
                       >            trap_ne
2e6c : d0fe            >        bne *           ;failed not equal (non zero)
                       >
2e6e : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
2e6f : 497d            >            eor #$ff-fnz|fao         ;invert expected 
                       >
2e71 : dd5702          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
2e74 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
2e76 : ca                       dex
2e77 : 10e2                     bpl teor3
                        
2e79 : a203                     ldx #3      ;abs
2e7b : b520             teor4   lda zpEO,x
2e7d : 8d0302                   sta abst
                                set_ax  absEOa,0
                       >            load_flag 0
2e80 : a900            >            lda #0             ;allow test to change I
                       >
2e82 : 48              >            pha         ;use stack to load status
2e83 : bd4f02          >            lda absEOa,x    ;precharge accu
2e86 : 28              >            plp
                        
2e87 : 4d0302                   eor abst
                                tst_ax  absrlo,absflo,0
2e8a : 08              >            php         ;save flags
2e8b : dd5302          >            cmp absrlo,x    ;test result
                       >            trap_ne
2e8e : d0fe            >        bne *           ;failed not equal (non zero)
                       >
2e90 : 68              >            pla         ;load status
                       >            eor_flag 0
2e91 : 4930            >            eor #0|fao         ;invert expected flags 
                       >
2e93 : dd5702          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
2e96 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
2e98 : ca                       dex
2e99 : 10e0                     bpl teor4
2e9b : a203                     ldx #3
2e9d : b520             teor5   lda zpEO,x
2e9f : 8d0302                   sta abst
                                set_ax  absEOa,$ff
                       >            load_flag $ff
2ea2 : a9ff            >            lda #$ff             ;allow test to change
                       >
2ea4 : 48              >            pha         ;use stack to load status
2ea5 : bd4f02          >            lda absEOa,x    ;precharge accu
2ea8 : 28              >            plp
                        
2ea9 : 4d0302                   eor abst
                                tst_ax  absrlo,absflo,$ff-fnz
2eac : 08              >            php         ;save flags
2ead : dd5302          >            cmp absrlo,x    ;test result
                       >            trap_ne
2eb0 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
2eb2 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
2eb3 : 497d            >            eor #$ff-fnz|fao         ;invert expected 
                       >
2eb5 : dd5702          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
2eb8 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
2eba : ca                       dex
2ebb : 1002                     bpl teor6
                        
2ebd : a203                     ldx #3      ;zp,x
2ebf :                  teor6
                                set_ax  absEOa,0
                       >            load_flag 0
2ebf : a900            >            lda #0             ;allow test to change I
                       >
2ec1 : 48              >            pha         ;use stack to load status
2ec2 : bd4f02          >            lda absEOa,x    ;precharge accu
2ec5 : 28              >            plp
                        
2ec6 : 5520                     eor zpEO,x
                                tst_ax  absrlo,absflo,0
2ec8 : 08              >            php         ;save flags
2ec9 : dd5302          >            cmp absrlo,x    ;test result
                       >            trap_ne
2ecc : d0fe            >        bne *           ;failed not equal (non zero)
                       >
2ece : 68              >            pla         ;load status
                       >            eor_flag 0
2ecf : 4930            >            eor #0|fao         ;invert expected flags 
                       >
2ed1 : dd5702          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
2ed4 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
2ed6 : ca                       dex
2ed7 : 10e6                     bpl teor6
2ed9 : a203                     ldx #3
2edb :                  teor7
                                set_ax  absEOa,$ff
                       >            load_flag $ff
2edb : a9ff            >            lda #$ff             ;allow test to change
                       >
2edd : 48              >            pha         ;use stack to load status
2ede : bd4f02          >            lda absEOa,x    ;precharge accu
2ee1 : 28              >            plp
                        
2ee2 : 5520                     eor zpEO,x
                                tst_ax  absrlo,absflo,$ff-fnz
2ee4 : 08              >            php         ;save flags
2ee5 : dd5302          >            cmp absrlo,x    ;test result
                       >            trap_ne
2ee8 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
2eea : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
2eeb : 497d            >            eor #$ff-fnz|fao         ;invert expected 
                       >
2eed : dd5702          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
2ef0 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
2ef2 : ca                       dex
2ef3 : 10e6                     bpl teor7
                        
2ef5 : a203                     ldx #3      ;abs,x
2ef7 :                  teor8
                                set_ax  absEOa,0
                       >            load_flag 0
2ef7 : a900            >            lda #0             ;allow test to change I
                       >
2ef9 : 48              >            pha         ;use stack to load status
2efa : bd4f02          >            lda absEOa,x    ;precharge accu
2efd : 28              >            plp
                        
2efe : 5d4302                   eor absEO,x
                                tst_ax  absrlo,absflo,0
2f01 : 08              >            php         ;save flags
2f02 : dd5302          >            cmp absrlo,x    ;test result
                       >            trap_ne
2f05 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
2f07 : 68              >            pla         ;load status
                       >            eor_flag 0
2f08 : 4930            >            eor #0|fao         ;invert expected flags 
                       >
2f0a : dd5702          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
2f0d : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
2f0f : ca                       dex
2f10 : 10e5                     bpl teor8
2f12 : a203                     ldx #3
2f14 :                  teor9
                                set_ax  absEOa,$ff
                       >            load_flag $ff
2f14 : a9ff            >            lda #$ff             ;allow test to change
                       >
2f16 : 48              >            pha         ;use stack to load status
2f17 : bd4f02          >            lda absEOa,x    ;precharge accu
2f1a : 28              >            plp
                        
2f1b : 5d4302                   eor absEO,x
                                tst_ax  absrlo,absflo,$ff-fnz
2f1e : 08              >            php         ;save flags
2f1f : dd5302          >            cmp absrlo,x    ;test result
                       >            trap_ne
2f22 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
2f24 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
2f25 : 497d            >            eor #$ff-fnz|fao         ;invert expected 
                       >
2f27 : dd5702          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
2f2a : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
2f2c : ca                       dex
2f2d : 10e5                     bpl teor9
                        
2f2f : a003                     ldy #3      ;abs,y
2f31 :                  teor10
                                set_ay  absEOa,0
                       >            load_flag 0
2f31 : a900            >            lda #0             ;allow test to change I
                       >
2f33 : 48              >            pha         ;use stack to load status
2f34 : b94f02          >            lda absEOa,y    ;precharge accu
2f37 : 28              >            plp
                        
2f38 : 594302                   eor absEO,y
                                tst_ay  absrlo,absflo,0
2f3b : 08              >            php         ;save flags
2f3c : d95302          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
2f3f : d0fe            >        bne *           ;failed not equal (non zero)
                       >
2f41 : 68              >            pla         ;load status
                       >            eor_flag 0
2f42 : 4930            >            eor #0|fao         ;invert expected flags 
                       >
2f44 : d95702          >            cmp absflo,y    ;test flags
                       >            trap_ne
2f47 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
2f49 : 88                       dey
2f4a : 10e5                     bpl teor10
2f4c : a003                     ldy #3
2f4e :                  teor11
                                set_ay  absEOa,$ff
                       >            load_flag $ff
2f4e : a9ff            >            lda #$ff             ;allow test to change
                       >
2f50 : 48              >            pha         ;use stack to load status
2f51 : b94f02          >            lda absEOa,y    ;precharge accu
2f54 : 28              >            plp
                        
2f55 : 594302                   eor absEO,y
                                tst_ay  absrlo,absflo,$ff-fnz
2f58 : 08              >            php         ;save flags
2f59 : d95302          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
2f5c : d0fe            >        bne *           ;failed not equal (non zero)
                       >
2f5e : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
2f5f : 497d            >            eor #$ff-fnz|fao         ;invert expected 
                       >
2f61 : d95702          >            cmp absflo,y    ;test flags
                       >            trap_ne
2f64 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
2f66 : 88                       dey
2f67 : 10e5                     bpl teor11
                        
2f69 : a206                     ldx #6      ;(zp,x)
2f6b : a003                     ldy #3
2f6d :                  teor12
                                set_ay  absEOa,0
                       >            load_flag 0
2f6d : a900            >            lda #0             ;allow test to change I
                       >
2f6f : 48              >            pha         ;use stack to load status
2f70 : b94f02          >            lda absEOa,y    ;precharge accu
2f73 : 28              >            plp
                        
2f74 : 4142                     eor (indEO,x)
                                tst_ay  absrlo,absflo,0
2f76 : 08              >            php         ;save flags
2f77 : d95302          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
2f7a : d0fe            >        bne *           ;failed not equal (non zero)
                       >
2f7c : 68              >            pla         ;load status
                       >            eor_flag 0
2f7d : 4930            >            eor #0|fao         ;invert expected flags 
                       >
2f7f : d95702          >            cmp absflo,y    ;test flags
                       >            trap_ne
2f82 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
2f84 : ca                       dex
2f85 : ca                       dex
2f86 : 88                       dey
2f87 : 10e4                     bpl teor12
2f89 : a206                     ldx #6
2f8b : a003                     ldy #3
2f8d :                  teor13
                                set_ay  absEOa,$ff
                       >            load_flag $ff
2f8d : a9ff            >            lda #$ff             ;allow test to change
                       >
2f8f : 48              >            pha         ;use stack to load status
2f90 : b94f02          >            lda absEOa,y    ;precharge accu
2f93 : 28              >            plp
                        
2f94 : 4142                     eor (indEO,x)
                                tst_ay  absrlo,absflo,$ff-fnz
2f96 : 08              >            php         ;save flags
2f97 : d95302          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
2f9a : d0fe            >        bne *           ;failed not equal (non zero)
                       >
2f9c : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
2f9d : 497d            >            eor #$ff-fnz|fao         ;invert expected 
                       >
2f9f : d95702          >            cmp absflo,y    ;test flags
                       >            trap_ne
2fa2 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
2fa4 : ca                       dex
2fa5 : ca                       dex
2fa6 : 88                       dey
2fa7 : 10e4                     bpl teor13
                        
2fa9 : a003                     ldy #3      ;(zp),y
2fab :                  teor14
                                set_ay  absEOa,0
                       >            load_flag 0
2fab : a900            >            lda #0             ;allow test to change I
                       >
2fad : 48              >            pha         ;use stack to load status
2fae : b94f02          >            lda absEOa,y    ;precharge accu
2fb1 : 28              >            plp
                        
2fb2 : 5142                     eor (indEO),y
                                tst_ay  absrlo,absflo,0
2fb4 : 08              >            php         ;save flags
2fb5 : d95302          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
2fb8 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
2fba : 68              >            pla         ;load status
                       >            eor_flag 0
2fbb : 4930            >            eor #0|fao         ;invert expected flags 
                       >
2fbd : d95702          >            cmp absflo,y    ;test flags
                       >            trap_ne
2fc0 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
2fc2 : 88                       dey
2fc3 : 10e6                     bpl teor14
2fc5 : a003                     ldy #3
2fc7 :                  teor15
                                set_ay  absEOa,$ff
                       >            load_flag $ff
2fc7 : a9ff            >            lda #$ff             ;allow test to change
                       >
2fc9 : 48              >            pha         ;use stack to load status
2fca : b94f02          >            lda absEOa,y    ;precharge accu
2fcd : 28              >            plp
                        
2fce : 5142                     eor (indEO),y
                                tst_ay  absrlo,absflo,$ff-fnz
2fd0 : 08              >            php         ;save flags
2fd1 : d95302          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
2fd4 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
2fd6 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
2fd7 : 497d            >            eor #$ff-fnz|fao         ;invert expected 
                       >
2fd9 : d95702          >            cmp absflo,y    ;test flags
                       >            trap_ne
2fdc : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
2fde : 88                       dey
2fdf : 10e6                     bpl teor15
                                next_test
2fe1 : ad0002          >            lda test_case   ;previous test
2fe4 : c927            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
2fe6 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0028 =                 >test_num = test_num + 1
2fe8 : a928            >            lda #test_num   ;*** this tests' number
2fea : 8d0002          >            sta test_case
                       >            ;check_ram       ;uncomment to find altere
                        
                        
                        ; OR
2fed : a203                     ldx #3      ;immediate - self modifying code
2fef : b518             tora    lda zpOR,x
2ff1 : 8dfc2f                   sta torai1
                                set_ax  absORa,0
                       >            load_flag 0
2ff4 : a900            >            lda #0             ;allow test to change I
                       >
2ff6 : 48              >            pha         ;use stack to load status
2ff7 : bd4702          >            lda absORa,x    ;precharge accu
2ffa : 28              >            plp
                        
2ffc =                  torai1  equ *+1     ;target for immediate operand
2ffb : 0963                     ora #99
                                tst_ax  absrlo,absflo,0
2ffd : 08              >            php         ;save flags
2ffe : dd5302          >            cmp absrlo,x    ;test result
                       >            trap_ne
3001 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
3003 : 68              >            pla         ;load status
                       >            eor_flag 0
3004 : 4930            >            eor #0|fao         ;invert expected flags 
                       >
3006 : dd5702          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
3009 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
300b : ca                       dex
300c : 10e1                     bpl tora
300e : a203                     ldx #3
3010 : b518             tora1   lda zpOR,x
3012 : 8d1d30                   sta torai2
                                set_ax  absORa,$ff
                       >            load_flag $ff
3015 : a9ff            >            lda #$ff             ;allow test to change
                       >
3017 : 48              >            pha         ;use stack to load status
3018 : bd4702          >            lda absORa,x    ;precharge accu
301b : 28              >            plp
                        
301d =                  torai2  equ *+1     ;target for immediate operand
301c : 0963                     ora #99
                                tst_ax  absrlo,absflo,$ff-fnz
301e : 08              >            php         ;save flags
301f : dd5302          >            cmp absrlo,x    ;test result
                       >            trap_ne
3022 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
3024 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
3025 : 497d            >            eor #$ff-fnz|fao         ;invert expected 
                       >
3027 : dd5702          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
302a : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
302c : ca                       dex
302d : 10e1                     bpl tora1
                        
302f : a203                     ldx #3      ;zp
3031 : b518             tora2    lda zpOR,x
3033 : 850c                     sta zpt
                                set_ax  absORa,0
                       >            load_flag 0
3035 : a900            >            lda #0             ;allow test to change I
                       >
3037 : 48              >            pha         ;use stack to load status
3038 : bd4702          >            lda absORa,x    ;precharge accu
303b : 28              >            plp
                        
303c : 050c                     ora zpt
                                tst_ax  absrlo,absflo,0
303e : 08              >            php         ;save flags
303f : dd5302          >            cmp absrlo,x    ;test result
                       >            trap_ne
3042 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
3044 : 68              >            pla         ;load status
                       >            eor_flag 0
3045 : 4930            >            eor #0|fao         ;invert expected flags 
                       >
3047 : dd5702          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
304a : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
304c : ca                       dex
304d : 10e2                     bpl tora2
304f : a203                     ldx #3
3051 : b518             tora3   lda zpOR,x
3053 : 850c                     sta zpt
                                set_ax  absORa,$ff
                       >            load_flag $ff
3055 : a9ff            >            lda #$ff             ;allow test to change
                       >
3057 : 48              >            pha         ;use stack to load status
3058 : bd4702          >            lda absORa,x    ;precharge accu
305b : 28              >            plp
                        
305c : 050c                     ora zpt
                                tst_ax  absrlo,absflo,$ff-fnz
305e : 08              >            php         ;save flags
305f : dd5302          >            cmp absrlo,x    ;test result
                       >            trap_ne
3062 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
3064 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
3065 : 497d            >            eor #$ff-fnz|fao         ;invert expected 
                       >
3067 : dd5702          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
306a : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
306c : ca                       dex
306d : 10e2                     bpl tora3
                        
306f : a203                     ldx #3      ;abs
3071 : b518             tora4   lda zpOR,x
3073 : 8d0302                   sta abst
                                set_ax  absORa,0
                       >            load_flag 0
3076 : a900            >            lda #0             ;allow test to change I
                       >
3078 : 48              >            pha         ;use stack to load status
3079 : bd4702          >            lda absORa,x    ;precharge accu
307c : 28              >            plp
                        
307d : 0d0302                   ora abst
                                tst_ax  absrlo,absflo,0
3080 : 08              >            php         ;save flags
3081 : dd5302          >            cmp absrlo,x    ;test result
                       >            trap_ne
3084 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
3086 : 68              >            pla         ;load status
                       >            eor_flag 0
3087 : 4930            >            eor #0|fao         ;invert expected flags 
                       >
3089 : dd5702          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
308c : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
308e : ca                       dex
308f : 10e0                     bpl tora4
3091 : a203                     ldx #3
3093 : b518             tora5   lda zpOR,x
3095 : 8d0302                   sta abst
                                set_ax  absORa,$ff
                       >            load_flag $ff
3098 : a9ff            >            lda #$ff             ;allow test to change
                       >
309a : 48              >            pha         ;use stack to load status
309b : bd4702          >            lda absORa,x    ;precharge accu
309e : 28              >            plp
                        
309f : 0d0302                   ora abst
                                tst_ax  absrlo,absflo,$ff-fnz
30a2 : 08              >            php         ;save flags
30a3 : dd5302          >            cmp absrlo,x    ;test result
                       >            trap_ne
30a6 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
30a8 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
30a9 : 497d            >            eor #$ff-fnz|fao         ;invert expected 
                       >
30ab : dd5702          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
30ae : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
30b0 : ca                       dex
30b1 : 1002                     bpl tora6
                        
30b3 : a203                     ldx #3      ;zp,x
30b5 :                  tora6
                                set_ax  absORa,0
                       >            load_flag 0
30b5 : a900            >            lda #0             ;allow test to change I
                       >
30b7 : 48              >            pha         ;use stack to load status
30b8 : bd4702          >            lda absORa,x    ;precharge accu
30bb : 28              >            plp
                        
30bc : 1518                     ora zpOR,x
                                tst_ax  absrlo,absflo,0
30be : 08              >            php         ;save flags
30bf : dd5302          >            cmp absrlo,x    ;test result
                       >            trap_ne
30c2 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
30c4 : 68              >            pla         ;load status
                       >            eor_flag 0
30c5 : 4930            >            eor #0|fao         ;invert expected flags 
                       >
30c7 : dd5702          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
30ca : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
30cc : ca                       dex
30cd : 10e6                     bpl tora6
30cf : a203                     ldx #3
30d1 :                  tora7
                                set_ax  absORa,$ff
                       >            load_flag $ff
30d1 : a9ff            >            lda #$ff             ;allow test to change
                       >
30d3 : 48              >            pha         ;use stack to load status
30d4 : bd4702          >            lda absORa,x    ;precharge accu
30d7 : 28              >            plp
                        
30d8 : 1518                     ora zpOR,x
                                tst_ax  absrlo,absflo,$ff-fnz
30da : 08              >            php         ;save flags
30db : dd5302          >            cmp absrlo,x    ;test result
                       >            trap_ne
30de : d0fe            >        bne *           ;failed not equal (non zero)
                       >
30e0 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
30e1 : 497d            >            eor #$ff-fnz|fao         ;invert expected 
                       >
30e3 : dd5702          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
30e6 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
30e8 : ca                       dex
30e9 : 10e6                     bpl tora7
                        
30eb : a203                     ldx #3      ;abs,x
30ed :                  tora8
                                set_ax  absORa,0
                       >            load_flag 0
30ed : a900            >            lda #0             ;allow test to change I
                       >
30ef : 48              >            pha         ;use stack to load status
30f0 : bd4702          >            lda absORa,x    ;precharge accu
30f3 : 28              >            plp
                        
30f4 : 1d3b02                   ora absOR,x
                                tst_ax  absrlo,absflo,0
30f7 : 08              >            php         ;save flags
30f8 : dd5302          >            cmp absrlo,x    ;test result
                       >            trap_ne
30fb : d0fe            >        bne *           ;failed not equal (non zero)
                       >
30fd : 68              >            pla         ;load status
                       >            eor_flag 0
30fe : 4930            >            eor #0|fao         ;invert expected flags 
                       >
3100 : dd5702          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
3103 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
3105 : ca                       dex
3106 : 10e5                     bpl tora8
3108 : a203                     ldx #3
310a :                  tora9
                                set_ax  absORa,$ff
                       >            load_flag $ff
310a : a9ff            >            lda #$ff             ;allow test to change
                       >
310c : 48              >            pha         ;use stack to load status
310d : bd4702          >            lda absORa,x    ;precharge accu
3110 : 28              >            plp
                        
3111 : 1d3b02                   ora absOR,x
                                tst_ax  absrlo,absflo,$ff-fnz
3114 : 08              >            php         ;save flags
3115 : dd5302          >            cmp absrlo,x    ;test result
                       >            trap_ne
3118 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
311a : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
311b : 497d            >            eor #$ff-fnz|fao         ;invert expected 
                       >
311d : dd5702          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
3120 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
3122 : ca                       dex
3123 : 10e5                     bpl tora9
                        
3125 : a003                     ldy #3      ;abs,y
3127 :                  tora10
                                set_ay  absORa,0
                       >            load_flag 0
3127 : a900            >            lda #0             ;allow test to change I
                       >
3129 : 48              >            pha         ;use stack to load status
312a : b94702          >            lda absORa,y    ;precharge accu
312d : 28              >            plp
                        
312e : 193b02                   ora absOR,y
                                tst_ay  absrlo,absflo,0
3131 : 08              >            php         ;save flags
3132 : d95302          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
3135 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
3137 : 68              >            pla         ;load status
                       >            eor_flag 0
3138 : 4930            >            eor #0|fao         ;invert expected flags 
                       >
313a : d95702          >            cmp absflo,y    ;test flags
                       >            trap_ne
313d : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
313f : 88                       dey
3140 : 10e5                     bpl tora10
3142 : a003                     ldy #3
3144 :                  tora11
                                set_ay  absORa,$ff
                       >            load_flag $ff
3144 : a9ff            >            lda #$ff             ;allow test to change
                       >
3146 : 48              >            pha         ;use stack to load status
3147 : b94702          >            lda absORa,y    ;precharge accu
314a : 28              >            plp
                        
314b : 193b02                   ora absOR,y
                                tst_ay  absrlo,absflo,$ff-fnz
314e : 08              >            php         ;save flags
314f : d95302          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
3152 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
3154 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
3155 : 497d            >            eor #$ff-fnz|fao         ;invert expected 
                       >
3157 : d95702          >            cmp absflo,y    ;test flags
                       >            trap_ne
315a : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
315c : 88                       dey
315d : 10e5                     bpl tora11
                        
315f : a206                     ldx #6      ;(zp,x)
3161 : a003                     ldy #3
3163 :                  tora12
                                set_ay  absORa,0
                       >            load_flag 0
3163 : a900            >            lda #0             ;allow test to change I
                       >
3165 : 48              >            pha         ;use stack to load status
3166 : b94702          >            lda absORa,y    ;precharge accu
3169 : 28              >            plp
                        
316a : 014a                     ora (indOR,x)
                                tst_ay  absrlo,absflo,0
316c : 08              >            php         ;save flags
316d : d95302          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
3170 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
3172 : 68              >            pla         ;load status
                       >            eor_flag 0
3173 : 4930            >            eor #0|fao         ;invert expected flags 
                       >
3175 : d95702          >            cmp absflo,y    ;test flags
                       >            trap_ne
3178 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
317a : ca                       dex
317b : ca                       dex
317c : 88                       dey
317d : 10e4                     bpl tora12
317f : a206                     ldx #6
3181 : a003                     ldy #3
3183 :                  tora13
                                set_ay  absORa,$ff
                       >            load_flag $ff
3183 : a9ff            >            lda #$ff             ;allow test to change
                       >
3185 : 48              >            pha         ;use stack to load status
3186 : b94702          >            lda absORa,y    ;precharge accu
3189 : 28              >            plp
                        
318a : 014a                     ora (indOR,x)
                                tst_ay  absrlo,absflo,$ff-fnz
318c : 08              >            php         ;save flags
318d : d95302          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
3190 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
3192 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
3193 : 497d            >            eor #$ff-fnz|fao         ;invert expected 
                       >
3195 : d95702          >            cmp absflo,y    ;test flags
                       >            trap_ne
3198 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
319a : ca                       dex
319b : ca                       dex
319c : 88                       dey
319d : 10e4                     bpl tora13
                        
319f : a003                     ldy #3      ;(zp),y
31a1 :                  tora14
                                set_ay  absORa,0
                       >            load_flag 0
31a1 : a900            >            lda #0             ;allow test to change I
                       >
31a3 : 48              >            pha         ;use stack to load status
31a4 : b94702          >            lda absORa,y    ;precharge accu
31a7 : 28              >            plp
                        
31a8 : 114a                     ora (indOR),y
                                tst_ay  absrlo,absflo,0
31aa : 08              >            php         ;save flags
31ab : d95302          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
31ae : d0fe            >        bne *           ;failed not equal (non zero)
                       >
31b0 : 68              >            pla         ;load status
                       >            eor_flag 0
31b1 : 4930            >            eor #0|fao         ;invert expected flags 
                       >
31b3 : d95702          >            cmp absflo,y    ;test flags
                       >            trap_ne
31b6 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
31b8 : 88                       dey
31b9 : 10e6                     bpl tora14
31bb : a003                     ldy #3
31bd :                  tora15
                                set_ay  absORa,$ff
                       >            load_flag $ff
31bd : a9ff            >            lda #$ff             ;allow test to change
                       >
31bf : 48              >            pha         ;use stack to load status
31c0 : b94702          >            lda absORa,y    ;precharge accu
31c3 : 28              >            plp
                        
31c4 : 114a                     ora (indOR),y
                                tst_ay  absrlo,absflo,$ff-fnz
31c6 : 08              >            php         ;save flags
31c7 : d95302          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
31ca : d0fe            >        bne *           ;failed not equal (non zero)
                       >
31cc : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
31cd : 497d            >            eor #$ff-fnz|fao         ;invert expected 
                       >
31cf : d95702          >            cmp absflo,y    ;test flags
                       >            trap_ne
31d2 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
                        
31d4 : 88                       dey
31d5 : 10e6                     bpl tora15
                            if I_flag = 3
31d7 : 58                       cli
                            endif                
                                next_test
31d8 : ad0002          >            lda test_case   ;previous test
31db : c928            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
31dd : d0fe            >        bne *           ;failed not equal (non zero)
                       >
0029 =                 >test_num = test_num + 1
31df : a929            >            lda #test_num   ;*** this tests' number
31e1 : 8d0002          >            sta test_case
                       >            ;check_ram       ;uncomment to find altere
                        
                        
                        ; full binary add/subtract test
                        ; iterates through all combinations of operands and ca
                        ; uses increments/decrements to predict result & resul
31e4 : d8                       cld
31e5 : a20e                     ldx #ad2        ;for indexed test
31e7 : a0ff                     ldy #$ff        ;max range
31e9 : a900                     lda #0          ;start with adding zeroes & no
31eb : 850c                     sta adfc        ;carry in - for diag
31ed : 850d                     sta ad1         ;operand 1 - accumulator
31ef : 850e                     sta ad2         ;operand 2 - memory or immedia
31f1 : 8d0302                   sta ada2        ;non zp
31f4 : 850f                     sta adrl        ;expected result bits 0-7
31f6 : 8510                     sta adrh        ;expected result bit 8 (carry 
31f8 : a9ff                     lda #$ff        ;complemented operand 2 for su
31fa : 8512                     sta sb2
31fc : 8d0402                   sta sba2        ;non zp
31ff : a902                     lda #2          ;expected Z-flag
3201 : 8511                     sta adrf
3203 : 18               tadd    clc             ;test with carry clear
3204 : 201d34                   jsr chkadd
3207 : e60c                     inc adfc        ;now with carry
3209 : e60f                     inc adrl        ;result +1
320b : 08                       php             ;save N & Z from low result
320c : 08                       php
320d : 68                       pla             ;accu holds expected flags
320e : 2982                     and #$82        ;mask N & Z
3210 : 28                       plp
3211 : d002                     bne tadd1
3213 : e610                     inc adrh        ;result bit 8 - carry
3215 : 0510             tadd1   ora adrh        ;merge C to expected flags
3217 : 8511                     sta adrf        ;save expected flags except ov
3219 : 38                       sec             ;test with carry set
321a : 201d34                   jsr chkadd
321d : c60c                     dec adfc        ;same for operand +1 but no ca
321f : e60d                     inc ad1
3221 : d0e0                     bne tadd        ;iterate op1
3223 : a900                     lda #0          ;preset result to op2 when op1
3225 : 8510                     sta adrh
3227 : ee0302                   inc ada2
322a : e60e                     inc ad2
322c : 08                       php             ;save NZ as operand 2 becomes 
322d : 68                       pla
322e : 2982                     and #$82        ;mask N00000Z0
3230 : 8511                     sta adrf        ;no need to check carry as we 
3232 : c612                     dec sb2         ;complement subtract operand 2
3234 : ce0402                   dec sba2
3237 : a50e                     lda ad2         
3239 : 850f                     sta adrl
323b : d0c6                     bne tadd        ;iterate op2
                                next_test
323d : ad0002          >            lda test_case   ;previous test
3240 : c929            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
3242 : d0fe            >        bne *           ;failed not equal (non zero)
                       >
002a =                 >test_num = test_num + 1
3244 : a92a            >            lda #test_num   ;*** this tests' number
3246 : 8d0002          >            sta test_case
                       >            ;check_ram       ;uncomment to find altere
                        
                        
                        ; decimal add/subtract test
                        ; *** WARNING - tests documented behavior only! ***
                        ;   only valid BCD operands are tested, N V Z flags ar
                        ; iterates through all valid combinations of operands 
                        ; uses increments/decrements to predict result & carry
3249 : f8                       sed 
324a : a20e                     ldx #ad2        ;for indexed test
324c : a0ff                     ldy #$ff        ;max range
324e : a999                     lda #$99        ;start with adding 99 to 99 wi
3250 : 850d                     sta ad1         ;operand 1 - accumulator
3252 : 850e                     sta ad2         ;operand 2 - memory or immedia
3254 : 8d0302                   sta ada2        ;non zp
3257 : 850f                     sta adrl        ;expected result bits 0-7
3259 : a901                     lda #1          ;set carry in & out
325b : 850c                     sta adfc        ;carry in - for diag
325d : 8510                     sta adrh        ;expected result bit 8 (carry 
325f : a900                     lda #0          ;complemented operand 2 for su
3261 : 8512                     sta sb2
3263 : 8d0402                   sta sba2        ;non zp
3266 : 38               tdad    sec             ;test with carry set
3267 : 20ec32                   jsr chkdad
326a : c60c                     dec adfc        ;now with carry clear
326c : a50f                     lda adrl        ;decimal adjust result
326e : d008                     bne tdad1       ;skip clear carry & preset res
3270 : c610                     dec adrh
3272 : a999                     lda #$99
3274 : 850f                     sta adrl
3276 : d012                     bne tdad3
3278 : 290f             tdad1   and #$f         ;lower nibble mask
327a : d00c                     bne tdad2       ;no decimal adjust needed
327c : c60f                     dec adrl        ;decimal adjust (?0-6)
327e : c60f                     dec adrl
3280 : c60f                     dec adrl
3282 : c60f                     dec adrl
3284 : c60f                     dec adrl
3286 : c60f                     dec adrl
3288 : c60f             tdad2   dec adrl        ;result -1
328a : 18               tdad3   clc             ;test with carry clear
328b : 20ec32                   jsr chkdad
328e : e60c                     inc adfc        ;same for operand -1 but with 
3290 : a50d                     lda ad1         ;decimal adjust operand 1
3292 : f015                     beq tdad5       ;iterate operand 2
3294 : 290f                     and #$f         ;lower nibble mask
3296 : d00c                     bne tdad4       ;skip decimal adjust
3298 : c60d                     dec ad1         ;decimal adjust (?0-6)
329a : c60d                     dec ad1
329c : c60d                     dec ad1
329e : c60d                     dec ad1
32a0 : c60d                     dec ad1
32a2 : c60d                     dec ad1
32a4 : c60d             tdad4   dec ad1         ;operand 1 -1
32a6 : 4c6632                   jmp tdad        ;iterate op1
                        
32a9 : a999             tdad5   lda #$99        ;precharge op1 max
32ab : 850d                     sta ad1
32ad : a50e                     lda ad2         ;decimal adjust operand 2
32af : f030                     beq tdad7       ;end of iteration
32b1 : 290f                     and #$f         ;lower nibble mask
32b3 : d018                     bne tdad6       ;skip decimal adjust
32b5 : c60e                     dec ad2         ;decimal adjust (?0-6)
32b7 : c60e                     dec ad2
32b9 : c60e                     dec ad2
32bb : c60e                     dec ad2
32bd : c60e                     dec ad2
32bf : c60e                     dec ad2
32c1 : e612                     inc sb2         ;complemented decimal adjust f
32c3 : e612                     inc sb2
32c5 : e612                     inc sb2
32c7 : e612                     inc sb2
32c9 : e612                     inc sb2
32cb : e612                     inc sb2
32cd : c60e             tdad6   dec ad2         ;operand 2 -1
32cf : e612                     inc sb2         ;complemented operand for subt
32d1 : a512                     lda sb2
32d3 : 8d0402                   sta sba2        ;copy as non zp operand
32d6 : a50e                     lda ad2
32d8 : 8d0302                   sta ada2        ;copy as non zp operand
32db : 850f                     sta adrl        ;new result since op1+carry=00
32dd : e610                     inc adrh        ;result carry
32df : d085                     bne tdad        ;iterate op2
32e1 : d8               tdad7   cld
                        
32e2 : ad0002                   lda test_case
32e5 : c92a                     cmp #test_num
                                trap_ne         ;test is out of sequence
32e7 : d0fe            >        bne *           ;failed not equal (non zero)
                        
                                
                        ; final RAM integrity test
                        ;   verifies that none of the previous tests has alter
                        ;   designated write areas.
                                check_ram
                       >            ;RAM check disabled - RAM size not set
                        
                        ; *** DEBUG INFO ***
                        ; to debug checksum errors uncomment check_ram in the 
                        ; narrow down the responsible opcode.
                        ; may give false errors when monitor, OS or other back
                        ; allowed during previous tests.
                        
                        
                        
                        ; S U C C E S S **************************************
                        ; -------------       
                                success         ;if you get here everything we
32e9 : 4ce932          >        jmp *           ;test passed, no errors
                        
                        ; -------------       
                        ; S U C C E S S **************************************
                        
                        ; core subroutine of the decimal add/subtract test
                        ; *** WARNING - tests documented behavior only! ***
                        ;   only valid BCD operands are tested, N V Z flags ar
                        ; iterates through all valid combinations of operands 
                        ; uses increments/decrements to predict result & carry
32ec :                  chkdad
                        ; decimal ADC / SBC zp
32ec : 08                       php             ;save carry for subtract
32ed : a50d                     lda ad1
32ef : 650e                     adc ad2         ;perform add
32f1 : 08                       php          
32f2 : c50f                     cmp adrl        ;check result
                                trap_ne         ;bad result
32f4 : d0fe            >        bne *           ;failed not equal (non zero)
                        
32f6 : 68                       pla             ;check flags
32f7 : 2901                     and #1          ;mask carry
32f9 : c510                     cmp adrh
                                trap_ne         ;bad carry
32fb : d0fe            >        bne *           ;failed not equal (non zero)
                        
32fd : 28                       plp
32fe : 08                       php             ;save carry for next add
32ff : a50d                     lda ad1
3301 : e512                     sbc sb2         ;perform subtract
3303 : 08                       php          
3304 : c50f                     cmp adrl        ;check result
                                trap_ne         ;bad result
3306 : d0fe            >        bne *           ;failed not equal (non zero)
                        
3308 : 68                       pla             ;check flags
3309 : 2901                     and #1          ;mask carry
330b : c510                     cmp adrh
                                trap_ne         ;bad flags
330d : d0fe            >        bne *           ;failed not equal (non zero)
                        
330f : 28                       plp
                        ; decimal ADC / SBC abs
3310 : 08                       php             ;save carry for subtract
3311 : a50d                     lda ad1
3313 : 6d0302                   adc ada2        ;perform add
3316 : 08                       php          
3317 : c50f                     cmp adrl        ;check result
                                trap_ne         ;bad result
3319 : d0fe            >        bne *           ;failed not equal (non zero)
                        
331b : 68                       pla             ;check flags
331c : 2901                     and #1          ;mask carry
331e : c510                     cmp adrh
                                trap_ne         ;bad carry
3320 : d0fe            >        bne *           ;failed not equal (non zero)
                        
3322 : 28                       plp
3323 : 08                       php             ;save carry for next add
3324 : a50d                     lda ad1
3326 : ed0402                   sbc sba2        ;perform subtract
3329 : 08                       php          
332a : c50f                     cmp adrl        ;check result
                                trap_ne         ;bad result
332c : d0fe            >        bne *           ;failed not equal (non zero)
                        
332e : 68                       pla             ;check flags
332f : 2901                     and #1          ;mask carry
3331 : c510                     cmp adrh
                                trap_ne         ;bad carry
3333 : d0fe            >        bne *           ;failed not equal (non zero)
                        
3335 : 28                       plp
                        ; decimal ADC / SBC #
3336 : 08                       php             ;save carry for subtract
3337 : a50e                     lda ad2
3339 : 8d3f33                   sta chkdadi     ;self modify immediate
333c : a50d                     lda ad1
333f =                  chkdadi = * + 1         ;operand of the immediate ADC
333e : 6900                     adc #0          ;perform add
3340 : 08                       php          
3341 : c50f                     cmp adrl        ;check result
                                trap_ne         ;bad result
3343 : d0fe            >        bne *           ;failed not equal (non zero)
                        
3345 : 68                       pla             ;check flags
3346 : 2901                     and #1          ;mask carry
3348 : c510                     cmp adrh
                                trap_ne         ;bad carry
334a : d0fe            >        bne *           ;failed not equal (non zero)
                        
334c : 28                       plp
334d : 08                       php             ;save carry for next add
334e : a512                     lda sb2
3350 : 8d5633                   sta chkdsbi     ;self modify immediate
3353 : a50d                     lda ad1
3356 =                  chkdsbi = * + 1         ;operand of the immediate SBC
3355 : e900                     sbc #0          ;perform subtract
3357 : 08                       php          
3358 : c50f                     cmp adrl        ;check result
                                trap_ne         ;bad result
335a : d0fe            >        bne *           ;failed not equal (non zero)
                        
335c : 68                       pla             ;check flags
335d : 2901                     and #1          ;mask carry
335f : c510                     cmp adrh
                                trap_ne         ;bad carry
3361 : d0fe            >        bne *           ;failed not equal (non zero)
                        
3363 : 28                       plp
                        ; decimal ADC / SBC zp,x
3364 : 08                       php             ;save carry for subtract
3365 : a50d                     lda ad1
3367 : 7500                     adc 0,x         ;perform add
3369 : 08                       php          
336a : c50f                     cmp adrl        ;check result
                                trap_ne         ;bad result
336c : d0fe            >        bne *           ;failed not equal (non zero)
                        
336e : 68                       pla             ;check flags
336f : 2901                     and #1          ;mask carry
3371 : c510                     cmp adrh
                                trap_ne         ;bad carry
3373 : d0fe            >        bne *           ;failed not equal (non zero)
                        
3375 : 28                       plp
3376 : 08                       php             ;save carry for next add
3377 : a50d                     lda ad1
3379 : f504                     sbc sb2-ad2,x   ;perform subtract
337b : 08                       php          
337c : c50f                     cmp adrl        ;check result
                                trap_ne         ;bad result
337e : d0fe            >        bne *           ;failed not equal (non zero)
                        
3380 : 68                       pla             ;check flags
3381 : 2901                     and #1          ;mask carry
3383 : c510                     cmp adrh
                                trap_ne         ;bad carry
3385 : d0fe            >        bne *           ;failed not equal (non zero)
                        
3387 : 28                       plp
                        ; decimal ADC / SBC abs,x
3388 : 08                       php             ;save carry for subtract
3389 : a50d                     lda ad1
338b : 7df501                   adc ada2-ad2,x  ;perform add
338e : 08                       php          
338f : c50f                     cmp adrl        ;check result
                                trap_ne         ;bad result
3391 : d0fe            >        bne *           ;failed not equal (non zero)
                        
3393 : 68                       pla             ;check flags
3394 : 2901                     and #1          ;mask carry
3396 : c510                     cmp adrh
                                trap_ne         ;bad carry
3398 : d0fe            >        bne *           ;failed not equal (non zero)
                        
339a : 28                       plp
339b : 08                       php             ;save carry for next add
339c : a50d                     lda ad1
339e : fdf601                   sbc sba2-ad2,x  ;perform subtract
33a1 : 08                       php          
33a2 : c50f                     cmp adrl        ;check result
                                trap_ne         ;bad result
33a4 : d0fe            >        bne *           ;failed not equal (non zero)
                        
33a6 : 68                       pla             ;check flags
33a7 : 2901                     and #1          ;mask carry
33a9 : c510                     cmp adrh
                                trap_ne         ;bad carry
33ab : d0fe            >        bne *           ;failed not equal (non zero)
                        
33ad : 28                       plp
                        ; decimal ADC / SBC abs,y
33ae : 08                       php             ;save carry for subtract
33af : a50d                     lda ad1
33b1 : 790401                   adc ada2-$ff,y  ;perform add
33b4 : 08                       php          
33b5 : c50f                     cmp adrl        ;check result
                                trap_ne         ;bad result
33b7 : d0fe            >        bne *           ;failed not equal (non zero)
                        
33b9 : 68                       pla             ;check flags
33ba : 2901                     and #1          ;mask carry
33bc : c510                     cmp adrh
                                trap_ne         ;bad carry
33be : d0fe            >        bne *           ;failed not equal (non zero)
                        
33c0 : 28                       plp
33c1 : 08                       php             ;save carry for next add
33c2 : a50d                     lda ad1
33c4 : f90501                   sbc sba2-$ff,y  ;perform subtract
33c7 : 08                       php          
33c8 : c50f                     cmp adrl        ;check result
                                trap_ne         ;bad result
33ca : d0fe            >        bne *           ;failed not equal (non zero)
                        
33cc : 68                       pla             ;check flags
33cd : 2901                     and #1          ;mask carry
33cf : c510                     cmp adrh
                                trap_ne         ;bad carry
33d1 : d0fe            >        bne *           ;failed not equal (non zero)
                        
33d3 : 28                       plp
                        ; decimal ADC / SBC (zp,x)
33d4 : 08                       php             ;save carry for subtract
33d5 : a50d                     lda ad1
33d7 : 6144                     adc (lo adi2-ad2,x) ;perform add
33d9 : 08                       php          
33da : c50f                     cmp adrl        ;check result
                                trap_ne         ;bad result
33dc : d0fe            >        bne *           ;failed not equal (non zero)
                        
33de : 68                       pla             ;check flags
33df : 2901                     and #1          ;mask carry
33e1 : c510                     cmp adrh
                                trap_ne         ;bad carry
33e3 : d0fe            >        bne *           ;failed not equal (non zero)
                        
33e5 : 28                       plp
33e6 : 08                       php             ;save carry for next add
33e7 : a50d                     lda ad1
33e9 : e146                     sbc (lo sbi2-ad2,x) ;perform subtract
33eb : 08                       php          
33ec : c50f                     cmp adrl        ;check result
                                trap_ne         ;bad result
33ee : d0fe            >        bne *           ;failed not equal (non zero)
                        
33f0 : 68                       pla             ;check flags
33f1 : 2901                     and #1          ;mask carry
33f3 : c510                     cmp adrh
                                trap_ne         ;bad carry
33f5 : d0fe            >        bne *           ;failed not equal (non zero)
                        
33f7 : 28                       plp
                        ; decimal ADC / SBC (abs),y
33f8 : 08                       php             ;save carry for subtract
33f9 : a50d                     lda ad1
33fb : 7156                     adc (adiy2),y   ;perform add
33fd : 08                       php          
33fe : c50f                     cmp adrl        ;check result
                                trap_ne         ;bad result
3400 : d0fe            >        bne *           ;failed not equal (non zero)
                        
3402 : 68                       pla             ;check flags
3403 : 2901                     and #1          ;mask carry
3405 : c510                     cmp adrh
                                trap_ne         ;bad carry
3407 : d0fe            >        bne *           ;failed not equal (non zero)
                        
3409 : 28                       plp
340a : 08                       php             ;save carry for next add
340b : a50d                     lda ad1
340d : f158                     sbc (sbiy2),y   ;perform subtract
340f : 08                       php          
3410 : c50f                     cmp adrl        ;check result
                                trap_ne         ;bad result
3412 : d0fe            >        bne *           ;failed not equal (non zero)
                        
3414 : 68                       pla             ;check flags
3415 : 2901                     and #1          ;mask carry
3417 : c510                     cmp adrh
                                trap_ne         ;bad carry
3419 : d0fe            >        bne *           ;failed not equal (non zero)
                        
341b : 28                       plp
341c : 60                       rts
                        
                        ; core subroutine of the full binary add/subtract test
                        ; iterates through all combinations of operands and ca
                        ; uses increments/decrements to predict result & resul
341d : a511             chkadd  lda adrf        ;add V-flag if overflow
341f : 2983                     and #$83        ;keep N-----ZC / clear V
3421 : 48                       pha
3422 : a50d                     lda ad1         ;test sign unequal between ope
3424 : 450e                     eor ad2
3426 : 300a                     bmi ckad1       ;no overflow possible - operan
3428 : a50d                     lda ad1         ;test sign equal between opera
342a : 450f                     eor adrl
342c : 1004                     bpl ckad1       ;no overflow occured - operand
342e : 68                       pla
342f : 0940                     ora #$40        ;set V
3431 : 48                       pha
3432 : 68               ckad1   pla
3433 : 8511                     sta adrf        ;save expected flags
                        ; binary ADC / SBC zp
3435 : 08                       php             ;save carry for subtract
3436 : a50d                     lda ad1
3438 : 650e                     adc ad2         ;perform add
343a : 08                       php          
343b : c50f                     cmp adrl        ;check result
                                trap_ne         ;bad result
343d : d0fe            >        bne *           ;failed not equal (non zero)
                        
343f : 68                       pla             ;check flags
3440 : 29c3                     and #$c3        ;mask NV----ZC
3442 : c511                     cmp adrf
                                trap_ne         ;bad flags
3444 : d0fe            >        bne *           ;failed not equal (non zero)
                        
3446 : 28                       plp
3447 : 08                       php             ;save carry for next add
3448 : a50d                     lda ad1
344a : e512                     sbc sb2         ;perform subtract
344c : 08                       php          
344d : c50f                     cmp adrl        ;check result
                                trap_ne         ;bad result
344f : d0fe            >        bne *           ;failed not equal (non zero)
                        
3451 : 68                       pla             ;check flags
3452 : 29c3                     and #$c3        ;mask NV----ZC
3454 : c511                     cmp adrf
                                trap_ne         ;bad flags
3456 : d0fe            >        bne *           ;failed not equal (non zero)
                        
3458 : 28                       plp
                        ; binary ADC / SBC abs
3459 : 08                       php             ;save carry for subtract
345a : a50d                     lda ad1
345c : 6d0302                   adc ada2        ;perform add
345f : 08                       php          
3460 : c50f                     cmp adrl        ;check result
                                trap_ne         ;bad result
3462 : d0fe            >        bne *           ;failed not equal (non zero)
                        
3464 : 68                       pla             ;check flags
3465 : 29c3                     and #$c3        ;mask NV----ZC
3467 : c511                     cmp adrf
                                trap_ne         ;bad flags
3469 : d0fe            >        bne *           ;failed not equal (non zero)
                        
346b : 28                       plp
346c : 08                       php             ;save carry for next add
346d : a50d                     lda ad1
346f : ed0402                   sbc sba2        ;perform subtract
3472 : 08                       php          
3473 : c50f                     cmp adrl        ;check result
                                trap_ne         ;bad result
3475 : d0fe            >        bne *           ;failed not equal (non zero)
                        
3477 : 68                       pla             ;check flags
3478 : 29c3                     and #$c3        ;mask NV----ZC
347a : c511                     cmp adrf
                                trap_ne         ;bad flags
347c : d0fe            >        bne *           ;failed not equal (non zero)
                        
347e : 28                       plp
                        ; binary ADC / SBC #
347f : 08                       php             ;save carry for subtract
3480 : a50e                     lda ad2
3482 : 8d8834                   sta chkadi      ;self modify immediate
3485 : a50d                     lda ad1
3488 =                  chkadi  = * + 1         ;operand of the immediate ADC
3487 : 6900                     adc #0          ;perform add
3489 : 08                       php          
348a : c50f                     cmp adrl        ;check result
                                trap_ne         ;bad result
348c : d0fe            >        bne *           ;failed not equal (non zero)
                        
348e : 68                       pla             ;check flags
348f : 29c3                     and #$c3        ;mask NV----ZC
3491 : c511                     cmp adrf
                                trap_ne         ;bad flags
3493 : d0fe            >        bne *           ;failed not equal (non zero)
                        
3495 : 28                       plp
3496 : 08                       php             ;save carry for next add
3497 : a512                     lda sb2
3499 : 8d9f34                   sta chksbi      ;self modify immediate
349c : a50d                     lda ad1
349f =                  chksbi  = * + 1         ;operand of the immediate SBC
349e : e900                     sbc #0          ;perform subtract
34a0 : 08                       php          
34a1 : c50f                     cmp adrl        ;check result
                                trap_ne         ;bad result
34a3 : d0fe            >        bne *           ;failed not equal (non zero)
                        
34a5 : 68                       pla             ;check flags
34a6 : 29c3                     and #$c3        ;mask NV----ZC
34a8 : c511                     cmp adrf
                                trap_ne         ;bad flags
34aa : d0fe            >        bne *           ;failed not equal (non zero)
                        
34ac : 28                       plp
                        ; binary ADC / SBC zp,x
34ad : 08                       php             ;save carry for subtract
34ae : a50d                     lda ad1
34b0 : 7500                     adc 0,x         ;perform add
34b2 : 08                       php          
34b3 : c50f                     cmp adrl        ;check result
                                trap_ne         ;bad result
34b5 : d0fe            >        bne *           ;failed not equal (non zero)
                        
34b7 : 68                       pla             ;check flags
34b8 : 29c3                     and #$c3        ;mask NV----ZC
34ba : c511                     cmp adrf
                                trap_ne         ;bad flags
34bc : d0fe            >        bne *           ;failed not equal (non zero)
                        
34be : 28                       plp
34bf : 08                       php             ;save carry for next add
34c0 : a50d                     lda ad1
34c2 : f504                     sbc sb2-ad2,x   ;perform subtract
34c4 : 08                       php          
34c5 : c50f                     cmp adrl        ;check result
                                trap_ne         ;bad result
34c7 : d0fe            >        bne *           ;failed not equal (non zero)
                        
34c9 : 68                       pla             ;check flags
34ca : 29c3                     and #$c3        ;mask NV----ZC
34cc : c511                     cmp adrf
                                trap_ne         ;bad flags
34ce : d0fe            >        bne *           ;failed not equal (non zero)
                        
34d0 : 28                       plp
                        ; binary ADC / SBC abs,x
34d1 : 08                       php             ;save carry for subtract
34d2 : a50d                     lda ad1
34d4 : 7df501                   adc ada2-ad2,x  ;perform add
34d7 : 08                       php          
34d8 : c50f                     cmp adrl        ;check result
                                trap_ne         ;bad result
34da : d0fe            >        bne *           ;failed not equal (non zero)
                        
34dc : 68                       pla             ;check flags
34dd : 29c3                     and #$c3        ;mask NV----ZC
34df : c511                     cmp adrf
                                trap_ne         ;bad flags
34e1 : d0fe            >        bne *           ;failed not equal (non zero)
                        
34e3 : 28                       plp
34e4 : 08                       php             ;save carry for next add
34e5 : a50d                     lda ad1
34e7 : fdf601                   sbc sba2-ad2,x  ;perform subtract
34ea : 08                       php          
34eb : c50f                     cmp adrl        ;check result
                                trap_ne         ;bad result
34ed : d0fe            >        bne *           ;failed not equal (non zero)
                        
34ef : 68                       pla             ;check flags
34f0 : 29c3                     and #$c3        ;mask NV----ZC
34f2 : c511                     cmp adrf
                                trap_ne         ;bad flags
34f4 : d0fe            >        bne *           ;failed not equal (non zero)
                        
34f6 : 28                       plp
                        ; binary ADC / SBC abs,y
34f7 : 08                       php             ;save carry for subtract
34f8 : a50d                     lda ad1
34fa : 790401                   adc ada2-$ff,y  ;perform add
34fd : 08                       php          
34fe : c50f                     cmp adrl        ;check result
                                trap_ne         ;bad result
3500 : d0fe            >        bne *           ;failed not equal (non zero)
                        
3502 : 68                       pla             ;check flags
3503 : 29c3                     and #$c3        ;mask NV----ZC
3505 : c511                     cmp adrf
                                trap_ne         ;bad flags
3507 : d0fe            >        bne *           ;failed not equal (non zero)
                        
3509 : 28                       plp
350a : 08                       php             ;save carry for next add
350b : a50d                     lda ad1
350d : f90501                   sbc sba2-$ff,y  ;perform subtract
3510 : 08                       php          
3511 : c50f                     cmp adrl        ;check result
                                trap_ne         ;bad result
3513 : d0fe            >        bne *           ;failed not equal (non zero)
                        
3515 : 68                       pla             ;check flags
3516 : 29c3                     and #$c3        ;mask NV----ZC
3518 : c511                     cmp adrf
                                trap_ne         ;bad flags
351a : d0fe            >        bne *           ;failed not equal (non zero)
                        
351c : 28                       plp
                        ; binary ADC / SBC (zp,x)
351d : 08                       php             ;save carry for subtract
351e : a50d                     lda ad1
3520 : 6144                     adc (lo adi2-ad2,x) ;perform add
3522 : 08                       php          
3523 : c50f                     cmp adrl        ;check result
                                trap_ne         ;bad result
3525 : d0fe            >        bne *           ;failed not equal (non zero)
                        
3527 : 68                       pla             ;check flags
3528 : 29c3                     and #$c3        ;mask NV----ZC
352a : c511                     cmp adrf
                                trap_ne         ;bad flags
352c : d0fe            >        bne *           ;failed not equal (non zero)
                        
352e : 28                       plp
352f : 08                       php             ;save carry for next add
3530 : a50d                     lda ad1
3532 : e146                     sbc (lo sbi2-ad2,x) ;perform subtract
3534 : 08                       php          
3535 : c50f                     cmp adrl        ;check result
                                trap_ne         ;bad result
3537 : d0fe            >        bne *           ;failed not equal (non zero)
                        
3539 : 68                       pla             ;check flags
353a : 29c3                     and #$c3        ;mask NV----ZC
353c : c511                     cmp adrf
                                trap_ne         ;bad flags
353e : d0fe            >        bne *           ;failed not equal (non zero)
                        
3540 : 28                       plp
                        ; binary ADC / SBC (abs),y
3541 : 08                       php             ;save carry for subtract
3542 : a50d                     lda ad1
3544 : 7156                     adc (adiy2),y   ;perform add
3546 : 08                       php          
3547 : c50f                     cmp adrl        ;check result
                                trap_ne         ;bad result
3549 : d0fe            >        bne *           ;failed not equal (non zero)
                        
354b : 68                       pla             ;check flags
354c : 29c3                     and #$c3        ;mask NV----ZC
354e : c511                     cmp adrf
                                trap_ne         ;bad flags
3550 : d0fe            >        bne *           ;failed not equal (non zero)
                        
3552 : 28                       plp
3553 : 08                       php             ;save carry for next add
3554 : a50d                     lda ad1
3556 : f158                     sbc (sbiy2),y   ;perform subtract
3558 : 08                       php          
3559 : c50f                     cmp adrl        ;check result
                                trap_ne         ;bad result
355b : d0fe            >        bne *           ;failed not equal (non zero)
                        
355d : 68                       pla             ;check flags
355e : 29c3                     and #$c3        ;mask NV----ZC
3560 : c511                     cmp adrf
                                trap_ne         ;bad flags
3562 : d0fe            >        bne *           ;failed not equal (non zero)
                        
3564 : 28                       plp
3565 : 60                       rts
                        
                        ; target for the jump absolute test
3566 : 88                       dey
3567 : 88                       dey
3568 :                  test_far
3568 : 08                       php             ;either SP or Y count will fai
3569 : 88                       dey
356a : 88                       dey
356b : 88                       dey
356c : 28                       plp
                                trap_cs         ;flags loaded?
356d : b0fe            >        bcs *           ;failed carry set
                        
                                trap_vs
356f : 70fe            >        bvs *           ;failed overflow set
                        
                                trap_mi
3571 : 30fe            >        bmi *           ;failed minus (bit 7 set)
                        
                                trap_eq 
3573 : f0fe            >        beq *           ;failed equal (zero)
                        
3575 : c946                     cmp #'F'        ;registers loaded?
                                trap_ne
3577 : d0fe            >        bne *           ;failed not equal (non zero)
                        
3579 : e041                     cpx #'A'
                                trap_ne        
357b : d0fe            >        bne *           ;failed not equal (non zero)
                        
357d : c04f                     cpy #('R'-3)
                                trap_ne
357f : d0fe            >        bne *           ;failed not equal (non zero)
                        
3581 : 48                       pha             ;save a,x
3582 : 8a                       txa
3583 : 48                       pha
3584 : ba                       tsx
3585 : e0fd                     cpx #$fd        ;check SP
                                trap_ne
3587 : d0fe            >        bne *           ;failed not equal (non zero)
                        
3589 : 68                       pla             ;restore x
358a : aa                       tax
                                set_stat $ff
                       >            load_flag $ff
358b : a9ff            >            lda #$ff             ;allow test to change
                       >
358d : 48              >            pha         ;use stack to load status
358e : 28              >            plp
                        
358f : 68                       pla             ;restore a
3590 : e8                       inx             ;return registers with modific
3591 : 49aa                     eor #$aa        ;N=1, V=1, Z=0, C=1
3593 : 4c1708                   jmp far_ret
                                
                        ; target for the jump indirect test
                                align
3596 : 9f35             ptr_tst_ind dw test_ind
3598 : 6c08             ptr_ind_ret dw ind_ret
                                trap            ;runover protection
359a : 4c9a35          >        jmp *           ;failed anyway
                        
359d : 88                       dey
359e : 88                       dey
359f :                  test_ind
359f : 08                       php             ;either SP or Y count will fai
35a0 : 88                       dey
35a1 : 88                       dey
35a2 : 88                       dey
35a3 : 28                       plp
                                trap_cs         ;flags loaded?
35a4 : b0fe            >        bcs *           ;failed carry set
                        
                                trap_vs
35a6 : 70fe            >        bvs *           ;failed overflow set
                        
                                trap_mi
35a8 : 30fe            >        bmi *           ;failed minus (bit 7 set)
                        
                                trap_eq 
35aa : f0fe            >        beq *           ;failed equal (zero)
                        
35ac : c949                     cmp #'I'        ;registers loaded?
                                trap_ne
35ae : d0fe            >        bne *           ;failed not equal (non zero)
                        
35b0 : e04e                     cpx #'N'
                                trap_ne        
35b2 : d0fe            >        bne *           ;failed not equal (non zero)
                        
35b4 : c041                     cpy #('D'-3)
                                trap_ne
35b6 : d0fe            >        bne *           ;failed not equal (non zero)
                        
35b8 : 48                       pha             ;save a,x
35b9 : 8a                       txa
35ba : 48                       pha
35bb : ba                       tsx
35bc : e0fd                     cpx #$fd        ;check SP
                                trap_ne
35be : d0fe            >        bne *           ;failed not equal (non zero)
                        
35c0 : 68                       pla             ;restore x
35c1 : aa                       tax
                                set_stat $ff
                       >            load_flag $ff
35c2 : a9ff            >            lda #$ff             ;allow test to change
                       >
35c4 : 48              >            pha         ;use stack to load status
35c5 : 28              >            plp
                        
35c6 : 68                       pla             ;restore a
35c7 : e8                       inx             ;return registers with modific
35c8 : 49aa                     eor #$aa        ;N=1, V=1, Z=0, C=1
35ca : 6c9835                   jmp (ptr_ind_ret)
                                trap            ;runover protection
35cd : 4ccd35          >        jmp *           ;failed anyway
                        
                        
                        ; target for the jump subroutine test
35d0 : 88                       dey
35d1 : 88                       dey
35d2 :                  test_jsr
35d2 : 08                       php             ;either SP or Y count will fai
35d3 : 88                       dey
35d4 : 88                       dey
35d5 : 88                       dey
35d6 : 28                       plp
                                trap_cs         ;flags loaded?
35d7 : b0fe            >        bcs *           ;failed carry set
                        
                                trap_vs
35d9 : 70fe            >        bvs *           ;failed overflow set
                        
                                trap_mi
35db : 30fe            >        bmi *           ;failed minus (bit 7 set)
                        
                                trap_eq 
35dd : f0fe            >        beq *           ;failed equal (zero)
                        
35df : c94a                     cmp #'J'        ;registers loaded?
                                trap_ne
35e1 : d0fe            >        bne *           ;failed not equal (non zero)
                        
35e3 : e053                     cpx #'S'
                                trap_ne        
35e5 : d0fe            >        bne *           ;failed not equal (non zero)
                        
35e7 : c04f                     cpy #('R'-3)
                                trap_ne
35e9 : d0fe            >        bne *           ;failed not equal (non zero)
                        
35eb : 48                       pha             ;save a,x
35ec : 8a                       txa
35ed : 48                       pha       
35ee : ba                       tsx             ;sp -4? (return addr,a,x)
35ef : e0fb                     cpx #$fb
                                trap_ne
35f1 : d0fe            >        bne *           ;failed not equal (non zero)
                        
35f3 : adff01                   lda $1ff        ;propper return on stack
35f6 : c908                     cmp #hi(jsr_ret)
                                trap_ne
35f8 : d0fe            >        bne *           ;failed not equal (non zero)
                        
35fa : adfe01                   lda $1fe
35fd : c9a2                     cmp #lo(jsr_ret)
                                trap_ne
35ff : d0fe            >        bne *           ;failed not equal (non zero)
                        
                                set_stat $ff
                       >            load_flag $ff
3601 : a9ff            >            lda #$ff             ;allow test to change
                       >
3603 : 48              >            pha         ;use stack to load status
3604 : 28              >            plp
                        
3605 : 68                       pla             ;pull x,a
3606 : aa                       tax
3607 : 68                       pla
3608 : e8                       inx             ;return registers with modific
3609 : 49aa                     eor #$aa        ;N=1, V=1, Z=0, C=1
360b : 60                       rts
                                trap            ;runover protection
360c : 4c0c36          >        jmp *           ;failed anyway
                        
                                
                        ;trap in case of unexpected IRQ, NMI, BRK, RESET - BRK
360f :                  nmi_trap
                                trap            ;check stack for conditions at
360f : 4c0f36          >        jmp *           ;failed anyway
                        
3612 :                  res_trap
                                trap            ;unexpected RESET
3612 : 4c1236          >        jmp *           ;failed anyway
                        
                                
3615 : 88                       dey
3616 : 88                       dey
3617 :                  irq_trap                ;BRK test or unextpected BRK o
3617 : 08                       php             ;either SP or Y count will fai
3618 : 88                       dey
3619 : 88                       dey
361a : 88                       dey
                                ;next 4 traps could be caused by unexpected BR
                                ;check stack for BREAK and originating locatio
                                ;possible jump/branch into weeds (uninitialize
361b : c942                     cmp #'B'        ;registers loaded?
                                trap_ne
361d : d0fe            >        bne *           ;failed not equal (non zero)
                        
361f : e052                     cpx #'R'
                                trap_ne        
3621 : d0fe            >        bne *           ;failed not equal (non zero)
                        
3623 : c048                     cpy #('K'-3)
                                trap_ne
3625 : d0fe            >        bne *           ;failed not equal (non zero)
                        
3627 : 850a                     sta irq_a       ;save registers during break t
3629 : 860b                     stx irq_x
362b : ba                       tsx             ;test break on stack
362c : bd0201                   lda $102,x
                                cmp_flag 0      ;break test should have B=1
362f : c930            >            cmp #(0      |fao)&m8    ;expected flags +
                        
                                trap_ne         ; - no break flag on stack
3631 : d0fe            >        bne *           ;failed not equal (non zero)
                        
3633 : 68                       pla
3634 : c934                     cmp #$34        ;should have added interrupt d
                                trap_ne
3636 : d0fe            >        bne *           ;failed not equal (non zero)
                        
3638 : ba                       tsx
3639 : e0fc                     cpx #$fc        ;sp -3? (return addr, flags)
                                trap_ne
363b : d0fe            >        bne *           ;failed not equal (non zero)
                        
363d : adff01                   lda $1ff        ;propper return on stack
3640 : c908                     cmp #hi(brk_ret)
                                trap_ne
3642 : d0fe            >        bne *           ;failed not equal (non zero)
                        
3644 : adfe01                   lda $1fe
3647 : c9d9                     cmp #lo(brk_ret)
                                trap_ne
3649 : d0fe            >        bne *           ;failed not equal (non zero)
                        
                                set_stat $ff
                       >            load_flag $ff
364b : a9ff            >            lda #$ff             ;allow test to change
                       >
364d : 48              >            pha         ;use stack to load status
364e : 28              >            plp
                        
364f : a60b                     ldx irq_x
3651 : e8                       inx             ;return registers with modific
3652 : a50a                     lda irq_a
3654 : 49aa                     eor #$aa        ;N=1, V=1, Z=0, C=1 but origin
3656 : 40                       rti
                                trap            ;runover protection
3657 : 4c5736          >        jmp *           ;failed anyway
                        
                                
                        ;copy of data to initialize BSS segment
                            if load_data_direct != 1
365a :                  zp_init
365a : c3824100         zp1_    db  $c3,$82,$41,0   ;test patterns for LDx BIT
365e : 7f               zp7f_   db  $7f             ;test pattern for compare 
                        ;logical zeropage operands
365f : 001f7180         zpOR_   db  0,$1f,$71,$80   ;test pattern for OR
3663 : 0fff7f80         zpAN_   db  $0f,$ff,$7f,$80 ;test pattern for AND
3667 : ff0f8f8f         zpEO_   db  $ff,$0f,$8f,$8f ;test pattern for EOR
                        ;indirect addressing pointers
366b : 0802             ind1_   dw  abs1            ;indirect pointer to patte
366d : 0902                     dw  abs1+1
366f : 0a02                     dw  abs1+2
3671 : 0b02                     dw  abs1+3
3673 : 0c02                     dw  abs7f
3675 : 1001             inw1_   dw  abs1-$f8        ;indirect pointer for wrap
3677 : 0302             indt_   dw  abst            ;indirect pointer to store
3679 : 0402                     dw  abst+1
367b : 0502                     dw  abst+2
367d : 0602                     dw  abst+3
367f : 0b01             inwt_   dw  abst-$f8        ;indirect pointer for wrap
3681 : 3f02             indAN_  dw  absAN           ;indirect pointer to AND p
3683 : 4002                     dw  absAN+1
3685 : 4102                     dw  absAN+2
3687 : 4202                     dw  absAN+3
3689 : 4302             indEO_  dw  absEO           ;indirect pointer to EOR p
368b : 4402                     dw  absEO+1
368d : 4502                     dw  absEO+2
368f : 4602                     dw  absEO+3
3691 : 3b02             indOR_  dw  absOR           ;indirect pointer to OR pa
3693 : 3c02                     dw  absOR+1
3695 : 3d02                     dw  absOR+2
3697 : 3e02                     dw  absOR+3
                        ;add/subtract indirect pointers
3699 : 0302             adi2_   dw  ada2            ;indirect pointer to opera
369b : 0402             sbi2_   dw  sba2            ;indirect pointer to compl
369d : 0401             adiy2_  dw  ada2-$ff        ;with offset for indirect 
369f : 0501             sbiy2_  dw  sba2-$ff
36a1 :                  zp_end
                            if (zp_end - zp_init) != (zp_bss_end - zp_bss)   
                                ;force assembler error if size is different   
                                ERROR ERROR ERROR   ;mismatch between bss and 
                            endif 
36a1 :                  data_init
36a1 : c3824100         abs1_   db  $c3,$82,$41,0   ;test patterns for LDx BIT
36a5 : 7f               abs7f_  db  $7f             ;test pattern for compare
                        ;loads
36a6 : 80800002         fLDx_   db  fn,fn,0,fz      ;expected flags for load
                        ;shifts
36aa :                  rASL_                       ;expected result ASL & ROL
36aa : 86048200         rROL_   db  $86,$04,$82,0   ; "
36ae : 87058301         rROLc_  db  $87,$05,$83,1   ;expected result ROL +carr
36b2 :                  rLSR_                       ;expected result LSR & ROR
36b2 : 61412000         rROR_   db  $61,$41,$20,0   ; "
36b6 : e1c1a080         rRORc_  db  $e1,$c1,$a0,$80 ;expected result ROR +carr
36ba :                  fASL_                       ;expected flags for shifts
36ba : 81018002         fROL_   db  fnc,fc,fn,fz    ;no carry in
36be : 81018000         fROLc_  db  fnc,fc,fn,0     ;carry in
36c2 :                  fLSR_
36c2 : 01000102         fROR_   db  fc,0,fc,fz      ;no carry in
36c6 : 81808180         fRORc_  db  fnc,fn,fnc,fn   ;carry in
                        ;increments (decrements)
36ca : 7f80ff0001       rINC_   db  $7f,$80,$ff,0,1 ;expected result for INC/D
36cf : 0080800200       fINC_   db  0,fn,fn,fz,0    ;expected flags for INC/DE
                        ;logical memory operand
36d4 : 001f7180         absOR_  db  0,$1f,$71,$80   ;test pattern for OR
36d8 : 0fff7f80         absAN_  db  $0f,$ff,$7f,$80 ;test pattern for AND
36dc : ff0f8f8f         absEO_  db  $ff,$0f,$8f,$8f ;test pattern for EOR
                        ;logical accu operand
36e0 : 00f11f00         absORa_ db  0,$f1,$1f,0     ;test pattern for OR
36e4 : f0ffffff         absANa_ db  $f0,$ff,$ff,$ff ;test pattern for AND
36e8 : fff0f00f         absEOa_ db  $ff,$f0,$f0,$0f ;test pattern for EOR
                        ;logical results
36ec : 00ff7f80         absrlo_ db  0,$ff,$7f,$80
36f0 : 02800080         absflo_ db  fz,fn,0,fn
36f4 :                  data_end
                            if (data_end - data_init) != (data_bss_end - data_
                                ;force assembler error if size is different   
                                ERROR ERROR ERROR   ;mismatch between bss and 
                            endif 
                        
36f4 :                  vec_init
36f4 : 0f36                     dw  nmi_trap
36f6 : 1236                     dw  res_trap
36f8 : 1736                     dw  irq_trap
fffa =                  vec_bss equ $fffa
                            endif                   ;end of RAM init data
                            
                            if (load_data_direct = 1) & (ROM_vectors = 1)  
                                org $fffa       ;vectors
                                dw  nmi_trap
                                dw  res_trap
                                dw  irq_trap
                            endif
                        
fffa =                          end start
                                    
                        
No errors in pass 2.
Wrote binary from address $0400 through $36f9.
Total size 13050 bytes.
Program start address is at $0400 (1024).
